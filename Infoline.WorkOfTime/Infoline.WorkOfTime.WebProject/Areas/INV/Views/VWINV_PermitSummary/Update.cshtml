@model Infoline.WorkOfTime.BusinessData.VWINV_PermitSummary
@{
    ViewBag.Title = "Kayıt Güncelleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using(Html.BeginForm("Update", "VWINV_PermitSummary", FormMethod.Post, new Dictionary<string, object>() {  
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="PermitYearlyDeserved">PermitYearlyDeserved</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.PermitYearlyDeserved, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen PermitYearlyDeserved Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="PermitYearlyUsed">PermitYearlyUsed</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.PermitYearlyUsed, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen PermitYearlyUsed Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="PermitExcuseDeserved">PermitExcuseDeserved</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.PermitExcuseDeserved, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen PermitExcuseDeserved Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="PermitExcuseUsed">PermitExcuseUsed</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.PermitExcuseUsed, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen PermitExcuseUsed Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Name">Name</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Name, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Name Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="IsPaidPermit">IsPaidPermit</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.IsPaidPermit, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen IsPaidPermit Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="PaidPermitDay">PaidPermitDay</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.PaidPermitDay, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen PaidPermitDay Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="CanHourly">CanHourly</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.CanHourly, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen CanHourly Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Descriptions">Descriptions</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Descriptions, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Descriptions Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="BeDocumented">BeDocumented</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.BeDocumented, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen BeDocumented Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="RequestStaff">RequestStaff</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.RequestStaff, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen RequestStaff Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="ViewStaff">ViewStaff</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ViewStaff, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ViewStaff Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="IsPaidPermit_Title">IsPaidPermit_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.IsPaidPermit_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen IsPaidPermit_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="CanHourly_Title">CanHourly_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.CanHourly_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen CanHourly_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="BeDocumented_Title">BeDocumented_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.BeDocumented_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen BeDocumented_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="userId">userId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.userId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen userId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="userId_Title">userId_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.userId_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen userId_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="companyId">companyId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.companyId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen companyId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="companyId_Title">companyId_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.companyId_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen companyId_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="DepartmentId">DepartmentId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.DepartmentId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen DepartmentId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="departmentId_Title">departmentId_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.departmentId_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen departmentId_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="permitTypeId">permitTypeId</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.permitTypeId, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen permitTypeId Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="employeeJobStartDate">employeeJobStartDate</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DatePickerFor(model => model.employeeJobStartDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen employeeJobStartDate Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="employeeDateOfBirth">employeeDateOfBirth</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DatePickerFor(model => model.employeeDateOfBirth).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen employeeDateOfBirth Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="employeeStatus">employeeStatus</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.employeeStatus, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen employeeStatus Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Type_Title">Type_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Type_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Type_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Status_Title">Status_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Status_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Status_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
