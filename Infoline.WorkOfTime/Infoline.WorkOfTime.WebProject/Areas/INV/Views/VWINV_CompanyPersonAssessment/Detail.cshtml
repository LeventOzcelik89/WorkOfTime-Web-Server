@model VMVWINV_CompanyPersonAssessment
@using Infoline.WorkOfTime.BusinessAccess
@{
    ViewBag.Title = "Personel Değerlendirme";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userStatus = (PageSecurity)Session["userStatus"];
    var count = 0;
}
<link href="~/Content/Custom/css/ProgressWizard.css" rel="stylesheet" data-selector="modalContainer" />
<style type="text/css">
    #INV_PersonAssessmentDetail .wzrd {
        margin: 90px 0px 130px 0 !important;
    }

    #INV_PersonAssessmentDetail .input-group {
        position: relative;
        display: table;
        border-collapse: separate;
        margin: 2px;
        height: 26px !important;
    }

    #INV_PersonAssessmentDetail .funkyradio label {
        width: 100%;
        border-radius: 3px;
        border: 1px solid #D1D3D4;
        font-weight: normal;
    }

    .funkyradio input[type="radio"]:empty,
    .funkyradio input[type="checkbox"]:empty {
        display: none;
    }

        .funkyradio input[type="radio"]:empty ~ label,
        .funkyradio input[type="checkbox"]:empty ~ label {
            position: relative;
            line-height: 2.5em;
            text-indent: 3.25em;
            margin-top: 2em;
            cursor: pointer;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

            .funkyradio input[type="radio"]:empty ~ label:before,
            .funkyradio input[type="checkbox"]:empty ~ label:before {
                position: absolute;
                display: block;
                top: 0;
                bottom: 0;
                left: 0;
                content: '';
                width: 2.5em;
                background: #D1D3D4;
                border-radius: 3px 0 0 3px;
            }

    .funkyradio input[type="radio"]:hover:not(:checked) ~ label,
    .funkyradio input[type="checkbox"]:hover:not(:checked) ~ label {
        color: #888;
    }

        .funkyradio input[type="radio"]:hover:not(:checked) ~ label:before,
        .funkyradio input[type="checkbox"]:hover:not(:checked) ~ label:before {
            content: '\2714';
            text-indent: .9em;
            color: #C2C2C2;
        }

    .funkyradio input[type="radio"]:checked ~ label,
    .funkyradio input[type="checkbox"]:checked ~ label {
        color: #777;
    }

        .funkyradio input[type="radio"]:checked ~ label:before,
        .funkyradio input[type="checkbox"]:checked ~ label:before {
            content: '\2714';
            text-indent: .9em;
            color: #333;
            background-color: #ccc;
        }

    .funkyradio input[type="radio"]:focus ~ label:before,
    .funkyradio input[type="checkbox"]:focus ~ label:before {
        box-shadow: 0 0 0 3px #999;
    }

    .funkyradio-default input[type="radio"]:checked ~ label:before,
    .funkyradio-default input[type="checkbox"]:checked ~ label:before {
        color: #333;
        background-color: #ccc;
    }

    .funkyradio-primary input[type="radio"]:checked ~ label:before,
    .funkyradio-primary input[type="checkbox"]:checked ~ label:before {
        color: #fff;
        background-color: #337ab7;
    }

    .funkyradio-success input[type="radio"]:checked ~ label:before,
    .funkyradio-success input[type="checkbox"]:checked ~ label:before {
        color: #fff;
        background-color: #5cb85c;
    }

    .funkyradio-danger input[type="radio"]:checked ~ label:before,
    .funkyradio-danger input[type="checkbox"]:checked ~ label:before {
        color: #fff;
        background-color: #d9534f;
    }

    .funkyradio-warning input[type="radio"]:checked ~ label:before,
    .funkyradio-warning input[type="checkbox"]:checked ~ label:before {
        color: #fff;
        background-color: #f0ad4e;
    }

    .funkyradio-info input[type="radio"]:checked ~ label:before,
    .funkyradio-info input[type="checkbox"]:checked ~ label:before {
        color: #fff;
        background-color: #5bc0de;
    }

    #description .option-input {
        -webkit-appearance: none;
        position: relative;
        top: 10px;
        right: 0;
        bottom: 0;
        left: 0;
        height: 30px;
        width: 30px;
        transition: all 0.15s ease-out 0s;
        background: #cbd1d8;
        border: none;
        color: #fff;
        cursor: pointer;
        display: inline-block;
        margin-right: 0.5rem;
        outline: none;
        position: relative;
        z-index: 1000;
        padding-top: 0px;
    }

    #description .optionInput1:checked {
        background: #5cb85c;
    }

    #description .optionInput2:checked {
        background: #f0ad4e;
    }

    #description .optionInput3:checked {
        background: #d9534f;
    }

    #description .option-input:hover {
        background: #9faab7;
    }


    #description .option-input:checked::before {
        height: 30px;
        width: 30px;
        position: absolute;
        content: '✔';
        display: inline-block;
        font-size: 20px;
        text-align: center;
        line-height: 30px;
    }

    #description .option-input:checked::after {
        -webkit-animation: click-wave 0.65s;
        -moz-animation: click-wave 0.65s;
        animation: click-wave 0.65s;
        background: #40e0d0;
        content: '';
        display: block;
        position: relative;
        z-index: 100;
    }

    #description .option-input.radio {
        border-radius: 50%;
    }

        #description .option-input.radio::after {
            border-radius: 50%;
        }
</style>

<script type="text/javascript">

    $(document)
    .on("ready", function () {

        if ($('#AssessmentType').val() == 6) {
            $('#AssessmentType').val("@EnumINV_CompanyPersonAssessmentType.AltiAy.ToDescription()");
        }
        if ($('#AssessmentType').val() == 2) {
            $('#AssessmentType').val("@EnumINV_CompanyPersonAssessmentType.IkiAy.ToDescription()");
        }
        if ($('#AssessmentType').val() == 12) {
            $('#AssessmentType').val("@EnumINV_CompanyPersonAssessmentType.Yillik.ToDescription()");
        }

        var rating = @Html.Raw(Json.Encode(Model.Rating));

        $.each(rating, function(i,item){
            $("input[name='Rating[" + i +"].answer'][value="+ item.answer + "]").attr('checked','checked');
        });
        $('input[name="ConfirmStatus"]:checked').trigger("change");
    })
    .on('change',"input[name='ConfirmStatus']:checked",function(e){
        e.preventDefault();
        var selectedValue = $("input[name='ConfirmStatus']:checked").val();

        if(selectedValue == 1){
            $('.descriptionSection').removeClass("show").addClass("hide");
        }
        else{
            $('.descriptionSection').removeClass("hide").addClass("show");
        }
    })
    ;

</script>

@using (Html.BeginForm("CompanyPersonAssessmentForm", "VWINV_CompanyPersonAssessment", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" },
    { "id", "INV_PersonAssessmentDetail" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.IdUser)

    <div class="form-group wzrd">
        <div class="col-sm-3 step red">
            <a>
                <span data-person="Person_Title">@Model.Person_Title</span> @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici1Degerlendirme ? "Değerlendirme Yapılıyor" : "Değerlendirilmiş")
            </a>
            <div class="content">
                <div class="number">1.<span>Adım</span></div>
                <div id="ccc">
                    <div><strong>İşlem : </strong> Personel Değerlendirme </div>
                    <div><strong>İşlem Yapan : </strong> @Model.Manager1Approval_Title</div>
                    <div><strong>İşlem Tarihi : </strong> @(Model.Manager1ApprovalDate != null ? string.Format("{0:dd.MM.yyyy HH:mm}", Model.Manager1ApprovalDate) : string.Format("{0:dd.MM.yyyy HH:mm}", DateTime.Now))</div>
                </div>
            </div>
        </div>

        <div class="col-sm-3 step orange @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici1Degerlendirme ||
                                            Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici2Degerlendirme ? "disabled":"")">
            <a>
                2. Yönetici @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici2Degerlendirme ? " Onayı Bekleniyor" :
                              Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici1Degerlendirme ? " Onayı Bekleniyor" :
                                                                                                                                  " Onayladı.")
            </a>
            <div class="content bottom">
                <div class="number" id="ikirenk">2. <span>Adım</span></div>
                <div id="ccc">
                    <div> <strong>İşlem : </strong> Onay </div>
                    <div>
                        <strong>
                            İşlem @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici2Degerlendirme ? " yapan" :
                              Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici1Degerlendirme ? " yapacak" :
                                                                                                                                  " yapan") :
                        </strong>
                        <span data-person="Manager1_Title">@Model.Manager2Approval_Title</span>
                    </div>
                    <div class="@(Model.Manager2Approval == userStatus.user.id || Model.Manager2ApprovalDate != null ? "" : "hide")">
                        <strong>İşlem Tarihi : </strong>
                        @(Model.Manager2ApprovalDate != null ? string.Format("{0:dd.MM.yyyy HH:mm}", Model.Manager2ApprovalDate) : string.Format("{0:dd.MM.yyyy HH:mm}", DateTime.Now))
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-3 step green @( Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.IkDegerlendirme ||
                                            Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.SurecTamamlandi ? "" :
                                           (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.IKYonetici))) ? "" :  "disabled")">
            <a>
                Genel Müdür @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.GenelMudurDegerlendirme ? " Onayı Bekleniyor" :
                              Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici1Degerlendirme ? " Onayı Bekleniyor" :
                                  Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici2Degerlendirme ? " Onayı Bekleniyor." :
                                  " Onayladı.")
            </a>
            <div class="content top">
                <div class="number" id="ikirenk">3. <span>Adım</span></div>
                <div id="ccc">
                    <div> <strong>İşlem : </strong> Onay </div>
                    <div>
                        <strong>
                            İşlem @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.GenelMudurDegerlendirme ? " yapacak" :
                              Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.IkDegerlendirme ? " yapmış" :
                                                                                                                                  " yapacak") :
                        </strong>
                        <span data-person="Manager1_Title">@Model.GeneralManagerApproval_Title</span>
                    </div>

                    <div class="@(Model.GeneralManagerApprovalDate.HasValue ? "" : "hide")">
                        <strong>İşlem Tarihi : </strong>
                        @(Model.GeneralManagerApprovalDate != null ? string.Format("{0:dd.MM.yyyy HH:mm}", Model.GeneralManagerApprovalDate) : string.Format("{0:dd.MM.yyyy HH:mm}", DateTime.Now))
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-3 step blue   @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.SurecTamamlandi ? "":"disabled")">

            <a>
                İ.K. Yöneticisi @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.SurecTamamlandi ? " Islak İmzayı yükledi" : " Islak İmza Yüklemesi bekleniyor")
            </a>
            <div class="content bottom">
                <div class="number" id="ikirenk">4. <span>Adım</span></div>
                <div id="ccc">
                    <div> <strong>İşlem : </strong> Onay </div>
                    <div>
                        <strong>
                            İşlem  @(Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici1Degerlendirme ||
                                        Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.Yonetici2Degerlendirme ||
                                        Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.GenelMudurDegerlendirme ||
                                        Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.IkDegerlendirme ? " yapacak" : " yapmış") :
                        </strong>
                        <span data-person="Manager2_Title">@Model.IkApproval_Title</span>
                    </div>
                    <div class="@(Model.IkApprovalDate.HasValue ? "" : "hide")">
                        <strong>İşlem Tarihi : </strong>
                        @(Model.IkApprovalDate != null ? string.Format("{0:dd.MM.yyyy HH:mm}", Model.IkApprovalDate) : string.Format("{0:dd.MM.yyyy HH:mm}", DateTime.Now))
                    </div>
                </div>
            </div>
        </div>
    </div>


    <fieldset id="information" disabled>
        <legend> Personel Bilgileri </legend>

        <div class="form-group">
            <div class="col-md-6">
                <label class="control-label label-md" for="AssessmentCode">Değerlendirme Kodu</label>
            </div>
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.AssessmentCode, new Dictionary<string, object>()
                {
                    {"class", "form-control"},
                    {"readonly", "readonly"}
                })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <label class="control-label label-md" for="AssessmentType">Değerlendirme Tipi</label>
            </div>
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.AssessmentType, new Dictionary<string, object>()
                {
                    {"class", "form-control"},
                    {"readonly", "readonly"}
                })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <label class="control-label label-md" for="Person_Title">Personel Ad-Soyad</label>
            </div>
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.Person_Title, new Dictionary<string, object>()
                {
                    {"class", "form-control"},
                    {"readonly", "readonly"},
                })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <label class="control-label label-md">Görevi</label>
            </div>
            <div class="col-md-6">

                @Html.TextBoxFor(model => model.task, new Dictionary<string, object>()
                {
                    {"class", "form-control"},
                    {"readonly", "readonly"}
                })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <label class="control-label label-md">Bölümü</label>
            </div>
            <div class="col-md-6">

                @Html.TextBoxFor(model => model.department, new Dictionary<string, object>()
                {
                    {"class", "form-control"},
                    {"readonly", "readonly"}
                })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <label class="control-label label-md">İşe Başlama Tarihi</label>
            </div>
            <div class="col-md-6">

                @Html.TextBoxFor(model => model.jobStartDate, new Dictionary<string, object>()
                {
                    {"class", "form-control"},
                    {"readonly", "readonly"}
                })
            </div>
        </div>

    </fieldset>

    <fieldset id="questionAnswer" disabled>
        <legend> Değerlendirmeler </legend>

        @foreach (var item in Model.Rating)
        {
            <input type="hidden" name="Rating[@count].question" value="@item.question" />
            <div class="form-group">
                <div class="col-md-6">
                    <label class="control-label label-md" for="Rating">@item.question</label>
                </div>
                <div class="col-md-6">
                    <div class="funkyradio">
                        <div class="col-md-4 funkyradio-success">
                            <input type="radio" name="Rating[@count].answer" id="radio1_@count"
                                   value="@Convert.ToInt32(EnumINV_CompanyPersonAssessmentAnswer.Basarili)" />
                            <label for="radio1_@count">Başarılı</label>
                        </div>
                        <div class="col-md-4 funkyradio-warning">
                            <input type="radio" name="Rating[@count].answer" id="radio2_@count"
                                   value="@Convert.ToInt32(EnumINV_CompanyPersonAssessmentAnswer.GelismesiGerekli)" />
                            <label for="radio2_@count">Gelişmesi Gerekli</label>
                        </div>
                        <div class="col-md-4 funkyradio-danger">
                            <input type="radio" name="Rating[@count].answer" id="radio3_@count"
                                   value="@Convert.ToInt32(EnumINV_CompanyPersonAssessmentAnswer.Basarisiz)" />
                            <label for="radio3_@count">Başarısız</label>
                        </div>
                    </div>
                </div>
            </div>
            count++;
        }

    </fieldset>

    <fieldset id="description">
        <legend> Açıklama </legend>

        @if (Model.ApproveStatus == (Int32)EnumINV_CompanyPersonAssessmentApproveStatus.SurecTamamlandi)
        {
            <div class="form-group">
                <div class="col-md-4">
                    <label class="control-label label-md " for="Dosya">Islak İmzalı Değerlendirme Formu</label>
                </div>
                <div class="col-md-8">
                    @(
                    Html.Akilli().FileUpload()
                    .DataTable("INV_CompanyPersonAssessment")
                    .DataId(Model.id)
                    .PreviewMode(true)
                    .DataKey(x => x.fileGroup == "Islak İmzalı Değerlendirme Dosyası")
                    )
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-4">
                <label class="control-label label-md" for="ConfirmStatus"> Personelin Şirkete Uygunluğu </label>
            </div>
            <div class="col-md-8">
                <div class="@(Model.AssessmentType == (Int32)EnumINV_CompanyPersonAssessmentType.IkiAy ? "col-md-6" :
                              Model.AssessmentType == (Int32)EnumINV_CompanyPersonAssessmentType.AltiAy ? "col-md-4" : "col-md-6") ">
                    <label>
                        <input type="radio" id="ConfirmStatus" class="option-input radio optionInput1" name="ConfirmStatus" @(Model.ConfirmStatus == Convert.ToInt32(EnumINV_CompanyPersonConfirmStatus.Uygun) ? "checked" : "")
                               value="@Convert.ToInt32(EnumINV_CompanyPersonConfirmStatus.Uygun)" disabled />
                        @(EnumINV_CompanyPersonConfirmStatus.Uygun.ToDescription())
                    </label>
                </div>

                <div class="@(Model.AssessmentType == (Int32)EnumINV_CompanyPersonAssessmentType.IkiAy ? "hide" :
                              Model.AssessmentType == (Int32)EnumINV_CompanyPersonAssessmentType.AltiAy ? "col-md-4" : "col-md-4") ">
                    <label>
                        <input type="radio" id="ConfirmStatus" class="option-input radio  optionInput2" name="ConfirmStatus" @(Model.ConfirmStatus == Convert.ToInt32(EnumINV_CompanyPersonConfirmStatus.BaskaIs) ? "checked" : "")
                               value="@Convert.ToInt32(EnumINV_CompanyPersonConfirmStatus.BaskaIs)" disabled />
                        @(EnumINV_CompanyPersonConfirmStatus.BaskaIs.ToDescription())
                    </label>
                </div>

                <div class="@(Model.AssessmentType == (Int32)EnumINV_CompanyPersonAssessmentType.IkiAy ? "col-md-6" :
                              Model.AssessmentType == (Int32)EnumINV_CompanyPersonAssessmentType.AltiAy ? "col-md-4" : "col-md-4") ">
                    <label>
                        <input type="radio" id="ConfirmStatus" class="option-input radio optionInput3" name="ConfirmStatus" @(Model.ConfirmStatus == Convert.ToInt32(EnumINV_CompanyPersonConfirmStatus.UygunDegil) ? "checked" : "")
                               value="@Convert.ToInt32(EnumINV_CompanyPersonConfirmStatus.UygunDegil)" disabled />
                        @(EnumINV_CompanyPersonConfirmStatus.UygunDegil.ToDescription())
                    </label>
                </div>

                
            </div>
        </div>

        <div class="form-group descriptionSection ">
            <div class="col-md-4">
                <label class="control-label label-md" for="Manager1ApprovalComment"> @(Model.IkApproval == userStatus.user.id ? "1. Yönetici" : "Görüşleriniz:")</label>
            </div>
            <div class="col-md-8" @((userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.IKYonetici))) ? "disabled" : ":")>
                @Html.TextAreaFor(model => model.Manager1ApprovalComment, new Dictionary<string, object>()
                {
                    {"class", "form-control"},
                    {"placeholder", "Lütfen Personel Hakkındaki Görüşlerinizi Giriniz.."},
                    {((userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.IKYonetici))) ? "readonly" : "unreadonly"), "true" },
               {"disabled","true"}
                })
            </div>
        </div>
    </fieldset>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right hide" type="submit">Kaydet</button>
    </div>
}
