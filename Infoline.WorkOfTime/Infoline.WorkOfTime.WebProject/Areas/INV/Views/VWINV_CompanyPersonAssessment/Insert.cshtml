@model Infoline.WorkOfTime.BusinessData.VWINV_CompanyPersonAssessment
@{
    ViewBag.Title = "Kayıt Ekleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using(Html.BeginForm("Insert", "VWINV_CompanyPersonAssessment", FormMethod.Post, new Dictionary<string, object>() {  
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="AssessmentCode">Değerlendirme Kodu</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.AssessmentCode, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Değerlendirme Kodu Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="ApproveStatus">Onay Durumu</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ApproveStatus, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Onay Durumu Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="AssessmentDate">Değerlendirme Tarihi</label>
        </div>
        <div class="col-md-8">
          @(Html.Akilli().DatePickerFor(model => model.AssessmentDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Değerlendirme Tarihi Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="AssessmentType">Değerlendirme Tipi</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.AssessmentType, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Değerlendime Tipini Giriniz.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Manager1ApprovalDate">1.Yönetici Onay Tarihi</label>
        </div>
        <div class="col-md-8">
          @(Html.Akilli().DatePickerFor(model => model.Manager1ApprovalDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen 1.Yönetici Onay Tarihini Giriniz.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Manager2ApprovalDate">2. Yönetici Onay Tarihi</label>
        </div>
        <div class="col-md-8">
          @(Html.Akilli().DatePickerFor(model => model.Manager2ApprovalDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen 2. Yönetici Onay Tarihini Giriniz.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Manager1ApprovalComment">1.Yönetici Açıklama</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Manager1ApprovalComment, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen 1.Yönetici Açıklaması Giriniz.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Manager2ApprovalComment">2. Yönetici Açıklama</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Manager2ApprovalComment, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen 2. Yöneticinin Açıklamasını Giriniz.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Manager1Approval">1. Yönetici Onayı</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.Manager1Approval).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen 1. Yöneticinin Onay Durumunu seçiniz..")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Manager2Approval">2. Yönetici Onay Durumu</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.Manager2Approval).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen 2. Yönetici Onay Durumunu Seçiniz..")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="IkApprovalDate">IkApprovalDate</label>
        </div>
        <div class="col-md-8">
          @(Html.Akilli().DatePickerFor(model => model.IkApprovalDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen IkApprovalDate Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="IkApproval">IkApproval</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.IkApproval).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen IkApproval seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="IKApprovalComment">IKApprovalComment</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.IKApprovalComment, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen IKApprovalComment Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="IdUser">IdUser</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.IdUser).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen IdUser seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="createdby_Title">createdby_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.createdby_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen createdby_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="changedby_Title">changedby_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.changedby_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen changedby_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="ApproveStatus_Title">ApproveStatus_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ApproveStatus_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ApproveStatus_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Person_Title">Person_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Person_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Person_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Manager1Approval_Title">Manager1Approval_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Manager1Approval_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Manager1Approval_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Manager2Approval_Title">Manager2Approval_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Manager2Approval_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Manager2Approval_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="IkApproval_Title">IkApproval_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.IkApproval_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen IkApproval_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>
    
    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>
}
