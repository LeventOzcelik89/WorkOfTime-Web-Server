@model Infoline.WorkOfTime.BusinessData.VWINV_CompanyPersonAvailabilityPageReport
@{
    ViewBag.Title = "Personel Müsaitlik";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .widget.style1 h2 {
        font-size: 15px;
    }
</style>

<div class="row">
    <div class="colmd3Cards col-xs-12 col-sm-12 col-md-3">
        @Html.Akilli().Card().Color("yellow").Text("Toplam Personel Müsaitlik Sayısı").Value(Model.ToplamMusaitlikSayisi + " Adet").IconClass("fa fa-users")
    </div>
    <div class="colmd3Cards col-xs-12 col-sm-12 col-md-3">
        @Html.Akilli().Card().Color("navy").Text("Çalışma Oranı En Yüksek Personel").Value(Model.EnCokMusaitlikPersoneli).IconClass("fa fa-user")
    </div>
    <div class="colmd3Cards col-xs-12 col-sm-12 col-md-3">
        @Html.Akilli().Card().Color("blue").Text("Çalışma Oranı En Yüksek Proje").Value(Model.EnCokMusaitlikProjesi).IconClass("fa fa-clipboard")
    </div>
    <div class="colmd3Cards col-xs-12 col-sm-12 col-md-3">
        @Html.Akilli().Card().Color("red").Text("En Son Kaydı Yapılan Personel").Value(Model.EnSonEklenenPersonel).IconClass("fa fa-user-circle")
    </div>
</div>


<div class="ibox-content">
    <fieldset>
        <legend>  Personel Müsaitlik</legend>

        @(Html.Akilli()
            .Grid<Infoline.WorkOfTime.BusinessData.VWINV_CompanyPersonAvailability>("VWINV_CompanyPersonAvailability")
            .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWINV_CompanyPersonAvailability", new { area = "INV" })).PageSize(25))
            .Columns(x =>
            {
                x.Bound(y => y.id).GridSelector(GridSelectorType.Checkbox);
                x.Bound(y => y.Person_Title).Title("Personel Adı").Width(300);
                x.Bound(y => y.Project_Title).Title("Proje Adı").Width(300);
                x.Bound(y => y.rate).Title("Oran").Width(200);
                x.Bound(y => y.StartDate).Title("Başlangıç Tarihi").Width(350).Format(Extensions.DateFormatShort(true));
                x.Bound(y => y.EndDate).Title("Bitiş Tarihi").Width(350).Format(Extensions.DateFormatShort(true));
            })
            .Selectable(x => x.Mode(GridSelectionMode.Multiple))
            .ToolBar(x =>
            {
                x.Custom().Text("Ekle").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWINV_CompanyPersonAvailability", new { area = "INV" }));
                x.Custom().Text("Düzenle").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWINV_CompanyPersonAvailability", new { area = "INV" }));
                x.Custom().Text("Detay").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWINV_CompanyPersonAvailability", new { area = "INV" }));
                x.Custom().Text("SİL").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWINV_CompanyPersonAvailability", new { area = "INV" }));
            }))
    </fieldset>
</div>