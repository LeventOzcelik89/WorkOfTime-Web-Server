@model Infoline.WorkOfTime.BusinessData.VWINV_PermitOffical
@{
    ViewBag.Title = "Resmi İzin Düzenleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Update", "VWINV_PermitOffical", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="Type">Resmi İzin Tipi</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
              .DropDownListFor(model => model.Type)
              .OptionLabel("Lütfen Resmi İzin Tipi Seçiniz..")
              .DataValueField("Id").DataTextField("enumDescription")
              .Action(b => b.Action("GetEnums", "General", new { area = string.Empty }))
              .Sort(x => x.Add("enumDescription").Ascending()).Validate(Validations.Required)
              .Filter<Infoline.WorkOfTime.BusinessData.SYS_Enums>(a => a.tableName == "INV_PermitOffical" && a.fieldName == "Type")
              .Execute("enumKey")
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="StartDate">İzin Başlangıç Tarihi</label>
        </div>
        <div class="col-md-8">
            @(
                Html.Akilli()
                .DatePickerFor(model => model.StartDate)
                .Format("dd.MM.yyyy 08:30")
                .MaxDateElement("EndDate")
                .Validate(Validations.Required)
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="EndDate">İzin Bitiş Tarihi</label>
        </div>
        <div class="col-md-8">
            @(
                Html.Akilli()
                .DatePickerFor(model => model.EndDate)
                .Format("dd.MM.yyyy 18:00")
                .MinDateElement("StartDate")
                .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
