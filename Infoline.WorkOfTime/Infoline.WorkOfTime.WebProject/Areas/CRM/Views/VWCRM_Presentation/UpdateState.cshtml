@using Infoline.WorkOfTime.BusinessAccess
@model Infoline.WorkOfTime.BusinessData.CRM_Presentation
@{
    ViewBag.Title = "Potansiyel/Fırsat Aşamasını Güncelle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("UpdateState", "VWCRM_Presentation", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" },
    { "data-before", "beforeFunc" },
    { "id", "VWCRM_PresentationUpdateStateForm" }
}))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(a => a.id)



    <div class="form-group">
        <div class="col-md-3">
            <label class="control-label label-md req" for="Name">Potansiyel/Fırsat Adı</label>
        </div>
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.Name, new Dictionary<string, object>()
            {
                { "class", "form-control" },
                { "placeholder", "Lütfen Potansiyel/Fırsat Adını Girin.." },
                { "readonly", "readonly" }
            })
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-3">
            <label class="control-label label-md req" for="PresentationStageId">Aşama</label>
        </div>
        <div class="col-md-9">

            @(Html.Akilli()
              .DropDownListFor(model => model.PresentationStageId)
              .OptionLabel("Lütfen Aşama Seçiniz..")
              .MinLength(2)
              .Template("<div style=\"background: #=data.color#;width:20px;height:20px;float:left;margin-right: 15px;margin-top:5px\" ></div><span>#: data.Name#</span>")
              .ValueTemplate("<div style=\"background: #=data.color#;width:20px;height:20px;float:left;margin-top: 4px;margin-left:10px;\" ></div><span>#: data.Name#</span>")
              .DataValueField("Id")
              .DataTextField("Name")
              .Action(b => b.Action("GetCRM_ManagerStageCodeAndName", "General", new { area = string.Empty }))
              .Sort(x => x.Add("Name").Ascending())
              .Validate(Validations.Required)
              .Execute()
            )
        </div>
    </div>

    <div class="hide">
        @(Html.Akilli().MapInput().Name("location").Navigation(true))
    </div>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit"><i class="fa fa-save" style="margin-right: 5px"></i>Güncelle</button>
    </div>

}