@model VMCRM_ContactModel
@{
    ViewBag.Title = "Potansiyel/Fırsat Aktivite Detayı";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var contactAction = Model.contactActions.OrderByDescending(a => a.created).FirstOrDefault();
}


<link href="/Content/UserLocationMap/map.css" rel="stylesheet" data-selector="modalContainer" />
<script src="/Content/UserLocationMap/map.js" data-selector="modalContainer"></script>

<script type="text/javascript" data-selector="modalContainer">
        var control = false;
        var selectedFeature = null;

        var page = {
            popup: null,
        defines: {
            data: [],
            filteredData: [],
            locationsData: [],
            customerLocation: [],
            },
        dfn: {
            harita: new AkilliHarita('contactMap', {
                  zoom: 7,
                  minZoom: 0,
                  altlik: "Default1",
                  uiAltlik: false,
                  uiDefault: true,
                  uiSearch: false,
                  uiMinimap: false,
                  uiScaleLine: false,
                  uiMousePosition: false,
                  uiMesurement: false,
                  uiInfo: false
                }),
            },
        fn: {
        zoomIns: function (e) {
           $('.ol-zoom-in').trigger("click");
                },
        zoomOut: function (e) {
            $('.ol-zoom-out').trigger("click");
                },
        zoomMove: function (e) {
            $(e).toggleClass("active");
        if ($(e).hasClass("active")) {
            $('[data-tool="DragZoom"]').trigger("click");
                    } else {
            $('[data-tool="DragPan"]').trigger("click");
                    }
                },
        homes: function (e) {
            $('[data-tool="Home"]').trigger("click");
                },
        fullScreen: function (e) {
            $(e).toggleClass("active");
        $('.ol-full-screen-false').trigger("click");
                },
        layersSwip: function (e) {
            $(e).toggleClass("active");
        $('[data-tool="Swipe"]').trigger("click");
                },
        slideTab: function (elem, target) {

                    var hasActive = $(elem).hasClass("active");
        $(elem).parent().find("button").removeClass("active");

        if (hasActive) {
            $(".btn-bar.right").animate({ right: -430 }, 200);
                    } else {
            $(elem).addClass("active");
        $(".btn-bar.right").animate({right: -430 }, 200, function () {
            $('.pan-container').find('.pan-content').hide();
        $('.pan-container').find("#" + target).show();
        $(".btn-bar.right").animate({right: 15 }, 200);
                        });
                    }
                },
        colorSelect: function (e) {
                    if ($('#ColorBox').hasClass("hide")) {
            $('#ColorBox').removeClass("hide");
                    } else {
            $('#ColorBox').addClass("hide");
                    }
                },
        colorInfoSelect: function (e) {
                    if ($('#ColorInfo').hasClass("hide")) {
            $('#ColorInfo').removeClass("hide");
                    } else {
            $('#ColorInfo').addClass("hide");
                    }
                },
        searchSelect: function (e) {
                    if ($('.search-content')[0].style.display == "none") {
            $('[data-target=".search-content"]').trigger("click");
                    } else {
            $('.search-content')[0].style.display = "none";
                    }
                }
            },
        changePresId: "",
        data: null,
        init: function () {

            $('[data-original-title]').tooltip();

        var svg = '<svg id="Capa_1" data-name="Capa 1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="64px" height="64px" viewBox="0 0 512 512"><path fill="#1ab394" d="M256,0A160,160,0,0,0,96,160a158.2,158.2,0,0,0,15.7,69.1C112.2,230.3,256,512,256,512L398.6,232.6A160,160,0,0,0,256,0Zm0,256a96,96,0,1,1,96-96A96,96,0,0,1,256,256Z" /><circle fill="#ededed" cx="256" cy="160" r="96" /><path transform="rotate(180, 0, 0)  translate(-322,-200) scale(0.12)" fill="#1ab394" d="M1070-88q0-21-2-63h-1067q0 10 0 31t-1 32q0 30 1 37 12 49 64 85t112 53 125 47 97 65q17 22 17 38 0 22-11 73-4 21-10 37t-16 33-16 31q-15 35-33 132-6 38-6 75 0 105 54 168t157 63 158-63 53-168q0-31-7-75-14-89-32-132-6-14-15-31t-16-33-11-37q-11-51-11-73 0-18 17-38 31-36 97-65t125-47 111-53 64-85q2-8 2-37z" /></svg>';
        var firstLocation = new ol.style.Style({
            image: new ol.style.Icon({
            opacity: 1,
        src: 'data:image/svg+xml,' + escape(svg),
        scale: 1.0,
        anchor: [0.5, 64],
        anchorXUnits: 'fraction',
        anchorYUnits: 'pixels',
                    })
                });

        svg = '<svg id="Capa_1" data-name="Capa 1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="64px" height="64px" viewBox="0 0 512 512"><path fill="#ff0202" d="M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z" /></svg>';
        var locations = new ol.style.Style({
            image: new ol.style.Icon({
            opacity: 1,
        src: 'data:image/svg+xml,' + escape(svg),
        scale: 0.18,
        anchor: [0.5, 64],
        anchorXUnits: 'fraction',
        anchorYUnits: 'pixels',
                    })
                });

        svg = '<svg id="Capa_1" data-name="Capa 1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="64px" height="64px" viewBox="0 0 512 512"><path fill="#f8ac59" d="M256,0A160,160,0,0,0,96,160a158.2,158.2,0,0,0,15.7,69.1C112.2,230.3,256,512,256,512L398.6,232.6A160,160,0,0,0,256,0Zm0,256a96,96,0,1,1,96-96A96,96,0,0,1,256,256Z" /><circle fill="#ededed" cx="256" cy="160" r="96" /><path transform="rotate(180, 0, 0)  translate(-322,-200) scale(0.12)" fill="#f8ac59" d="M1070-88q0-21-2-63h-1067q0 10 0 31t-1 32q0 30 1 37 12 49 64 85t112 53 125 47 97 65q17 22 17 38 0 22-11 73-4 21-10 37t-16 33-16 31q-15 35-33 132-6 38-6 75 0 105 54 168t157 63 158-63 53-168q0-31-7-75-14-89-32-132-6-14-15-31t-16-33-11-37q-11-51-11-73 0-18 17-38 31-36 97-65t125-47 111-53 64-85q2-8 2-37z" /></svg>';
        var lastLocation = new ol.style.Style({
            image: new ol.style.Icon({
            opacity: 1,
        src: 'data:image/svg+xml,' + escape(svg),
        scale: 1.0,
        anchor: [0.5, 64],
        anchorXUnits: 'fraction',
        anchorYUnits: 'pixels',
                    })
        });

        svg = '<svg id="Capa_1" data-name="Capa 1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="64px" height="64px" viewBox="0 0 512 512"><path fill="#757575" d="M256,0A160,160,0,0,0,96,160a158.2,158.2,0,0,0,15.7,69.1C112.2,230.3,256,512,256,512L398.6,232.6A160,160,0,0,0,256,0Zm0,256a96,96,0,1,1,96-96A96,96,0,0,1,256,256Z" /><circle fill="#ededed" cx="256" cy="160" r="96" /><path transform="rotate(180, 0, 0)  translate(-322,-200) scale(0.12)" fill="#f8ac59" d="M1070-88q0-21-2-63h-1067q0 10 0 31t-1 32q0 30 1 37 12 49 64 85t112 53 125 47 97 65q17 22 17 38 0 22-11 73-4 21-10 37t-16 33-16 31q-15 35-33 132-6 38-6 75 0 105 54 168t157 63 158-63 53-168q0-31-7-75-14-89-32-132-6-14-15-31t-16-33-11-37q-11-51-11-73 0-18 17-38 31-36 97-65t125-47 111-53 64-85q2-8 2-37z" /></svg>';



        var actionLocation = new ol.style.Style({
            image: new ol.style.Icon({
            opacity: 1,
                src: 'data:image/svg+xml,' + escape(svg),
        scale: 1.0,
        anchor: [0.5, 64],
        anchorXUnits: 'fraction',
        anchorYUnits: 'pixels',
                    })
        });

        svg = '<svg id="Capa_1" data-name="Capa 1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="64px" height="64px" viewBox="0 0 512 512"><path fill="#1A237E" d="M256,0A160,160,0,0,0,96,160a158.2,158.2,0,0,0,15.7,69.1C112.2,230.3,256,512,256,512L398.6,232.6A160,160,0,0,0,256,0Zm0,256a96,96,0,1,1,96-96A96,96,0,0,1,256,256Z" /><circle fill="#f8ac59" cx="256" cy="160" r="96" /><path transform="rotate(180, 0, 0)  translate(-322,-200) scale(0.12)" fill="#ededed" d="M1070-88q0-21-2-63h-1067q0 10 0 31t-1 32q0 30 1 37 12 49 64 85t112 53 125 47 97 65q17 22 17 38 0 22-11 73-4 21-10 37t-16 33-16 31q-15 35-33 132-6 38-6 75 0 105 54 168t157 63 158-63 53-168q0-31-7-75-14-89-32-132-6-14-15-31t-16-33-11-37q-11-51-11-73 0-18 17-38 31-36 97-65t125-47 111-53 64-85q2-8 2-37z" /></svg>';

        var customerLocation = new ol.style.Style({
                image: new ol.style.Icon({
                    opacity: 1,
                    src: '/Content/Custom/img/marker-company.png',
                    scale: 1.0,
                    anchor: [0.5, 64],
                    anchorXUnits: 'fraction',
                    anchorYUnits: 'pixels',
                })
            });

        page.dfn.harita.style.addCustom("firstLocationStyle", firstLocation);
        page.dfn.harita.style.addCustom("locationsStyle", locations);
        page.dfn.harita.style.addCustom("lastLocationStyle", lastLocation);
        page.dfn.harita.style.addCustom("actionLocationStyle", actionLocation);
        page.dfn.harita.style.addCustom("customerLocationStyle", customerLocation);
        page.dfn.harita.layer.addVector("İlk Konum", "FirstLocation", "firstLocationStyle", "firstLocationStyle", "firstLocationStyle")
        page.dfn.harita.layer.addVector("Konumlar", "Locations", "locationsStyle", "locationsStyle", "locationsStyle")
        page.dfn.harita.layer.addVector("Son Konum", "LastLocation", "lastLocationStyle", "lastLocationStyle", "lastLocationStyle")
        page.dfn.harita.layer.addVector("Aksiyon Konum", "ActionLocation", "actionLocationStyle", "actionLocationStyle", "actionLocationStyle")
        page.dfn.harita.layer.addVector("Müşteri Konum", "CustomerLocation", "customerLocationStyle", "customerLocationStyle", "customerLocationStyle")


        page.dfn.harita.layer.addVector("Action", "Action");

        page.dfn.harita.feature.events(function (feature, layer) { return true; }, function (feature, layer) { return true; }, function (event, object) { });

            },
        locateFeatureToMap: function () {
            var points = [];
            if (page.defines.locationsData != undefined) {

                var locationDatas = page.defines.locationsData.location;
                if (locationDatas != null) {
                    var feature = page.dfn.harita.feature.add("ActionLocation", page.defines.locationsData.id, locationDatas);
                    if (feature) {
                        feature.set("properties", locationDatas);
                    }
                    page.dfn.harita.layer.panTo("ActionLocation");

                }
            }

            if (page.defines.customerLocation != undefined) {


                var customerLocationData = page.defines.customerLocation;
                var locationIds = newGuid();

                if (customerLocationData != null) {
                    var feature = page.dfn.harita.feature.add("CustomerLocation", locationIds, customerLocationData);
                    if (feature) {
                        feature.set("properties", customerLocationData);
                    }

                }
            }

        if (page.defines.filteredData != undefined) {

                    var trackingDatas = page.defines.filteredData.LocationTrackings;
        if (trackingDatas != null) {

                        if (trackingDatas.length > 0) {
            $.each($.Enumerable.From(trackingDatas).OrderBy(x => x.timeStamp).ToArray(), function (i, data) {

                if (data.location != null) {
                    if (i == 0) {
                        var feature = page.dfn.harita.feature.add("FirstLocation", data.id, data.location);
                        if (feature) {
                            feature.set("properties", data);

                            points.push(feature.getGeoJSON().geometry.coordinates.join(" "));
                        }
                    }
                    else if (i == trackingDatas.length - 1) {

                        var feature = page.dfn.harita.feature.add("LastLocation", data.id, data.location);
                        if (feature) {
                            feature.set("properties", data);

                            points.push(feature.getGeoJSON().geometry.coordinates.join(" "));
                        }
                    }
                    else {

                        var feature = page.dfn.harita.feature.add("Locations", data.id, data.location);
                        if (feature) {
                            feature.set("properties", data);
                            var coords = page.dfn.harita.helper.SQLtoGeometry(data.location);
                            if (coords != null) {
                                points.push(data.location.replace('POINT (', '').replace(')', ''));
                            }

                        }
                    }
                }
            });

        var line = "LINESTRING(" + points.join(", ") + ")";
        page.dfn.harita.feature.add("Action", "linestring", line);

                       }

                   }
            }

      },
        applyFilter: function () {
        page.dfn.harita.layer.get("FirstLocation")["FirstLocation"].getSource().clear();
        page.dfn.harita.layer.get("Locations")["Locations"].getSource().clear();
        page.dfn.harita.layer.get("LastLocation")["LastLocation"].getSource().clear();
        page.dfn.harita.layer.get("ActionLocation")["ActionLocation"].getSource().clear();
        page.dfn.harita.layer.get("CustomerLocation")["CustomerLocation"].getSource().clear();
        page.dfn.harita.layer.get("Action")["Action"].getSource().clear();
        page.dfn.harita.feature.properties.interactionSelect.getFeatures().clear();

        page.locateFeatureToMap();

        if ($('#searchButton').hasClass("active")) {
            $('#searchButton').trigger("click");
                }

            },
        goLocation: function (_this) {
                var featureId = $(_this).attr("data-personId");

        if (featureId && featureId != null && featureId != "") {
                    var feature = page.dfn.harita.feature.get(featureId)[featureId];
        if (feature) {
            page.dfn.harita.helper.PanTo(feature.getGeometry().getExtent());
        page.dfn.harita.map.getView().setZoom(14);

        $("#contactMap").trigger("select:feature", {type: "add", element: feature });

        $(".btn-bar.right").animate({right: -800 }, 200);
                    }
        else {
            MesajWarning("Konum bulunamadı.", "Uyarı");
                    }
                }
        else {
            MesajWarning("Konum bulunamadı.", "Uyarı");
                }
            },
        search: function (_this) {
                var type = $(_this).attr("data-content");
        var key = $(_this).val();

        page.loadPanelData(type, key);
            },
            getPersonDetailForHover: function (data) {

                if (data.location != undefined) {

                    var person = page.defines.filteredData;
                    var locations = data.location.split('(')[1].replace(')', "");
                    var latitude = locations.split(" ")[1].replace(".", ",").substr(0, 7);
                    var longitude = locations.split(" ")[0].replace(".", ",").substr(0, 7);
                    var firstLocationInfo = $.Enumerable.From(page.defines.filteredData.LocationTrackings).OrderBy(x => x.timeStamp).FirstOrDefault();
                    var lastLocationInfo = $.Enumerable.From(page.defines.filteredData.LocationTrackings).OrderByDescending(x => x.timeStamp).FirstOrDefault();
                    var text = '<div class="item" style="height: 189px !important;width: 240px!important; font-size:10px; padding: 1px 20px;">                                                                                  ' +
                        '  <div class="head text-center clearfix">                                                                  ' +
                        '          <div class="col-xs-12">Konum Bilgileri</div>                                                     ' +
                        '  </div>                                                                                                   ' +
                        '   <ul class="list-group clear-list" style="margin-top: 5px;">                                                                  ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        page.parseTimeStamps(data.takenDate) +
                        '            </span>                                                                                        ' +
                        '            Konumun Alındığı Tarih :                                                                       ' +
                        '        </li>                                                                                              ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        longitude + " " + latitude +
                        '            </span>                                                                                        ' +
                        '            Konum Bilgisi :                                                                                ' +
                        '        </li>                                                                                              ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        (data.deviceId != null ? data.deviceId : "Cihaz bilgisi bulunamadı.") +
                        '            </span>                                                                                        ' +
                        '            Cihaz Bilgisi :                                                                                ' +
                        '        </li>                                                                                              ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        page.parseTimeStamps(firstLocationInfo.takenDate) +
                        '            </span>                                                                                        ' +
                        '            İlk Konum Tarihi :                                                                             ' +
                        '        </li>                                                                                              ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        page.parseTimeStamps(lastLocationInfo.takenDate) +
                        '            </span>                                                                                        ' +
                        '            Son Konum Tarihi :                                                                             ' +
                        '        </li>                                                                                              ' +
                        '    </ul>                                                                                                  ' +
                        '</div>';

                    return text;
                }
                else if (data == page.defines.customerLocation)
                {


                    var customerCompanyId_Title = '@Model.CustomerCompanyId_Title';

                    var s = page.defines.customerLocation;
                    var locations = data.split('(')[1].replace(')', "");
                    var latitude = locations.split(" ")[1].replace(".", ",").substr(0, 7);
                    var longitude = locations.split(" ")[0].replace(".", ",").substr(0, 7);
                    var text = '<div class="item" style="height:100px !important;width: 215px!important;font-size:10px; padding: 1px 20px;">                                                                                  ' +
                        '  <div class="head text-center clearfix">                                                                  ' +
                        '          <div class="col-xs-12">Konum Bilgileri</div>                                                     ' +
                        '  </div>                                                                                                   ' +
                        '   <ul class="list-group clear-list" style="margin-top: 5px;">                                                                  ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        customerCompanyId_Title +
                        '            </span>                                                                                        ' +
                        '            Müşteri :                                                                       ' +
                        '        </li>                                                                                              ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        longitude + " " + latitude +
                        '            </span>                                                                                        ' +
                        '            Konum Bilgisi :                                                                                ' +
                        '        </li>                                                                                              ' +

                        '    </ul>                                                                                                  ' +
                        '</div>';

                    return text;

                }
                else {

                    var person = page.defines.filteredData;
                    var s = page.defines.locationsData;
                    var locations = data.split('(')[1].replace(')', "");
                    var latitude = locations.split(" ")[1].replace(".", ",").substr(0, 7);
                    var longitude = locations.split(" ")[0].replace(".", ",").substr(0, 7);
                    var text = '<div class="item" style="height: 123px  !important;width: 240px!important; font-size:10px; padding: 1px 20px;">                                                                                  ' +
                        '  <div class="head text-center clearfix">                                                                  ' +
                        '          <div class="col-xs-12">Konum Bilgileri</div>                                                     ' +
                        '  </div>                                                                                                   ' +
                        '   <ul class="list-group clear-list" style="margin-top: 5px;">                                                                  ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        s.created.toLocaleString() +
                        '            </span>                                                                                        ' +
                        '            İşlem Yapılan Tarih :                                                                       ' +
                        '        </li>                                                                                              ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        s.createdby_Title +
                        '            </span>                                                                                        ' +
                        '            İşlem Yapan :                                                                                ' +
                        '        </li>                                                                                              ' +
                        '        <li class="list-group-item fist-item" style="padding: 6px 0;">                                                             ' +
                        '            <span class="pull-right listGroupValue">                                                       ' +
                        longitude + " " + latitude +
                        '            </span>                                                                                        ' +
                        '            Konum Bilgisi :                                                                                ' +
                        '        </li>                                                                                              ' +

                        '    </ul>                                                                                                  ' +
                        '</div>';

                    return text;

                }

            },
            parseTimeStamps: function (takenDate) {
                return takenDate.replace('T', ' ');
            }
        }
    page.init();
    $('[data-target=".search-content"]').attr("data-placement", "left");
    $('[data-target=".search-content"]').tooltip();

    var personId = '@Model.createdby';
       var createdDate = '@Model.created';
       var endDateTime = '@Model.created.Value.AddHours(2)';
    var startDateTime = '@Model.created.Value.AddHours(-2)';
    page.defines.customerLocation = '@Model.CustomerCompanyLocation';
    if (personId != undefined && personId != "") {
        getContactDataAndApplys(personId, startDateTime, startDateTime);
    };
    function getContactDataAndApplys(userId, startDateTime, endDateTime) {

        GetJsonDataFromUrl('/SH/SH_UserLocationTracking/GetMapData', { startDate: startDateTime, endDate: endDateTime, userId: userId }, function (res) {
            if (res.LocationTrackings != null) {

                page.defines.filteredData = res;
                page.applyFilter();
                page.dfn.harita.map.updateSize();
            }
            else {
                if (page.defines.locationsData != undefined && page.defines.locationsData != "") {
                    page.applyFilter();
                }
                else {

                }

                page.dfn.harita.map.updateSize();
            }
        }, "Veriler Yükleniyor...");
    }
    function getContactDataAndApplysTwo(userId, startDateTime, endDateTime) {

        GetJsonDataFromUrl('/SH/SH_UserLocationTracking/GetMapData', { startDate: kendo.toString(startDateTime, 'yyyy-MM-dd HH:mm'), endDate: kendo.toString(endDateTime, 'yyyy-MM-dd HH:mm'), userId: userId }, function (res) {

            if (res.LocationTrackings != null) {

                page.defines.filteredData = res;
                page.applyFilter();
                page.dfn.harita.map.updateSize();
            }
            else {

                if (page.defines.locationsData != undefined && page.defines.locationsData != "") {
                    page.applyFilter();
                }
                else {
                    MesajWarning("Son Konum bulunamadı", "Uyarı");
                }
                page.dfn.harita.map.updateSize();
            }
        }, "Veriler Yükleniyor...");
    }
</script>

@using (Html.BeginForm("Detail", "VWCRM_Contact", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id)

    <div class="panel-group" id="accordionContact">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordionContact" href="#collapseContact1"> <i class="fa fa-info-circle text-success"></i> Aktivite/Randevu Bilgileri</a>
                </h4>
            </div>
            <div id="collapseContact1" class="panel-collapse collapse in">
                <div class="panel-body">
                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md" for="CustomerCompanyId_Title">Müşteri</label>
                        </div>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.CustomerCompanyId_Title, new Dictionary<string, object>()
                            {
                                {"class", "form-control"},
                                {"readonly", "readonly"},
                            })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md " for="IdUsers">Katılımcılar</label>
                        </div>
                        <div class="col-md-9">
                            <select required="required"
                                    id="IdUsers"
                                    name="IdUsers"
                                    style="width: 100%"
                                    class="form-control"
                                    data-readurl="/General/GetSH_UsersForPresentationById?id=@(Model.PresentationId.HasValue ? Model.PresentationId : Model.customerId)"
                                    placeholder="Lütfen Katılımcıları Seçiniz.."
                                    disabled="disabled"></select>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md " for="ContactStageId">Aşama</label>
                        </div>
                        <div class="col-md-9">

                            @(Html.Akilli()
              .DropDownListFor(model => model.PresentationStageId)
              .OptionLabel("Lütfen Aşama Seçiniz..")
              .MinLength(2)
              .Template("<div style=\"background: #=data.color#;width:20px;height:20px;float:left;margin-right: 15px;margin-top:5px\" ></div><span>#: data.Name#</span>")
              .ValueTemplate("<div style=\"background: #=data.color#;width:20px;height:20px;float:left;margin-top: 4px;margin-left:10px;\" ></div><span>#: data.Name#</span>")
              .DataValueField("Id")
              .DataTextField("Name")
              .DataSource(a => a.Read("GetCRM_ManagerStageCodeAndName", "General", new { area = string.Empty }).ServerFiltering(false))
              .Sort(x => x.Add("Name").Ascending())
              .Validate(Validations.Required)
              .Execute()
              .Enable(false)
            )

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md " for="ContactStartDate">Başlangıç Tarihi</label>
                        </div>
                        <div class="col-md-9">
                            @Html.TextBox("ContactStartDate", string.Format(Extensions.DateFormatFull(true), Model.ContactStartDate), new Dictionary<string, object>()
                                {
                                    {"class", "form-control"},
                                    {"disabled", "disabled"},
                                })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md " for="ContactEndDate">Bitiş Tarihi</label>
                        </div>
                        <div class="col-md-9">
                            @Html.TextBox("ContactEndDate", string.Format(Extensions.DateFormatFull(true), Model.ContactEndDate), new Dictionary<string, object>()
                                {
                                    {"class", "form-control"},
                                    {"disabled", "disabled"},
                                })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md " for="ContactType">Aktivite/Randevu Tipi</label>
                        </div>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.ContactType_Title, new Dictionary<string, object>()
                            {
                                {"class", "form-control"},
                                {"readonly", "readonly"},
                            })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md " for="ContactStatusT">Aktivite/Randevu Durumu</label>
                        </div>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.ContactStatus_Title, new Dictionary<string, object>()
                            {
                                {"class", "form-control"},
                                {"readonly", "readonly"},
                            })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md" for="Description">Açıklama</label>
                        </div>
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Description, new Dictionary<string, object>()
                            {
                                {"class", "form-control"},
                                {"readonly", "readonly"},
                            })
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordionContact" href="#collapseContact2"> <i class="fa fa-file text-success"></i> Aktivite/Randevu Dosyaları</a>
                </h4>
            </div>
            <div id="collapseContact2" class="panel-collapse collapse">
                <div class="panel-body">

                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md" for="Dosya">Aktivite/Randevu Dosyaları</label>
                        </div>
                        <div class="col-md-9">
                            @(
                Html.Akilli().FileUpload()
                .DataTable("CRM_Contact")
                .DataId(Model.id)
                .DataKey(x => x.fileGroup == "Toplantı Dosyası").PreviewMode(true)
            )
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md" for="Dosya1">Kartvizitler</label>
                        </div>
                        <div class="col-md-9">
                            @(
                Html.Akilli().FileUpload()
                .DataTable("CRM_Contact")
                .DataId(Model.id)
                .DataKey(x => x.fileGroup == "Kartvizitler").PreviewMode(true)
            )
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-3">
                            <label class="control-label label-md" style="text-align:left;" for="Dosya2">Aktivite/Randevu Diğer Dosyaları</label>
                        </div>
                        <div class="col-md-9">
                            @(
                Html.Akilli().FileUpload()
                .DataTable("CRM_Contact")
                .DataId(Model.id)
                .DataKey(x => x.fileGroup == "Diğer Dosyalar").PreviewMode(true)
            )
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordionContact" href="#collapseContact3"> <i class="fa fa-history text-success"></i> Aktivite/Randevu Geçmişi</a>
                </h4>
            </div>
            <div id="collapseContact3" class="panel-collapse collapse">
                <div class="panel-body">
                    <br />
                    <div class="form-group">
                        <div class="col-md-5">
                            <div class="">
                                @(Html.Akilli()
                      .Grid<Infoline.WorkOfTime.BusinessData.VWCRM_ContactAction>("VWCRM_ContactAction")
                      .DataSource(x => x.Ajax().Read(r => r.Action("DataSourceForContactAction", "VWCRM_Contact", new { area = "CRM" })).PageSize(25).Filter(a => a.ContactId == Model.id).Sort(a => a.Add("created").Descending()))
                      .Columns(x =>
                      {
                          x.Bound(y => y.description).Title("Açıklama");
                      })
                      .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                      .Scrollable(x => x.Height(431))

                      .ToolBar(x =>
                      {

                      })
                      )
                            </div>

                        </div>
                        <div class="col-md-7">
                            <div id="contactMap" style="height: 511px; position: relative; overflow: hidden; cursor: default !important">
                                <div class="btn-bar left bottom animated slideInUp" id="ColorInfoBox" style="bottom: 15px; margin-bottom: 23.5px; z-index: 99 !important; left: -8px; ">
                                    <div id="ColorInfo" class="color-bar" style="z-index: 99 !important; left: 13px !important; height: 0px !important; border-radius: 0px !important; border:none !important;">
                                        <table class="slider">
                                            <tbody>
                                                <tr>
                                                    <td class="category" style="font-size: 10px; height: 32px; width: 60px; line-height: 34px; background-color: rgb(19, 162, 97); padding: 0 0px 0 0px; ">İlk Konum</td>
                                                    <td class="category" style="font-size: 10px; height: 32px; width: 60px; line-height: 34px; background-color: rgb(188, 1, 1); padding: 0 0px 0 0px; ">Konum</td>
                                                    <td class="category" style=" font-size: 10px; height: 32px; width: 60px; line-height: 34px; background-color: #757575; padding: 0 0px 0 0px; ">İşlem Anı</td>
                                                    <td class="category" style="font-size: 10px; height: 32px; width: 62px; line-height: 34px; background-color: rgb(247 166 44); padding: 0 0px 0 0px; ">Son Konum</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="btn-bar right top animated slideInRight" style="width:490px;right:-800px;">
                                    <div class="btn-container m-b-lg">
                                        <button id="selectContacts" class="btn btn-lg btn-circle btn-custom hide" onclick="page.fn.slideTab(this,'contact')"><i class="fa fa-users"></i></button>
                                        <button id="selectCompany" class="btn btn-lg btn-circle btn-custom hide" onclick="page.fn.slideTab(this, 'selectedPerson')"><i class="fa fa-bookmark"></i></button>
                                    </div>
                                    <div class="pan-container">
                                        <div id="personTemplate"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <script type="text/template" id="selectedPerson">
                <div class="pan-content">
                    <div class="pan-head clearfix" style="margin-left: 15px;">
                        <div style="padding-top: 7px;">
                            <div class="col-md-12" style="padding-left:0px !important;padding-right:0px !important">
                                <span style="padding-left: 5px;text-transform: uppercase;">SATIŞ EKİBİ PERSONEL BİLGİLERİ</span>
                            </div>
                        </div>
                    </div>
                    <div>
                        <div class="clearfix">

                        </div>
                        <div class="cardPerson" style="padding-bottom: 10px;">
                            <div class="col-md-2">
                                <a href="#">
                                    <img data-id="personelPhoto" style="width:41px !important;height:41px !important;margin-left:0px;margin-top: 8px;" class="img-circle" data-toggle="tooltip" onerror="ImageError(this, '/Content/Custom/img/na.png')" data-placement="bottom" src="/Content/Custom/img/na.png">
                                </a>
                            </div>
                            <div class="col-md-10">
                                <nav class="nav">
                                    <ul>
                                        <li><strong>Adı ve Soyadı : </strong><span data-id="personFullName"></span></li>
                                        <li><strong>Ünvanı : </strong><span data-id="personTitle"></span></li>
                                    </ul>
                                </nav>
                            </div>
                        </div>

                        <div class="pan-bodyCustom">
                            <div class="col-md-12">
                                <div class="panContentPresentation">
                                    <div class="card col-md-12">
                                        <header class="header">
                                            <div class="card-details">
                                                <h3 class="card-name" style="color: aliceblue;"> KONUM BİLGİLERİ</h3>
                                            </div>
                                        </header>
                                        <nav class="nav">
                                            <ul>
                                                <li><strong>Konum Tarihi :</strong><span data-id="locationDate"></span></li>
                                                <li><strong>Konum Bilgisi :</strong><span data-id="locationInfo"></span></li>
                                                <li><strong>Cihaz Bilgisi :</strong><span data-id="deviceInfo"></span></li>
                                                <li><strong>İlk Konum Tarihi :</strong><span data-id="firstLocationDate"></span></li>
                                                <li><strong>Son Konum Tarihi :</strong><span data-id="lastLocationDate"></span></li>
                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </script>
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
    </div>

}

<script type="text/javascript" data-selector="modalContainer">

    var _contact = {
        @*Model: @Html.Raw(Json.Encode(Model)),*@
        Model: '@Model',
        init: function (users) {

            $.each($('[data-readurl]'), function (i, item) {

                $(item)
                    .kendoMultiSelect({

                        value: users,
                        autoClose: false,
                        dataTextField: 'Name',
                        dataValueField: 'Id',
                        optionLabel: $(item).attr('placeholder'),
                        filter: 'contains',
                        dataSource: new kendo.data.DataSource({
                            transport: {
                                read: {
                                    url: $(item).attr('data-readurl'),
                                    dataType: "json"
                                }
                            }
                        }),
                        dataBound: _contact.Events.onDataBound,
                        select: _contact.Events.onSelect,
                        template: _contact.Events.Template,
                        tagTemplate: function(dataItem){

                            if(dataItem.type == 0){
                                _cls = 'warning';
                                _txt = 'İşletmemiz';
                            }
                            else if(dataItem.type == 1){
                                _cls = 'info';
                                _txt = 'Kanal';
                            }else if(dataItem.type == 2){
                                _cls = 'success';
                                _txt = 'Müşteri';
                            } else if(dataItem.type == 3){
                                _cls = 'primary';
                                _txt = 'Çözüm Ortağı';
                            }

                            return '<span class="label label-xs label-' + _cls + '">' + '' + _txt + '</span> ' + dataItem.Name;

                        }
                    });

            });

        },
        Events: {
            onDataBound: function () {

                var $this = this;

                var ds = $this.dataSource;
                var newEntry = $.Enumerable.From($this.dataSource.data()).Where(function (a) { return a.Name == $this._prev }).FirstOrDefault();

                if (newEntry == null && $this._prev.length > 2) {

                    var items = $.Enumerable.From($this.dataSource.data()).Where(function (a) { return a.newItem != true; }).ToArray();
                    if (items.length != $this.dataSource.data().length) {
                        $this.dataSource.data(items);
                        return;
                    }

                    ds.add({ Name: $this._prev, Id: newGuid(), newItem: true, type: 1 });   //  Kanal Personeli
                    ds.add({ Name: $this._prev, Id: newGuid(), newItem: true, type: 2 });   //  Müşteri Personeli
                    ds.add({ Name: $this._prev, Id: newGuid(), newItem: true, type: 3 });   //  Çözüm Ortağı Personeli
                    this.open();
                }

            },
            onSelect: function (e) {

                if (e.item == null) { return; }

                var elem = this.dataSource.view()[e.item.index()];

                if (elem.newItem == true) {

                    $.ajax({
                        type: "POST",
                        url: '/CRM/VWCRM_ContactUser/InstantInsert',
                        data: { contactType: elem.type, name: elem.Name, id: elem.Id, ContactId: _contact.Model.id, PresentationId: _contact.Model.PresentationId  },
                        success: function (response) {
                            if (response.result) {
                                elem.newItem = false;
                            }
                        }
                    });

                }
            },
            Template: function (dataItem) {

                var _cls = '';
                var _txt = '';

                if(dataItem.type == 0){
                    _cls = 'warning';
                    _txt = 'İşletmemiz';
                }
                else if(dataItem.type == 1){
                    _cls = 'info';
                    _txt = 'Kanal';
                }else if(dataItem.type == 2){
                    _cls = 'success';
                    _txt = 'Müşteri';
                } else if(dataItem.type == 3){
                    _cls = 'primary';
                    _txt = 'Çözüm Ortağı';
                }

                return '<span class="label label-xs label-' + _cls + '">' + (dataItem.newItem == true ? 'Yeni Ekle ' : '') + '( ' + _txt + ' )</span> ' + dataItem.Name;

            }
        },
    };

    _contact.init(@Html.Raw(Json.Encode(ViewBag.IdUsers)));

</script>
