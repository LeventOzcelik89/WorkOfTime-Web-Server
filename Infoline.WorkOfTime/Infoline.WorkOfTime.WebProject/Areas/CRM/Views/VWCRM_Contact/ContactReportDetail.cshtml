@model Infoline.WorkOfTime.BusinessAccess.VMCRM_ContactModel
@{
    ViewBag.Title = "Aktivite Raporu";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userStatus = (PageSecurity)Session["userStatus"];

    var ContactStarDates = Model.ContactStartDate;
    var endDates = Model.ContactEndDate;
    var creared = Model.createdby;

}

<script type="text/javascript">
    function contactTemps(res) {
        debugger;
        if (res.customerId_Title == null) {
            return '<i class="fa fa-dollar" style="color:orange"></i> ' + res.Presentation_Title;
        }
        return '<i class="fa fa-building" style="color:orange"></i> ' + res.customerId_Title;
    }
</script>




<div class="row">
    <div class="col-md-12">
        <div class="ibox m-b-none">
            <div class="ibox-title">
                <h5>Aktivite ve Randevu Listesi </h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                @(Html.Akilli()
                      .Grid<Infoline.WorkOfTime.BusinessData.VWCRM_Contact>("VWCRM_Contact")
                      .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWCRM_Contact", new { area = "CRM" })).Filter(a=>a.createdby == Model.createdby && a.ContactStartDate > Model.ContactStartDate && a.ContactEndDate < Model.ContactEndDate).PageSize(25))
                      .Columns(x =>
                      {

                          x.Bound(y => y.PresentationStageId_Title).Title("Potansiyel Aşaması").Width(180);
                          x.Bound(y => y.PresentationAndCustomer_Titles).Title("Potansiyel/Müşteri").ClientTemplate("#=contactTemps(data)#").Locked(true).Width(300);
                          x.Bound(y => y.ContactType_Title).Title("Aktivite/Randevu Tipi").Width(180);
                          x.Bound(y => y.ContactStatus_Title).Title("Aktivite/Randevu Durumu").Width(180);
                          x.Bound(y => y.ContactStartDate).Title("Başlangıç Tarihi").Width(180).Format(Extensions.DateFormatFull(true));
                          x.Bound(y => y.ContactEndDate).Title("Bitiş Tarihi").Width(180).Format(Extensions.DateFormatFull(true));
                          x.Bound(y => y.Description).Title("Aktivite/Randevu Notu").ClientTemplate("#=First50Char(data.Description)#").Width(180);
                          x.Bound(y => y.createdby_Title).Title("Oluşturan").Width(180);
                          x.Bound(y => y.created).Title("Oluşturulma Tarihi").Width(180).Format(Extensions.DateFormatFull(true));
                      })
                      .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                      .Scrollable(x => x.Height(670))
                      .ToolBar(x =>
                      {

                      }))
            </div>
        </div>
    </div>
</div>