@model List<Guid>
@{
    ViewBag.Title = "Aktivite ve Randevular";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var now = DateTime.Now;
    var startOfWeek = now.AddDays(((int)(now.DayOfWeek) * -1) + 1).Date;
    var endOfWeek = startOfWeek.AddDays(7).Date;
    var startOfMonth = new DateTime(now.Year, now.Month, 1).Date;
    var endOfMonth = startOfMonth.AddMonths(1).Date;
    var startOfLastMonth = new DateTime(now.Year, now.Month, 1).AddMonths(-1).Date;
    var userStatus = (PageSecurity)Session["userStatus"];
}

@if (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatisPersoneli)) || userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.MusteriSatisSorumlusu)))
{
    Html.RenderPartial("~/Areas/CRM/Views/VWCRM_Contact/Shared/MyIndex.cshtml",Model);
}
else
{
    Html.RenderPartial("~/Areas/CRM/Views/VWCRM_Contact/Shared/AllIndex.cshtml",Model);
}





<script type="text/javascript">
    function contactTemp(res) {
        if (res.customerId_Title == null) {
            return '<i class="fa fa-dollar" style="color:orange"></i> ' + res.Presentation_Title;
        }
        return '<i class="fa fa-building" style="color:orange"></i> ' +res.customerId_Title;
    }

      function FilterDate() {
        var ids = '@Html.Raw(String.Join(",", Model))';
        if (ids != '') {

            var grid = $('#VWCRM_Contact').data('kendoGrid');
            var filter = grid.dataSource.filter();
            filter.logic = 'or';
            filter.filters = ids.split(',').map(function (item) { return { field: "id", operator: "equal", value: item } });
            grid.dataSource.filter(filter);

        }
    }

    $(document)
        .on('ready', function () {
            FilterDate();
            
        })
        .on("click", '[data-name="filterType"]', function (e) {

            var _this = $(this);

            _this.parent().find('.filterButtonActive').removeClass("filterButtonActive").addClass("filterButtonPassive");
            _this.parent().find('.fa-check').removeClass('fa fa-check');
            _this.removeClass("filterButtonPassive").addClass("filterButtonActive");
            _this.find('span').addClass("fa fa-check");
        })
     
        .on("selected:grid", "#VWCRM_ContactAction", function (e, res) {
 

            let usersId = res.createdby;
            let createdDate = res.created;
            let contactEndDateTime = new Date(res.created).addHours(2);
            let contactStartDateTime = new Date(res.created).addHours(-2);

            if (usersId != undefined && usersId != "") {
                getContactDataAndApplysTwo(usersId, contactStartDateTime, contactEndDateTime);
            };
            page.dfn.harita.map.updateSize();       
        })
        .on("load:grid", "#VWCRM_ContactAction", function (e, resp) {

            $('[role="grid"]').attr("style", "cursor:pointer");

            $('#VWCRM_ContactAction').children().last().hide();
            $('#VWCRM_ContactAction').children().first().css({ "height": "26px" });

            page.defines.locationsData = resp;
            if (resp != null) {
                let usersId = resp.createdby;
                let createdDate = resp.created;
                let contactEndDateTime = new Date(resp.created).addHours(2);
                let contactStartDateTime = new Date(resp.created).addHours(-2);

                if (usersId != undefined && usersId != "") {
                    getContactDataAndApplysTwo(usersId, contactStartDateTime, contactEndDateTime);
                };
            }
  
            page.dfn.harita.map.updateSize();
        })
        .on("hover:feature", "#contactMap", function (e, resp) {
            page.dfn.harita.overlay.remove('slider-station');

            if (resp.type == "add") {
                var elem = resp.element;
                var prop = elem.get("properties");

                if (prop) {
                    text = page.getPersonDetailForHover(prop);
                    var geometry = resp.element.getGeometry();
                    var coordinate = geometry.getCoordinates();
                    var pixel = page.dfn.harita.map.getPixelFromCoordinate(coordinate);

                    var tooltiplocation = "";

                    if (pixel[1] < 400)
                        tooltiplocation = "top-right";
                    else if (screen.height - pixel[1] < 400)
                        tooltiplocation = "bottom-right";
                    else
                        tooltiplocation = "center-right";

                    page.dfn.harita.overlay.add('slider-station', text, '', tooltiplocation, elem.getGeometry().getCoordinates(), [-10, -30]);
                    page.dfn.harita.map.updateSize();
                }
            }
        })
        .on("click", '[data-parent="#accordionContact"]', function (e) {

            if (page.dfn.harita.map != undefined) {
                page.dfn.harita.map.updateSize();
            }     
        })


</script>
