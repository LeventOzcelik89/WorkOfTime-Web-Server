@{
    ViewBag.Title = "Personel Sertifika/Eğitim/Dosya Raporları";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    function onChangeGroup(e) {
        if (this.value() == undefined) {
            return;
        }
        var users = $.ajax({
            type: "GET",
            url: '/General/GetGroupUsers?id=' + this.value(),
            success: function (response) {
            },
            async: false
        }).responseJSON;
        if (users.length > 0) {
            $('#assignableUsers').data('kendoMultiSelect').value($.Enumerable.From(users).Select(x => x.userId).ToArray())
        }
    }

    $(document)
        .on("click", '[data-name="filterDate"]', function (e) {
            var _this = $(this);
            $('.filterButtonActive').removeClass("filterButtonActive").addClass("filterButtonPassive");
            $('.fa-check').removeClass('fa fa-check');
            _this.removeClass("filterButtonPassive").addClass("filterButtonActive");
            _this.find('span').addClass("fa fa-check");
        })

</script>

<link href="~/Content/Areas/CMP/VWCMP_Invoice/css/invoice.css" data-selector="modalContainer" rel="stylesheet" />


<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="ibox ">
            <div class="ibox-content" style="border-bottom:1px #e7eaec solid;">
                <div class="row">
                    <div class="col-md-11">
                        <div class="row">
                            <div class="col-md-3">
                                @(
                                       Html.Akilli()
                                       .MultiSelect("certificates")
                                       .Placeholder("Sertifika/Dosya/Eğitim Seçiniz..")
                                       .DataValueField("id")
                                       .DataTextField("CertificateName")
                                       .Action(b => b.Action("DataSourceDropDown", "VWSH_PersonCertificateType", new { area = "SH" }))
                                       .Sort(x => x.Add("CertificateName").Ascending())
                                       .Execute()
                                   )
                            </div>

                            <div class="col-md-3">
                                @(
                                       Html.Akilli()
                                       .MultiSelect("assignableUsers")
                                       .Placeholder("Lütfen Personel Seçiniz..")
                                       .DataValueField("id")
                                       .DataTextField("FullName")
                                       .ItemTemplate("#=TemplateEngine('userTemplate',data)#")
                                       .Action(b => b.Action("DataSourceDropDown", "VWSH_User", new { area = "SH" }))
                                       .Filter<VWSH_User>(a => a.type == (int)(EnumSH_UserType.MyPerson) && a.IsWorking == true)
                                       .Sort(x => x.Add("FullName").Ascending())
                                       .Execute()
                                   )
                            </div>
                            <div class="col-md-3">
                                @(
                                        Html.Akilli().
                                        DatePicker("dueDate").
                                        Placeholder("Sertifika/Eğitim/Dosya Geçerlilik Tarihi").
                                        //Format("dd.MM.yyyy").
                                        Format(Extensions.DateFormatShort()).
                                        Value(DateTime.Now).
                                        Validate(Validations.Required)
                                    )
                            </div>
                            <div class="col-md-3" style="margin-top: 6px;">
                                <div class="btn-group" role="group" aria-label="Basic example" style="width:100%;">
                                    <button type="button" data-id="1" data-name="filterDate" style="width:30%;margin-left:0px !important;" class="btn filterButtonPassive"> <span></span> Aktif Olanlar</button>
                                    <button type="button" data-id="0" data-name="filterDate" style="width:40%;margin-left:0px !important;" class="btn filterButtonPassive"><span></span>Süresi Dolanlar</button>
                                    <button type="button" data-id="100" data-name="filterDate" style="width:30%;margin-left:0px !important;" class="btn filterButtonActive"><span class="fa fa-check"></span> Tümü</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <button class="btn btn-md btn-block btn-primary" type="submit" id="DashBoardFilter" style="height:42px;"><i class="fa fa-search"></i> Sorgula</button>
                    </div>
                </div>

            </div>

            <br />

        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h5><i class="icon-chart-bar-5"></i> Personel Sertifika/Eğitim/Dosya Raporu</h5>
                    </div>

                    <div class="ibox-content">
                        <div id="CertificateReportGrid"></div>

                    </div>
                </div>
            </div>

        </div>

    </div>
</div>

<script type="text/javascript">
    var activityTracking = {
        data: {
            taskDatas: [],
            taskChart: [],
            certificateDatas: []
        },
        fnc: {
            getUserActivitys: function (usersData) {
                var html = '<div class="table-responsive">' +
                    '<table class="table table-striped">' +
                    '<thead>' +
                    '<tr>' +
                    '' +
                    '<th>Adı Soyadı </th>' +
                    '<th>Tamamlanma Oranı </th>' +
                    '<th>Görev Sayısı</th>' +
                    '<th>Tamamlanan Görev Sayısı</th>' +
                    '<th>Çalışılan Süre</th>' +
                    '</tr>' +
                    '</thead>' +
                    '<tbody>';

                $.each(usersData, function (e, item) {

                    html += '<tr>' +
                        '<td>' + item.FullName + '</td>' +
                        '<td><span class="pie">' + "%" + (item.taskCount == 0 ? 0 : Math.floor(item.CompleteCount * 100 / item.taskCount)) + '</span></td>' +
                        '<td>' + item.taskCount + ' Adet' + '</td>' +
                        '<td>' + item.CompleteCount + ' Adet' + '</td>' +
                        '<td>' + item.totalWorkingHours + '</td>' +
                        '</tr>';

                })


                html += '</tbody>' +
                    '</table>' +
                    '</div>';

                return html;
            },

            getOperatorActivitys: function (usersData) {
                var html = '<div class="table-responsive">' +
                    '<table class="table table-striped">' +
                    '<thead>' +
                    '<tr>' +
                    '' +
                    '<th>Personel </th>' +
                    '<th>Görev Tipi</th>' +
                    '<th>Görev Konusu</th>' +
                    '<th>Başlangıç</th>' +
                    '<th>Bitiş</th>' +
                    '<th>Müşteri</th>' +
                    '<th>Müşteri Lokasyon</th>' +
                    '<th>Görev Durumu</th>' +
                    '<th></th>' +
                    '</tr>' +
                    '</thead>' +
                    '<tbody>';

                $.each(usersData, function (e, item) {

                    html += '<tr>' +
                        '<td>' + item.FullName + '</td>' +
                        '<td>' + item.FullName + '</td>' +
                        '<td>' + item.OpenedTask + ' Adet' + '</td>' +
                        '<td>' + item.OpenedTask + ' Adet' + '</td>' +
                        '<td>' + item.ApprovedTask + ' Adet' + '</td>' +
                        '<td>' + item.ApprovedTask + ' Adet' + '</td>' +
                        '<td>' + item.ApprovedTask + ' Adet' + '</td>' +
                        '<td>' + item.MyAppointmentTask + ' Adet' + '</td>' +
                        '<td><a href="/FTM/VWFTM_Task/Index?userId=' + item.Id + '" target="_blank" class="btn btn-xs btn-info">Görev Detayı</a></td>'
                    '</tr>';
                })


                html += '</tbody>' +
                    '</table>' +
                    '</div>';

                return html;
            },
            getStaffActivitys: function (usersData) {
                var html = '<div class="table-responsive">' +
                    '<table class="table table-striped">' +
                    '<thead>' +
                    '<tr>' +
                    '' +
                    '<th>Personel </th>' +
                    '<th>Görev Tipi</th>' +
                    '<th>Başlangıç Tarihi</th>' +
                    '<th>Bitiş Tarihi</th>' +
                    '<th>Çalışılan Süre</th>' +
                    '<th>Müşteri</th>' +
                    '<th>Müşteri Lokasyon</th>' +
                    '<th>Görev Durumu</th>' +
                    '<th></th>' +
                    '</tr>' +
                    '</thead>' +
                    '<tbody>';

                $.each(usersData, function (e, item) {

                    var icon = "";

                    if (item.taskType == 0) {
                        icon = "icon-tools";
                    }
                    if (item.taskType == 1) {
                        icon = "icon-wrench";
                    } if (item.taskType == 2) {
                        icon = "icon-gauge-1";
                    } if (item.taskType == 3) {
                        icon = "icon-shuffle";
                    } if (item.taskType == 4) {
                        icon = "icon-eye";
                    } if (item.taskType == 5) {
                        icon = "icon-loop-1";
                    } if (item.taskType == 6) {
                        icon = "icon-binoculars";
                    } if (item.taskType == 7) {
                        icon = "icon-hashtag";
                    }

                    html += '<tr>' +
                        '<td>' + item.FullName + '</td>' +
                        '<td>	<div style="font-size:13px;"><strong><a style="font-size: 15px;" class="' + icon + '"></a></strong> ' + item.type_Title + '</div></td>' +
                        '<td>' + kendo.toString(kendo.parseDate(item.startDate), "dd.MM.yyyy HH:mm") + '</td>' +
                        '<td>' + kendo.toString(kendo.parseDate(item.endDate), "dd.MM.yyyy HH:mm") + '</td>' +
                        '<td>' + item.totalWorkingHours + '</td>' +
                        '<td>' + item.customerName + '</td>' +
                        '<td>' + item.customerLocation + '</td>' +
                        '<td>' + item.taskStatus_Title + '</td>' +
                        '<td><a href="/FTM/VWFTM_Task/Detail?id=' + item.Id + '" target="_blank" class="btn btn-xs btn-info">Görev Detayı</a></td>'
                    '</tr>';
                })


                html += '</tbody>' +
                    '</table>' +
                    '</div>';

                return html;
            },
            getCustomerActivitys: function (usersData) {
                var html = '<div class="table-responsive">' +
                    '<table class="table table-striped">' +
                    '<thead>' +
                    '<tr>' +
                    '' +
                    '<th>Müşteri </th>' +
                    '<th>Görev Sayısı / Tamamlananlar</th>' +
                    '</tr>' +
                    '</thead>' +
                    '<tbody>';

                $.each(usersData, function (e, item) {

                    html += '<tr>' +
                        '<td>' + item.FullName + '</td>' +
                        '<td><span class="badge badge-warning">' + item.allTaskCount + '</span> -  <span class="badge badge-primary">' + item.finishedTask + '</td>'
                    '</tr>';
                })


                html += '</tbody>' +
                    '</table>' +
                    '</div>';

                return html;
            },




            getDatas: function (dataQuery) {
                GetJsonDataFromUrl('/SH/VWSH_User/DataSourceForCertificateReport' + dataQuery, null, function (res) {


                    activityTracking.data.certificateDatas = res.Object;


                    $("#CertificateReportGrid").kendoGrid({
                        dataSource: activityTracking.data.certificateDatas.CertificateReport,
                        pageSize: 100,
                        height: 500,
                        sortable: true,
                        filterable: {
                            operators: {
                                string: {
                                    contains: "İçeriyor",
                                    eq: "Eşittir",
                                    neq: "Eşit Değil",
                                }
                            }
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: true,
                            buttonCount: 5
                        },
                        columns: [
                            {
                                field: "PersonName",
                                title: "Personel"
                            },
                            {
                                field: "CertificateName",
                                title: "Sertifika/Eğitim/Dosya"
                            },
                            {
                                field: "CertificateStatus",
                                title: "Durumu",
                                template: '<a class="btn btn-xs #=(CertificateStatus == "Aktif" ? "btn-info": "btn-danger")#">#=(CertificateStatus == "Aktif" ? "Aktif" : "Süresi Dolmuş")#</a></td>'
                            },
                            {
                                field: "CertificateTimeText",
                                title: "Geçerlilik Durumu",
                                filterable: false,
                            },

                            {
                                field: "CertificateEndDate",
                                title: "Geçerlilik Tarihi",
                                type:"date",
                                format: "{0:dd.MM.yyyy}",
                           
                                filterable: false
                              
                                
                            }
                        ]
                    });
                    var grid = $("#CertificateReportGrid").data("kendoGrid");
                    grid.dataSource.page(1);
                    $("[class='k-input']").text("Tümü")
                });
            },
        },
    }

    $(document)
        .on("ready", function () {
            activityTracking.fnc.getDatas('');
        })


    $("#DashBoardFilter").click(function () {
        var certificateIds = $("#certificates").val();
        var userIds = $("#assignableUsers").val();
        var end = $("#dueDate").val();
        var data = $("[class='btn filterButtonActive']")
        var filterButtonId = data[0].dataset.id

        GetJsonDataFromUrl('/SH/VWSH_User/DataSourceForCertificateReport', { certificates: certificateIds, assignableUsers: userIds, dueDate: end, filterButtonId: filterButtonId }, function (res) {
            //if (res.Result == false || res.Object == null || res.Object.Staff.length == 0) {
            //	$("#staffContent").html(null);
            //	$("#staffContent").append('<div class="noContent">Personel Bulunamadı.</div>')
            //	$('UserWorkToday').hide();
            //}

            activityTracking.data.certificateDatas = res.Object;

            $("#CertificateReportGrid").kendoGrid({
                dataSource: activityTracking.data.certificateDatas.CertificateReport,
                pageSize: 100,
                height: 500,
                sortable: true,
                filterable: {
                    operators: {
                        string: {
                            contains: "İçeriyor",
                            eq: "Eşittir",
                            neq: "Eşit Değil",
                        }
                    }
                },
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [
                    {
                        field: "PersonName",
                        title: "Personel"
                    },
                    {
                        field: "CertificateName",
                        title: "Sertifika/Eğitim/Dosya"
                    },
                    {
                        field: "CertificateStatus",
                        title: "Durumu",
                        template: '<a class="btn btn-xs #=(CertificateStatus == "Aktif" ? "btn-info": "btn-danger")#">#=(CertificateStatus == "Aktif" ? "Aktif" : "Süresi Dolmuş")#</a></td>'

                    },
                    {
                        field: "CertificateTimeText",
                        title: "Geçerlilik Durumu",
                        filterable: false,
                    },

                    {
                        field: "CertificateEndDate",
                        title: "Geçerlilik Bitiş Tarihi",
                        filterable: false,
                        type: "date",
                        format: "{0:dd.MM.yyyy}",
                    }
                ]
            });

            var grid = $("#CertificateReportGrid").data("kendoGrid");
            grid.dataSource.page(1);
            $("[class='k-input']").text("Tümü")

        });
    });
</script>

