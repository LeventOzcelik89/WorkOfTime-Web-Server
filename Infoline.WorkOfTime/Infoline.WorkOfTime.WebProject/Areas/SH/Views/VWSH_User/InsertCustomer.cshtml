@model Infoline.WorkOfTime.BusinessData.VWSH_User
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Firma Personeli Ekle";
}


@using (Html.BeginForm("Insert", "VWSH_User", FormMethod.Post, new Dictionary<string, object>() {
        { "class", "form-horizontal" },
        { "id","InsertCustomer" },
        { "role", "form" },
        { "data-selector", "modalContainer" },
        { "data-formType", "Ajax" }
    }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(c => c.id)
    @Html.HiddenFor(c => c.type)

    <div class="form-group @(Model.CompanyId.HasValue ? "hide" : "")">
        <div class="col-md-4">
            <label class="control-label label-md req" for="CompanyId">Çalıştığı Firma</label>
        </div>
        <div class="col-md-8">
            @(
                Html.Akilli()
                .DropDownListFor(model => model.CompanyId)
                .OptionLabel("Lütfen Firma seçiniz..")
                .DataTextField("fullName")
                .DataValueField("id")
                .Action(b => b.Action("DataSourceDropDown", "VWCMP_Company", new { area = "CMP" }))
                .Filter<VWCMP_Company>(f => f.type == (int)EnumCMP_CompanyType.Diger)
                .Sort(x => x.Add("fullName").Ascending())
                .Execute()
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="firstname">Ad/Soyad</label>
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.firstname, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ad giriniz.."},
            }).Validate(Validations.TextTurkceSpace(true))
        </div>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.lastname, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen soyad giriniz"},
            }).Validate(Validations.TextTurkceSpace(true))
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="title">Departman / Ünvan</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.title, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Departman/Ünvan giriniz.."},
            })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="email">Eposta Adresi</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.email, new Dictionary<string, object>()
            {
                {"placeholder","Email adresi(test@test.com)"},
                {"class","form-control"},
            }).Validate(Validations.EMail(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="phone">Sabit Telefon</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().MaskedTextBoxFor(a => a.phone).HtmlAttributes(new Dictionary<string, object>()
                {
                    { "style", "width: 100%"},
                    {"class", "form-control"},
                    {"placeholder", "Lütfen Sabit Telefonu Giriniz."},
                })
                .Mask("0 (000) 000 00 00")
                .UnmaskOnPost(true)
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="cellphone">Cep Telefonu</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().MaskedTextBoxFor(a => a.cellphone).HtmlAttributes(new Dictionary<string, object>()
                {
                    { "style", "width: 100%"},
                    {"class", "form-control"},
                    {"placeholder", "Lütfen Cep Telefonu Giriniz."},
                })
                .Mask("0 (000) 000 00 00")
                .UnmaskOnPost(true)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="roles">Roller</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
                .MultiSelect("Roles")
                .DataTextField("rolname")
                .DataValueField("id")
                .Action(b => b.Action("DataSourceDropDown", "VWSH_Role", new { area = "SH" }))
                .Filter<VWSH_Role>(f =>
                f.id == new Guid(SHRoles.SahaGorevMusteri) ||
                f.id == new Guid(SHRoles.YardimMasaMusteri) ||
                f.id == new Guid(SHRoles.YardimMasaTalep) ||
                f.id == new Guid(SHRoles.CRMBayiPersoneli) ||
                f.id == new Guid(SHRoles.YukleniciPersoneli) ||
                f.id == new Guid(SHRoles.BayiGorevPersoneli) ||
                f.id == new Guid(SHRoles.SahaGorevPersonel)||
                f.id == new Guid(SHRoles.HakEdisBayiPersoneli))


                .Sort(x => x.Add("rolname").Ascending())
                .TagMode(TagMode.Multiple)
                .Execute("id")
            )
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}