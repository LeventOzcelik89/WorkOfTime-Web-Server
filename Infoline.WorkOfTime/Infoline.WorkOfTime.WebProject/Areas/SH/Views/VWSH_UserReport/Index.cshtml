@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-xs-12 col-sm-6 col-md-3">
        @Html.Akilli().Card().Color("yellow").Text("Örnek Veri Başlığı").Value("0 Adet").IconClass("fa fa-home")
    </div>
    <div class="col-xs-12 col-sm-6 col-md-3">
        @Html.Akilli().Card().Color("navy").Text("Örnek Veri Başlığı").Value("0 Adet").IconClass("fa fa-home")
    </div>
    <div class="col-xs-12 col-sm-6 col-md-3">
        @Html.Akilli().Card().Color("blue").Text("Örnek Veri Başlığı").Value("0 Adet").IconClass("fa fa-home")
    </div>
    <div class="col-xs-12 col-sm-6 col-md-3">
        @Html.Akilli().Card().Color("red").Text("Örnek Veri Başlığı").Value("0 Adet ").IconClass("fa fa-home")
    </div>
</div>


@(Html.Akilli()
    .Grid<Infoline.WorkOfTime.BusinessData.VWSH_UserReport>("VWSH_UserReport")
    .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWSH_UserReport", new { area = "SH" })).PageSize(25))
    .Columns(x =>
    {
        x.Bound(y => y.id).GridSelector(GridSelectorType.Checkbox);
        x.Bound(y => y.status).Title("status").Width(180);
        x.Bound(y => y.type).Title("type").Width(180);
        x.Bound(y => y.code).Title("code").Width(180);
        x.Bound(y => y.loginname).Title("loginname").Width(180);
        x.Bound(y => y.firstname).Title("firstname").Width(180);
        x.Bound(y => y.lastname).Title("lastname").Width(180);
        x.Bound(y => y.birthday).Title("birthday").Width(180).Format(Extensions.DateFormatShort(true));
        x.Bound(y => y.password).Title("password").Width(180);
        x.Bound(y => y.title).Title("title").Width(180);
        x.Bound(y => y.email).Title("email").Width(180);
        x.Bound(y => y.phone).Title("phone").Width(180);
        x.Bound(y => y.cellphone).Title("cellphone").Width(180);
        x.Bound(y => y.address).Title("address").Width(180);
        x.Bound(y => y.companyCellPhone).Title("companyCellPhone").Width(180);
        x.Bound(y => y.companyCellPhoneCode).Title("companyCellPhoneCode").Width(180);
        x.Bound(y => y.companyOfficePhone).Title("companyOfficePhone").Width(180);
        x.Bound(y => y.companyOfficePhoneCode).Title("companyOfficePhoneCode").Width(180);
        x.Bound(y => y.fullName).Title("fullName").Width(180);
        x.Bound(y => y.nationality).Title("nationality").Width(180);
        x.Bound(y => y.City_Title).Title("City_Title").Width(180);
        x.Bound(y => y.Town_Title).Title("Town_Title").Width(180);
        x.Bound(y => y.BornLocation_Title).Title("BornLocation_Title").Width(180);
        x.Bound(y => y.FatherName).Title("FatherName").Width(180);
        x.Bound(y => y.MotherName).Title("MotherName").Width(180);
        x.Bound(y => y.IdentificationNumber).Title("IdentificationNumber").Width(180);
        x.Bound(y => y.EmergencyPerson).Title("EmergencyPerson").Width(180);
        x.Bound(y => y.EmergencyPhone).Title("EmergencyPhone").Width(180);
        x.Bound(y => y.Gender_Title).Title("Gender_Title").Width(180);
        x.Bound(y => y.MaritalStatus_Title).Title("MaritalStatus_Title").Width(180);
        x.Bound(y => y.Military_Title).Title("Military_Title").Width(180);
        x.Bound(y => y.Military_DoneDate).Title("Military_DoneDate").Width(180).Format(Extensions.DateFormatShort(true));
        x.Bound(y => y.Probation_Date).Title("Probation_Date").Width(180).Format(Extensions.DateFormatShort(true));
        x.Bound(y => y.ProbationDetail).Title("ProbationDetail").Width(180);
        x.Bound(y => y.IDBloodGroup_Title).Title("IDBloodGroup_Title").Width(180);
        x.Bound(y => y.personLanguages).Title("personLanguages").Width(180);
        x.Bound(y => y.personCertificates).Title("personCertificates").Width(180);
        x.Bound(y => y.personGroups).Title("personGroups").Width(180);
        x.Bound(y => y.currentCompanyName).Title("currentCompanyName").Width(180);
        x.Bound(y => y.deparmanTitle).Title("deparmanTitle").Width(180);
        x.Bound(y => y.jobStartDate).Title("jobStartDate").Width(180).Format(Extensions.DateFormatShort(true));
        x.Bound(y => y.jobEndDate).Title("jobEndDate").Width(180).Format(Extensions.DateFormatShort(true));
        x.Bound(y => y.PersonWorking).Title("PersonWorking").Width(180);
        x.Bound(y => y.jobLeavingDescription).Title("jobLeavingDescription").Width(180);
        x.Bound(y => y.manager1).Title("manager1").Width(180);
        x.Bound(y => y.manager1_Title).Title("manager1_Title").Width(180);
        x.Bound(y => y.manager2).Title("manager2").Width(180);
        x.Bound(y => y.manager2_Title).Title("manager2_Title").Width(180);
        x.Bound(y => y.manager3).Title("manager3").Width(180);
        x.Bound(y => y.manager3_Title).Title("manager3_Title").Width(180);
        x.Bound(y => y.manager4).Title("manager4").Width(180);
        x.Bound(y => y.manager4_Title).Title("manager4_Title").Width(180);
        x.Bound(y => y.manager5).Title("manager5").Width(180);
        x.Bound(y => y.manager5_Title).Title("manager5_Title").Width(180);
        x.Bound(y => y.manager6).Title("manager6").Width(180);
        x.Bound(y => y.manager6_Title).Title("manager6_Title").Width(180);
        x.Bound(y => y.salary).Title("salary").Width(180);
        x.Bound(y => y.workExperiences).Title("workExperiences").Width(180);
        x.Bound(y => y.gratutedSchooles).Title("gratutedSchooles").Width(180);
        x.Bound(y => y.lastGratutedSchool).Title("lastGratutedSchool").Width(180);
        x.Bound(y => y.primarySchool).Title("primarySchool").Width(180);
        x.Bound(y => y.midSchool).Title("midSchool").Width(180);
        x.Bound(y => y.highSchool).Title("highSchool").Width(180);
        x.Bound(y => y.twoYearDegree).Title("twoYearDegree").Width(180);
        x.Bound(y => y.Degree).Title("Degree").Width(180);
        x.Bound(y => y.MasterDegree).Title("MasterDegree").Width(180);
        x.Bound(y => y.Phd).Title("Phd").Width(180);
        x.Bound(y => y.docent).Title("docent").Width(180);
        x.Bound(y => y.Prof).Title("Prof").Width(180);
    })
    .Selectable(x => x.Mode(GridSelectionMode.Multiple))
    .ToolBar(x =>
    {
        x.Custom().Text("Ekle").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWSH_UserReport", new { area = "SH" }));
        x.Custom().Text("Düzenle").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWSH_UserReport", new { area = "SH" }));
        x.Custom().Text("Detay").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWSH_UserReport", new { area = "SH" }));
        x.Custom().Text("Sil").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWSH_UserReport", new { area = "SH" }));
    }))
