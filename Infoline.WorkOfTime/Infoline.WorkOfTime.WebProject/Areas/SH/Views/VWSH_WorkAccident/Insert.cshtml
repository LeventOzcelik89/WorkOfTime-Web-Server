@model Infoline.WorkOfTime.BusinessData.VWSH_WorkAccident
@{
    ViewBag.Title = "İş Kazası / Olayı Ekleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Content/Plugins/ckeditor5.1/ckeditor.js" data-selector="modalContainer"></script>
<script type="text/javascript" data-selector="modalContainer">
    function beforeFunc() {
        debugger;
        var tag = $("#keyword").data("tagify");
        if (tag && tag.value) {
            debugger;
            $("#keyword").val(tag.value.map(a => a.value).join(","))
        }
        return true;
    }

    function modelChange() {
        var template = $("#templateId").data("handler").dataItem();
        var userId = $("#userId").data("handler").dataItem().id;
        var projectId = $("#projectId").data("handler").dataItem().Id;
        var taskId = $("#taskId").data("handler").dataItem().id;
        if (template.id != "" && template.id != null && template.id != undefined) {
            editor.setData("Yükleniyor..");
            $.ajax({
                url: "/SH/VWSH_WorkAccident/RenderTemplate",
                data: { userId: userId, projectId: projectId, taskId: taskId, templateId: template.id },
                success: function (res) {
                    res = res.replaceAll('color:#ff0001;', '');
                    res = res.replaceAll('color:#ff0001', '');
                    editor.setData(res);
                }
            })

        } else {
            editor.setData("");
        }
    }
</script>
<style type="text/css" data-selector="modalContainer">
    .modal-lg{
        width: 80%;
    }
</style>

@using (Html.BeginForm("Insert", "VWSH_WorkAccident", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-before", "beforeFunc" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="code">Kodu</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.code, new Dictionary<string, object>()
             {
                 {"class", "form-control"},
                 {"placeholder", "Lütfen Kodu giriniz.."}
             }).Validate(Validations.TextEverywhere(true, 0, 50))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="accidentDate">Kaza / Olay Tarihi</label>
        </div>
        <div class="col-md-8">
            @(
                Html.Akilli().
                DateTimePickerFor(model => model.accidentDate).
                Placeholder("Başlangıç Tarihi").
                Format(Extensions.DateFormatFull()).
                Value(Model.accidentDate.HasValue ? Model.accidentDate.Value : DateTime.Now)
            )
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="taskId">Görev Seçiniz</label>
        </div>
        <div class="col-md-8">
            @(
                Html.Akilli().
                DropDownListFor(model => model.taskId).
                OptionLabel("Lütfen Görev Seçiniz..").
                DataTextField("code").
                DataValueField("id").
                //ValueTemplate("#=TemplateEngine('FTM_TaskDropDownTemplate',data)#").
                Template("#=TemplateEngine('taskTemplate',data)#").
                Action(b => b.Action("DataSourceDropDown", "VWFTM_Task", new { area = "FTM" })).
                Sort(x => x.Add("code").Ascending()).
                Events(a => a.Change("modelChange")).
                Readonly(Model.taskId != null).
                Execute()
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="projectId">Proje Seçiniz</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
                .DropDownListFor(model => model.projectId)
                .OptionLabel("Lütfen Proje Seçiniz..")
                //.DataValueField("Id")
                .DataTextField("ProjectName")
                .Action(b => b.Action("DataSourceDropDown", "VWPRJ_Project", new { area = "PRJ" }))
                .Sort(x => x.Add("ProjectName").Ascending())
                .Events(a => a.Change("modelChange"))
                .Readonly(Model.projectId != null)
                .Execute()
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="userId">Personel Seçiniz</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
                  .DropDownListFor(model => model.userId)
                  .OptionLabel("Lütfen Personel Seçiniz..")
                  .DataTextField("FullName")
                  .DataValueField("id")
                  .Template("#=TemplateEngine('userTemplate',data)#")
                  .Action(b => b.Action("DataSourceDropDown", "VWSH_User", new { area = "SH" }))
                  .Sort(x => x.Add("FullName").Ascending())
                  .Filter<VWSH_User>(a => a.type == (int)(EnumSH_UserType.MyPerson))
                  .Events(a => a.Change("modelChange"))
                  .Execute("id")
                )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="keyword">Anahtar Kelimeler</label>
        </div>
        <div class="col-md-8">
            <input id="keyword" name="keyword" placeholder="Lütfen Anahtar Kelimeleri Giriniz.." data-item="keyword" data-role="tagify" />
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="templateId">Şablon</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
                  .DropDownListFor(model => model.templateId)
                  .OptionLabel("Lütfen Şablon Seçiniz..")
                  .DataTextField("title")
                  .DataValueField("id")
                  .Action(b => b.Action("DataSourceDropDown", "VWUT_Template", new { area = "UT" }))
                  .Filter<VWUT_Template>(f => f.type == (short)EnumUT_TemplateType.accident && f.status == (short)EnumUT_TemplateStatus.active)
                  .Sort(x => x.Add("title").Ascending())
                  .Events(a => a.Change("modelChange"))
                  .Execute("id")
                )
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-12">
            <label class="control-label label-md" for="content">Form</label>
        </div>
        <div class="col-md-12">
            @Html.HiddenFor(a => a.content)
            @Html.TextArea("contentFakeElement", HttpUtility.HtmlDecode(Model.content))
            <script type="text/javascript" data-selector="modalContainer">
                var editor = CKEDITOR.replace('contentFakeElement', {
                    language: 'tr',
                    height: 320,
                    htmlEncodeOutput: true,
                    removeButtons: 'Save',
                    removePlugins: 'Save'
                });

                editor.on('instanceReady', function () { $("#content").val(new Option(editor.getData()).innerHTML); });
                editor.on('change', function () { $("#content").val(new Option(editor.getData()).innerHTML); });

            </script>
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}


