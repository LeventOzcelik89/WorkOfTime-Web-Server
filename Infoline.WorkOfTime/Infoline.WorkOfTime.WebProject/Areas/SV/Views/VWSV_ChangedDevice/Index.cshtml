@{
    ViewBag.Title = "Değişen Cihazlar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@(Html.Akilli()
    .Grid<Infoline.WorkOfTime.BusinessData.VWSV_ChangedDevice>("VWSV_ChangedDevice")
    .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWSV_ChangedDevice", new { area = "SV" })).PageSize(25))
    .Columns(x =>
    {
        x.Bound(y => y.oldproduct_Title).Title("Eski Ürün").Width(180);
        x.Bound(y => y.newproduct_Title).Title("Yeni Ürün").Width(180);
        x.Bound(y => y.serviceCode).Title("Servis Form Kodu").Width(180);
        x.Bound(y => y.createdby_Title).Title("Oluşturan").Width(180);
    })
    .Selectable(x => x.Mode(GridSelectionMode.Multiple))
    .ToolBar(x =>
    {
        x.Custom().Text("<i class='fa fa-plus-circle' data-original-title='Değişen Cihaz Ekle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWSV_ChangedDevice", new { area = "SV" }));
        //x.Custom().Text("<i class='fa fa-edit' data-original-title='Değişmiş Cihazı Güncelle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWSV_ChangedDevice", new { area = "SV" }));
        x.Custom().Text("<i class='fa fa-info-circle' data-original-title='Değişmiş Cihaz Detayları'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWSV_ChangedDevice", new { area = "SV" }));
        x.Custom().Text("<i class='fa fa-trash' data-original-title='Değişen Cihaz Kaydını Sil'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWSV_ChangedDevice", new { area = "SV" }));
    }))
