@model Infoline.WorkOfTime.BusinessAccess.VMPA_TransactionModel

<style type="text/css" data-selector="modalContainer">

    [for="status_2"] {
        display: none;
    }
</style>

<div class="form-group">
    <div class="col-md-4">
        <label class="control-label label-md req" for="accountId">Tedarikçi Hesap</label>
    </div>
    <div class="col-md-8">
        @(
            Html.Akilli()
            .DropDownListFor(model => model.accountId)
            .OptionLabel("Lütfen Hesap seçiniz..")
            .DataTextField("searchField")
            .DataValueField("id")
            .Action(b => b.Action("DataSourceDropDown", "VWPA_Account", new { area = "PA" }))
            //.Filter<VWPA_Account>(f => f.myAccount == false && f.dataTable == "CMP_Company")
            .Sort(x => x.Add("name").Ascending())
            .Template("#=TemplateEngine('accountTemplate',data)#")
            //.Events(e => { e.DataBound("ledger.events.dataBoundAccount"); e.Change("ledger.events.changeAccount"); })
            .Validate(Validations.Required)
            .Execute("id")
        )
    </div>
</div>

<div class="form-group">
    <div class="col-md-4">
        <label class="control-label label-md req" for="accountId">Fiş/Fatura Tarihi</label>
    </div>
    <div class="col-md-8">
        @(
            Html.Akilli()
            .DatePickerFor(model => model.progressDate)
            .Format("dd.MM.yyyy")
            .Min(DateTime.Now)
            .Value(Model.progressDate.HasValue ? Model.progressDate : DateTime.Now)
        )
    </div>
</div>

<div class="form-group">
    <div class="col-md-4">
        <label class="control-label label-md req" for="amount">Tutar</label>
    </div>
    <div class="col-md-8">
        <div class="input-group m-b">
            @Html.Akilli().NumericTextBoxFor(model => model.amount).Max(999999999).Min(0).Spinners(false).Decimals(2).Format("N2").Validate(Validations.Required)
            <span class="input-group-addon" data-transaction="currency">@(Model.Currency_Symbol != null ? Model.Currency_Symbol : "₺")</span>
        </div>
    </div>
</div>

<div class="form-group">
    <div class="col-md-4">
        <label class="control-label label-md req" for="tax">Vergi</label>
    </div>
    <div class="col-md-8">
        <div class="input-group m-b">
            @Html.Akilli().NumericTextBoxFor(model => model.tax).Max(999999999).Min(0).Spinners(false).Decimals(2).Format("N2").Validate(Validations.Required)
            <span class="input-group-addon" data-transaction="currency">@(Model.Currency_Symbol != null ? Model.Currency_Symbol : "₺")</span>
        </div>
    </div>
</div>

<div class="form-group">
    <div class="pull-right" style="padding-right: 15px;">
        <label class="control-label label-md">Toplam Tutar (Vergi Dahil) :</label>
        <strong style="font-size: 20px;color: orange;">
            <span id="totalAmount">0</span>
            <span data-transaction="currency">@(Model.Currency_Symbol != null ? Model.Currency_Symbol : "₺")</span>
        </strong>
    </div>
</div>


<div class="form-group">
    <div class="col-md-4">
        <label class="control-label label-md req" for="currencyId">Para Birimi</label>
    </div>
    <div class="col-md-8">
        @(
            Html.Akilli()
            .DropDownListFor(model => model.currencyId)
            .OptionLabel("Lütfen Para Birimi seçiniz..")
            .DataTextField("name")
            .DataValueField("id")
            .Action(b => b.Action("DataSourceDropDown", "UT_Currency", new { area = "UT" }))
            .Sort(x => x.Add("name").Ascending())
            .Events(a => { a.Change("expense.events.currencyChange"); a.DataBound("expense.events.currencyDataBound"); })
            .Validate(Validations.Required)
            .Execute()
        )
    </div>
</div>

<div class="form-group">
    <div class="col-md-4">
        <label class="control-label label-md" for="status"> <i class="fa fa-info-circle"></i> Ödeme Durumu</label>
    </div>
    <div class="col-md-8">
        @(Html.Akilli().RadioButtonGroupFor(a => a.status).Value(EnumPA_TransactionStatus.Odenecek))
    </div>
</div>

<div class="form-group hide" id="statusDiv_0" data-id="status" style="padding-top:10px;">
    <div class="col-md-4">
        <label class="control-label"><i class="fa fa-bell"></i>  Ödeneceği Tarih </label>
    </div>
    <div class="col-sm-8">
        @(
            Html.Akilli()
            .DatePickerFor(model => model.date)
            .Format("dd.MM.yyyy")
            .MinDateElement("progressDate")
            .Value(Model.date.HasValue ? Model.date : DateTime.Now)
        )
    </div>
    <div class="col-md-8 col-md-offset-4" style="text-align:center;">
        <div class="btn-group" role="group" aria-label="Basic example" style="width:100%;">
            <button type="button" data-id="0" data-name="filterDate" style="width:20%;margin-left:0px !important;" class="btn filterButtonPassive"> <span></span>AYNI GÜN</button>
            <button type="button" data-id="7" data-name="filterDate" style="width:20%;margin-left:0px !important;" class="btn filterButtonPassive"><span></span>7 GÜN</button>
            <button type="button" data-id="14" data-name="filterDate" style="width:20%;margin-left:0px !important;" class="btn filterButtonPassive"><span></span>14 GÜN</button>
            <button type="button" data-id="30" data-name="filterDate" style="width:20%;margin-left:0px !important;" class="btn filterButtonPassive"><span></span>30 GÜN</button>
            <button type="button" data-id="60" data-name="filterDate" style="width:20%;margin-left:0px !important;" class="btn filterButtonPassive"><span></span>60 GÜN</button>
        </div>
    </div>
</div>

<div id="statusDiv_1" data-id="status" style="padding-top:10px;">
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label"><i class="fa fa-check"></i>  Ödendiği Tarih </label>
        </div>
        <div class="col-sm-8">
            @(
                Html.Akilli()
                .DatePicker("paymentDate").Name("Ledger.date")
                .Format("dd.MM.yyyy")
                .MinDateElement("issueDate")
                .Value(DateTime.Now)
                .Max(DateTime.Now)
            )
        </div>

    </div>
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label"><i class="fa fa-credit-card"></i>  Ödendiği Hesap </label>
        </div>
        <div class="col-sm-8">

            @(Html.Akilli().DropDownList("account").Name("Ledger.accountId").HtmlAttributes(new Dictionary<string, object>()
                {
                    {"style", "width:100%"},
                    {"class", "form-control"},
                })
                .Filter(FilterType.Contains)
                .DataTextField("searchField")
                .DataValueField("id")
                .Action(b => b.Action("DataSourceDropDown", "VWPA_Account", new { area = "PA" }))
                .Template("#=TemplateEngine('accountTemplate',data)#")
                //.Events(e => { e.Change("_invoice.Events.changeAccount"); })
                .Filter<VWPA_Account>(f => f.myAccount == true && f.status == true)
                .Sort(x => x.Add("name").Ascending())
                .Execute()
            )

        </div>
    </div>
</div>


<div class="hide" id="statusDiv_2" data-id="status" style="padding-top:10px;">
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label"><i class="fa fa-credit-card"></i>  Cebinden Ödeyen </label>
        </div>
        <div class="col-sm-8">
            @(Html.Akilli().DropDownList("dataId").Name("Account.dataId").HtmlAttributes(new Dictionary<string, object>()
                {
                    {"style", "width:100%"},
                    {"class", "form-control"},
                })
                .DataTextField("FullName")
                .DataValueField("id")
                .Action(b => b.Action("DataSourceDropDown", "VWSH_User", new { area = "SH" }))
                .Filter<VWSH_User>(a => a.type == (int)(EnumSH_UserType.MyPerson) && a.IsWorking == true)
                .Sort(x => x.Add("FullName").Ascending())
                .Execute()
            )

        </div>

    </div>
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label"><i class="fa fa-check"></i>  Geri Ödeneceği Tarih </label>
        </div>
        <div class="col-sm-8">
            @(
                Html.Akilli()
                .DatePickerFor(model => model.payBackDate)
                .Format("dd.MM.yyyy")
                .MinDateElement("progressDate")
                .Value(DateTime.Now)
            )
        </div>
    </div>

</div>



<div class="form-group">
    <div class="col-md-4">
        <label class="control-label label-md" for="Dosya">Fiş/Fatura Dosyası </label>
    </div>
    <div class="col-md-8">
        @(
            Html.Akilli().FileUpload()
            .DataTable("PA_Transaction")
            .DataId(Model.id)
            .DataKey(x => x.fileGroup == "Fiş/Fatura Dosyası")
        )
    </div>
</div>

<div class="form-group">
    <div class="col-md-4">
        <label class="control-label label-md" for="description">Açıklama</label>
    </div>
    <div class="col-md-8">
        @Html.TextAreaFor(model => model.description, new Dictionary<string, object>()
        {
            {"class", "form-control"},
            {"placeholder", "Lütfen Açıklama giriniz.."}
        })
    </div>
</div>


