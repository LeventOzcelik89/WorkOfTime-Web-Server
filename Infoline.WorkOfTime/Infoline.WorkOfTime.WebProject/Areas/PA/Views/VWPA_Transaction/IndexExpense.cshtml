@{
    ViewBag.Title = "Gider Listesi";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var types = Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumPA_TransactionType>();
    types = types.Where(a => a.Value != EnumPA_TransactionType.Cek.ToDescription() &&
                        a.Value != EnumPA_TransactionType.MaasPrim.ToDescription() &&
                        a.Value != EnumPA_TransactionType.SatisFatura.ToDescription() &&
                        a.Value != EnumPA_TransactionType.Sozlesme.ToDescription());
}


<script type="text/javascript" data-selector="modalContainer">

    var types = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumPA_TransactionType>()))

    $(document)
        .on("selected:grid", "#VWPA_Transaction", function (e, res) {

            $('[data-id="detail"]').removeClass("hide");
            $('[data-id="detail"]').attr("data-default","");

            if (res.type == '@((int)EnumPA_TransactionType.AlisFatura)') {
                $('[data-id="detail"]').addClass("hide");
                $('[data-id="detail"]').removeAttr("data-default");
            }

            $('[data-id="update"]').removeClass("hide");
            if (res.type == '@((int)EnumPA_TransactionType.Masraf)' || res.type == '@((int)EnumPA_TransactionType.AlisFatura)') {
                $('[data-id="update"]').addClass("hide");
            }
        })

</script>

<div class="row">
    <div class="col-md-2">
        <div class="ibox ">
            <div class="ibox-content mailbox-content">
                <div class="file-manager">
                    <a class="btn btn-block btn-success" data-task="Insert" data-href="@Url.Action("InsertExpense","VWPA_Transaction",new { area="PA", type=(int)EnumPA_TransactionType.Vergi })" data-modal="true" data-method="get">
                        <i class="icon-plus-circle"></i> Vergi / SGK Primi Ekle
                    </a>
                    <a class="btn btn-block btn-primary" data-task="Insert" data-href="@Url.Action("InsertExpense","VWPA_Transaction",new { area="PA", type=(int)EnumPA_TransactionType.FisFatura })" data-modal="true" data-method="get">
                        <i class="icon-plus-circle"></i> Hızlı Fiş-Fatura Ekle
                    </a>
                    <a class="btn btn-block btn-info" data-task="Insert" data-href="@Url.Action("InsertExpense","VWPA_Transaction",new { area="PA", type=(int)EnumPA_TransactionType.BankaGideri })" data-modal="true" data-method="get">
                        <i class="icon-plus-circle"></i> Banka Gideri Ekle
                    </a>
                    <div class="space-25"></div>
                    <h5>TİPİNE GÖRE</h5>
                    <ul class="folder-list m-b-md" style="padding: 0">
                        <li class="clearfix">
                            <a href="#" data-grid="VWPA_Transaction" data-category="0" data-switch="radio" data-query="(direction~eq~@((int)EnumPA_TransactionDirection.Cikis))">
                                <i class="fa fa-align-justify" style="background-color:darkgrey"></i>  Tümü
                                <span data-counturl="/PA/VWPA_Transaction/DataSourceCount?filter=(direction~eq~@((int)EnumPA_TransactionDirection.Cikis))" style="background-color:darkgray" class="pull-right badge badge-inverse">0</span>
                            </a>
                        </li>

                        @foreach (var item in types.OrderBy(a => a.Key))
                        {
                            <li class="clearfix">
                                <a class="pull-left" data-switch="radio" href="#" data-grid="VWPA_Transaction" data-category="0" data-query="(direction~eq~@((int)EnumPA_TransactionDirection.Cikis)~and~type~eq~@item.Key)">
                                    <i class="fa @item.Generic["icon"] text-danger"></i>  @item.Value
                                </a>
                                <span class="badge badge-success pull-right m-l-md  m-t-xs" data-counturl="/PA/VWPA_Transaction/DataSourceCount?filter=(direction~eq~@((int)EnumPA_TransactionDirection.Cikis)~and~type~eq~@item.Key)">0</span>
                            </li>
                        }
                    </ul>
                    <h5>DURUMA GÖRE</h5>
                    <ul class="folder-list m-b-md" style="padding: 0">
                        <li class="clearfix">
                            <a href="#" data-grid="VWPA_Transaction" data-category="1" data-query="(direction~eq~@((int)EnumPA_TransactionDirection.Cikis)~and~debt~eq~0)">
                                <i class="fa fa-check text-primary"></i>  Ödendi
                                <span data-counturl="/PA/VWPA_Transaction/DataSourceCount?filter=(direction~eq~@((int)EnumPA_TransactionDirection.Cikis)~and~debt~eq~0)" class="badge badge-success pull-right">0</span>
                            </a>
                            <a href="#" data-grid="VWPA_Transaction" data-category="1" data-query="(direction~eq~@((int)EnumPA_TransactionDirection.Cikis)~and~debt~neq~0)">
                                <i class="fa fa-spinner text-warning"></i>  Ödenecek
                                <span data-counturl="/PA/VWPA_Transaction/DataSourceCount?filter=(direction~eq~@((int)EnumPA_TransactionDirection.Cikis)~and~debt~neq~0)" class="badge badge-success pull-right">0</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Gider Listesi</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content no-padding">
                @(Html.Akilli()
                    .Grid<Infoline.WorkOfTime.BusinessData.VWPA_Transaction>("VWPA_Transaction")
                    .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWPA_Transaction", new { area = "PA" })).Filter(a => a.direction == (int)EnumPA_TransactionDirection.Cikis).PageSize(25))
                    .Columns(x =>
                    {
                        x.Bound(y => y.id).GridSelector(GridSelectorType.Checkbox).Locked(true).ClientTemplate("#=TemplateEngine('VWPA_TransactionTemplate',data)#").Width(600);
                        x.Bound(y => y.invoiceId_Title).Title("İlişkili Fatura").Hidden(false).Width(130);
                        x.Bound(y => y.accountId_Title).Title("İlişkili Hesap").Hidden(false).Width(130);
                        x.Bound(y => y.direction_Title).Title("İşlem Yönü").Hidden(false).Width(130);
                        x.Bound(y => y.type_Title).Title("İşlem Tipi").Hidden(false).Width(130);
                        x.Bound(y => y.createdby_Title).Title("Talep Eden").Hidden(false).Width(130);
                        x.Bound(y => y.amount).Title("Miktar").Hidden(true).Width(130);
                        x.Bound(y => y.currencyId_Title).Title("Para Birimi").Hidden(false).Width(130);
                        x.Bound(y => y.date).Title("Planlanan Ödeme Tarihi").Hidden(false).Width(130).Format(Extensions.DateFormatShort(true)).Width(200);
                        x.Bound(y => y.description).Title("Açıklama").Hidden(false).Width(130);
                    })
                    .Selectable(x => x.Mode(GridSelectionMode.Single))
                    .Scrollable(s => s.Height(650))
                    .ToolBar(x =>
                    {
                        x.Custom().Text("<i data-original-title='Gider Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" }, { "data-id", "update" } }).Url(Url.Action("UpdateExpense", "VWPA_Transaction", new { area = "PA" }));
                        x.Custom().Text("<i data-original-title='Gider Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" }, { "data-id", "detail" } }).Url(Url.Action("DetailExpense", "VWPA_Transaction", new { area = "PA" }));

                        x.Custom().Text("<i data-original-title='Gideri Sil' class='fa fa-trash'></i>").HtmlAttributes(new Dictionary<string, object>() {
                            { "data-ask", "Ödeme planı silinirse, daha önce ödeme yapılmışsa onlar da silinecektir. Devam etmek istediğinizden emin misiniz?" }
                        }).Url(Url.Action("Delete", "VWPA_Transaction", new { area = "PA" }));
                    })
                )
            </div>
        </div>
    </div>
</div>