
@{
    ViewBag.Title = "Gelir Listesi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-2">
        <div class="ibox ">
            <div class="ibox-content mailbox-content">
                <div class="file-manager">
                    <a class="btn btn-block btn-success" data-task="Insert" data-href="@Url.Action("InsertIncome","VWPA_Transaction",new { area="PA" })" data-modal="true" data-method="get">
                        <i class="icon-reply-1"></i> Yeni Gelir Ekle
                    </a>
                    <div class="space-25"></div>
                    <h5>TİPİNE GÖRE</h5>
                    <ul class="folder-list m-b-md" style="padding: 0">
                        
                    </ul>
                    <h5>DURUMA GÖRE</h5>
                    <ul class="folder-list m-b-md" style="padding: 0">
                       
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Gider Listesi</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content no-padding">
                @(Html.Akilli()
                    .Grid<Infoline.WorkOfTime.BusinessData.VWPA_Transaction>("VWPA_Transaction")
                    .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWPA_Transaction", new { area = "PA" })).Filter(a => a.direction == (int)EnumPA_TransactionDirection.Giris).PageSize(25))
                    .Columns(x =>
                    {
                        x.Bound(y => y.id).GridSelector(GridSelectorType.Checkbox).ClientTemplate("#=TemplateEngine('VWPA_TransactionTemplate',data)#");
                        x.Bound(y => y.invoiceId_Title).Title("İlişkili Fatura").Hidden(true).Width(130);
                        x.Bound(y => y.accountId_Title).Title("İlişkili Hesap").Hidden(true).Width(130);
                        x.Bound(y => y.direction_Title).Title("İşlem Yönü").Hidden(true).Width(130);
                        x.Bound(y => y.type_Title).Title("İşlem Tipi").Hidden(true).Width(130);
                        x.Bound(y => y.amount).Title("Miktar").Hidden(true).Width(130);
                        x.Bound(y => y.currencyId_Title).Title("Para Birimi").Hidden(true).Width(130);
                        x.Bound(y => y.date).Title("Planlanan Ödeme Tarihi").Hidden(true).Width(130).Format(Extensions.DateFormatShort(true));
                        x.Bound(y => y.description).Title("Açıklama").Hidden(true).Width(130);
                    })
                    .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                //.ToolBar(x =>
                //{
                //    x.Custom().Text("Ekle").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWPA_Transaction", new { area = "PA" }));
                //    x.Custom().Text("Düzenle").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWPA_Transaction", new { area = "PA" }));
                //    x.Custom().Text("Detay").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWPA_Transaction", new { area = "PA" }));
                //    x.Custom().Text("Sil").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWPA_Transaction", new { area = "PA" }));
                //})

                )
            </div>
        </div>
    </div>
</div>