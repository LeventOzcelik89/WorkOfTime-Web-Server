@model Infoline.WorkOfTime.BusinessAccess.VMDOC_DocumentModel
@{
    ViewBag.Title = "Revizyon Talebi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Content/Plugins/ckeditor/ckeditor.js" data-selector="modalContainer"></script>


@using (Html.BeginForm("RequestRevision", "VWDOC_Document", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "id", "requestRevisionForm"},
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md " for="code">Doküman Numarası</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.code, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"readonly", "readonly"}
            })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md " for="code">Versiyon</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.versionNumber, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"readonly", "readonly"}
            })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="type">Tipi</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli().RadioButtonGroupFor(a => a.type).Value(EnumDOC_DocumentType.Document).Readonly(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md " for="title">Başlık</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.title, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                     {"readonly", "readonly"}
            })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="subject">Konu</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.subject, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                 {"readonly", "readonly"}
            })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="content">İçerik</label>
        </div>
        <div class="col-md-8">
            <textarea class="form-control" name="content" id="content" data-item="content"></textarea>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="responsibleUserId">Sorumlu</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
                .DropDownListFor(model => model.responsibleUserId)
                .OptionLabel("Lütfen Sorumlu Personel Seçiniz..")
                .DataTextField("FullName")
                .DataValueField("id")
                .Filter<VWSH_User>(x=> x.IsWorking == true && !string.IsNullOrEmpty(x.FullName))
                .Template("#=TemplateEngine('userTemplate',data)#")
                .Action(b => b.Action("DataSourceDropDown", "VWSH_User", new { area = "SH" }))
                .Sort(x => x.Add("FullName").Ascending())
                .Execute("id").Readonly(true)
             )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req">Doküman</label>
        </div>
        <div class="col-md-8">
            @(
                 Html.Akilli().FileUpload()
                 .DataTable("DOC_DocumentVersion")
                 .DataId(Model.documentVersion.id)
                 .DataKey(x => x.fileGroup == "Doküman Dosyası").PreviewMode(true)
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req">Kapsamı</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
.MultiSelectFor(model => model.documentScopeOrganizationUnitIds)
.Placeholder("Lütfen Organizasyon Birimi Seçiniz..")
.DataTextField("PID_Title")
.DataValueField("id")
.Filter<VWINV_CompanyDepartments>(x => x.Type == (int)EnumINV_CompanyDepartmentsType.Organization)
.Action(b => b.Action("DataSourceDropDown", "VWINV_CompanyDepartments", new { area = "INV" }))
.Sort(x => x.Add("PID_Title").Ascending())
.Execute("id").Readonly(true)
.TagMode(TagMode.Multiple)
                )
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" style="color:red;"> Revizyon Numarası</label> 
            @if (Request.Cookies["language"].Value == "ENG")
            {
                <i class="fa fa-info-circle" data-original-title="Enter the number / title you want to be revized"></i>
            }
            else
            {
                <i class="fa fa-info-circle" data-original-title="Revizyon edilmesini istediğiniz numara/başlık giriniz."></i>
            }
            
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.revisionRequest.revisionNumber, new Dictionary<string, object>()
          {
              {"class", "form-control"},
              {"placeholder", "Revizyon numarası giriniz."}
          }).Validate(Validations.Required)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" style="color:red;"> Revizyon İçeriği</label>

            @if (Request.Cookies["language"].Value == "ENG")
            {
                <i class="fa fa-info-circle" data-original-title="Enter the new content you want to be revized"></i>
            }
            else
            {
                <i class="fa fa-info-circle" data-original-title="Revizyon edilmesini istediğiniz yeni içeriği giriniz."></i>
            }
        </div>
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.revisionRequest.revisionContent, new Dictionary<string, object>()
        {
            {"class", "form-control"},
             {"placeholder", "Revizyon içeriği giriniz"}
        }).Validate(Validations.Required)
        </div>
    </div>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>
}


<script type="text/javascript" data-selector="modalContainer">
    var page = {
        content: `@Html.Raw(Model.content)`,
        loadEditor: function (content) {
            if ($('#' + content).length == 0) {
                return;
            }
            var form = $('#' + content).parents('.form-horizontal');
            var idElem = form.find('[name="id"]');

            var id = newGuid();

            if (idElem && idElem != null && idElem != "") {
                id = idElem.val();
            }

            CKEDITOR.replace(content, {
                extraPlugins: 'image2',
                height: '120px',
                removeButtons: 'CustomImageUploader',
                filebrowserImageUploadUrl: '/HDM/VWHDM_TicketMessage/EditorUploadFile?id=' + id,
                removePlugins: 'about',
                setReadOnly: 'true'
            });

            $('#content').val(page.content);

        }
    };
    page.loadEditor('content');

    setTimeout(function () {
        $('#requestRevisionForm .k-multiselect').find('.k-i-close').remove();
        $('#requestRevisionForm .k-multiselect').find('.fa-check-square-o').remove();
    }, 1500)
</script>

<style type="text/css" data-selector="modalContainer">
    #requestRevisionForm span#cke_1_top {
        display: none;
    }
</style>