@model Infoline.WorkOfTime.BusinessData.FVR_Favorites
@{
    ViewBag.Title = "Kayıt Güncelleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using(Html.BeginForm("Update", "FVR_Favorites", FormMethod.Post, new Dictionary<string, object>() {  
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="userId">userId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.userId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen userId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Area">Area</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Area, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Area Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Controller">Controller</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Controller, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Controller Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Method">Method</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Method, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Method Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Count">Count</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Count, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Count Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
