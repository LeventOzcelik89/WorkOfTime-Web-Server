@model VMFTM_TaskOperationModel
@{
	if (Model.status == (int)EnumFTM_TaskOperationStatus.MemnuniyetAnketiYuklendi)
	{
		ViewBag.Title = "Anket Detayı";
	}
	else
	{
		ViewBag.Title = "Görev Operasyon Detayı";
	}
	Layout = "~/Views/Shared/_Layout.cshtml";
	var status = (EnumFTM_TaskOperationStatus)Model.status;
}

<style type="text/css">
	.k-pager-wrap.k-grid-pager.k-widget.k-floatwrap {
		display: none;
	}
</style>

@using (Html.BeginForm("Update", "VWFTM_TaskOperation", FormMethod.Post, new Dictionary<string, object>() {
	{ "class", "form-horizontal" },
	{ "role", "form" },
	{ "data-selector", "modalContainer" },
	{ "data-formType", "Ajax" }
}))
{


	<div class="form-group">
		<div class="col-md-3">
			<label class="control-label label-md" for="description">Tarih/Oluşturan : </label>
		</div>
		<div class="col-md-9">
			<div class="row">
				<div class="col-md-6">
					@Html.TextBoxFor(model => model.created, new Dictionary<string, object>()
					{
						{"class", "form-control"},
						{"disabled", "disabled"}
					})
				</div>
				<div class="col-md-6">
					@Html.TextBoxFor(model => model.createdby_Title, new Dictionary<string, object>()
					{
						{"class", "form-control"},
						{"disabled", "disabled"}
					})
				</div>
			</div>
		</div>
	</div>


	if (status == EnumFTM_TaskOperationStatus.GorevDurduruldu)
	{
		<div class="form-group">
			<div class="col-md-3">
				<label class="control-label label-md" for="subject_Title">Durdurma Sebebi :  </label>
			</div>
			<div class="col-md-9">
				@Html.TextBoxFor(model => model.subject_Title, new Dictionary<string, object>()
				{
					{"class", "form-control"},
					{"readonly","readonly" }
				})
			</div>
		</div>
	}

	if (status != EnumFTM_TaskOperationStatus.MemnuniyetAnketiYuklendi)
	{
		<div class="form-group">
			<div class="col-md-3">
				<label class="control-label label-md" for="description">Konum : </label>
			</div>
			<div class="col-md-9">
				@(Html.Akilli().MapInputFor(a => a.location).ReadOnly(true).Navigation(false).Opened(false))
			</div>
		</div>
	}


	if (Model.fixture_Title != null)
	{
		<div class="form-group">
			<div class="col-md-3">
				<label class="control-label label-md" for="description">Envanter :  </label>
			</div>
			<div class="col-md-9">
				@Html.TextBoxFor(model => model.fixture_Title, new Dictionary<string, object>()
				{
					{"class", "form-control"},
					{"readonly","readonly" }
				}).Validate(Validations.Required)
			</div>
		</div>
	}

	<div class="form-group">
		<div class="col-md-3">
			<label class="control-label label-md" for="description">Açıklama : </label>
		</div>
		<div class="col-md-9">
			@Html.TextAreaFor(model => model.description, new Dictionary<string, object>()
			{
				{"class", "form-control"},
				{"readonly","readonly" }
			}).Validate(Validations.Required)
		</div>
	</div>


	if (status == EnumFTM_TaskOperationStatus.UrunDegisimi)
	{
		@(Html.Akilli()
                        .Grid<Infoline.WorkOfTime.BusinessData.VWPRD_StockAction>("VWPRD_StockAction")
                        .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWPRD_StockAction", new { area = "PRD" })).Filter(a => a.stockTable == "CMP_Storage" && a.stockId == Model.Task.customerStorageId && a.type ==(Int16)EnumPRD_TransactionType.Transfer).PageSize(2))
                        .Scrollable(a => a.Height(80))
                        .Columns(x =>
                        {
                                x.Bound(y => y.productId_Title).Title("Ürün").Width(250);
                                x.Bound(y => y.totalQuantity).Title("Miktar").ClientTemplate("<span style='color:#=(totalQuantity<0 ? 'red' : 'green')#'>#:kendo.toString(totalQuantity, 'n2')# #:unitId_Title#</span> ").Width(130).Format("{0:N2}");
                                x.Bound(y => y.serialCodes).Title("Seri Numaraları").Width(200);
                        })
                        .Selectable(x => x.Mode(GridSelectionMode.Single)))

		<br />
	}


	if (status == EnumFTM_TaskOperationStatus.GorevFormuDoldurulduAnaUrun || status == EnumFTM_TaskOperationStatus.GorevFormuDoldurulduAltUrun)
	{

		<script src="~/Content/Plugins/formBuilder/form-render.min.js"></script>
		<script src="/Content/Plugins/Polyfill/polyfill.min.js"></script>
		<script type="text/javascript">
                var pageFormOperation = {
                    data: @Html.Raw(Infoline.Helper.Json.Serialize(Model)),
                    form: null,
                    fnc:{
                        renderForm: function () {
                            var data = JSON.parse(pageFormOperation.data.jsonResult);
                            $("#markup").formRender({ formData: data });
                            $.each(data, function (i, item) { if (item.type === "checkbox-group" || item.type === "radio-group") { if (typeof item.required !== 'undefined' && item.required === true) { if (item.userData.length > 0) { $('.field-' + item.name).find('input').each(function (i, e) { if ($.inArray(e.value, item.userData) !== -1) { $(e).trigger("click"); } }); } } } });
                        }
                    },
                    redirect:function(){
                            window.open("/FTM/VWFTM_TaskFormResult/")
                    }
                }

                 pageFormOperation.fnc.renderForm();
                $('#markup').find('input, textarea').attr('disabled', 'disabled');
		</script>

		<div class="form-group">
			<div class="col-md-3">
				<label class="control-label label-md" for="Dosya">Form : </label>
			</div>
			<div class="col-md-9">
				<div id="markup" style="padding: 10px;background: #eee !important;border: 1px #ccc solid;"></div>
			</div>
		</div>
	}

	if (status == EnumFTM_TaskOperationStatus.MemnuniyetAnketiYuklendi)
	{
		<script src="~/Content/Plugins/formBuilder/form-render.min.js"></script>
		<script src="/Content/Plugins/Polyfill/polyfill.min.js"></script>
		<script type="text/javascript">
                var pageFormOperation = {
                    data: @Html.Raw(Infoline.Helper.Json.Serialize(Model)),
                    form: null,
                    fnc:{
                        renderForm: function () {
                            var data = JSON.parse(pageFormOperation.data.jsonResult);
                            $("#markup").formRender({ formData: data });
                            $.each(data, function (i, item) { if (item.type === "checkbox-group" || item.type === "radio-group") { if (typeof item.required !== 'undefined' && item.required === true) { if (item.userData.length > 0) { $('.field-' + item.name).find('input').each(function (i, e) { if ($.inArray(e.value, item.userData) !== -1) { $(e).trigger("click"); } }); } } } });
                        }
                    },
                    redirect:function(){
                            window.open("/FTM/VWFTM_TaskFormResult/")
                    }
                }

                 pageFormOperation.fnc.renderForm();
                $('#markup').find('input, textarea').attr('disabled', 'disabled');
		</script>

		<div class="form-group">
			<div class="col-md-3">
				<label class="control-label label-md" for="Dosya">Form : </label>
			</div>
			<div class="col-md-9">
				<div id="markup" style="padding: 10px;background: #eee !important;border: 1px #ccc solid;"></div>
			</div>
		</div>
	}

	if (status == EnumFTM_TaskOperationStatus.GorevOlusturuldu ||
		status == EnumFTM_TaskOperationStatus.GorevOlusturulduMusteri ||
		status == EnumFTM_TaskOperationStatus.GorevOlusturulduSistem ||
		status == EnumFTM_TaskOperationStatus.GorevDosyaIslemiAnaUrun ||
		status == EnumFTM_TaskOperationStatus.UrunDegisimi ||
		status == EnumFTM_TaskOperationStatus.GorevDosyaIslemiAltUrun ||
		status == EnumFTM_TaskOperationStatus.IslakImzaliFormYuklendi)
	{
		<div class="form-group">
			<div class="col-md-3">
				<label class="control-label label-md" for="Dosya">Dosya : </label>
			</div>
			<div class="col-md-9">
				@(
                Html.Akilli().FileUpload()
                .DataTable("FTM_TaskOperation")
                .DataId(Model.id)
                .DataKey(x => x.fileGroup == "Görev Dosyası")
                .Validate(true)
                .PreviewMode(true)
            )
			</div>
		</div>
	}

	<div class="buttons">
		@if (status == EnumFTM_TaskOperationStatus.GorevFormuDoldurulduAltUrun ||
			status == EnumFTM_TaskOperationStatus.GorevFormuDoldurulduAnaUrun ||
			status == EnumFTM_TaskOperationStatus.GorevDosyaIslemiAnaUrun ||
			status == EnumFTM_TaskOperationStatus.GorevDosyaIslemiAltUrun ||
			status == EnumFTM_TaskOperationStatus.GorevIslemYapiliyorAltUrun ||
			status == EnumFTM_TaskOperationStatus.GorevIslemYapiliyorAnaUrun ||
			status == EnumFTM_TaskOperationStatus.IslakImzaliFormYuklendi)
		{
			<button class="btn btn-md btn-warning pull-left" data-task="Insert" data-ask="Silmek istediğinizden eminmisiniz." data-show="single" data-method="POST" data-href="@Url.Action("Delete","VWFTM_TaskOperation",new {area="FTM" })" data-id="@Model.id"><i class="fa fa-trash"></i> Sil</button>
		}


		<button class="btn btn-md btn-danger pull-right" data-task="modalClose">Kapat</button>
	</div>

}
