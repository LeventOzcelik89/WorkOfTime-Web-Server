@model List<Guid>
@{
	ViewBag.Title = "Detaylı Görev Listesi Raporu";
	Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (Model.Count() > 0)
{
	@(Html.Akilli()
  .Grid<Infoline.WorkOfTime.BusinessData.VWFTM_TaskGrid>("VWFTM_TaskGrid")
  .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWFTM_TaskGrid", new { area = "FTM" }))
  .Filter(a=>Model.Contains(a.id))
  .PageSize(25).Sort(a => a.Add(c => c.lastOperationDate).Descending())).Scrollable(a => a.Height(500))
  .Groupable(g => g.ShowFooter(false))
  .ColumnMenu()
  .Columns(x =>
  {
      x.Bound(y => y.code).Title("Görev Kodu").Width(180);
      x.Bound(y => y.type_Title).Title("Görev Tipi").Width(180);
      x.Bound(y => y.company_Title).Title("Görevli Firma").Width(180);
      x.Bound(y => y.customer_Title).Title("Müşteri").Width(180);
      x.Bound(y => y.customerStorage_Title).Title("Şube/Depo/Kısım").Width(200);
      x.Bound(y => y.groupName).Title("Grup/Ekip").Width(180);
      x.Bound(y => y.assignUser_Title).Title("Görevli Personel").Width(180);
      x.Bound(y => y.fixture_Title).Title("Görevlendirilen Envanter").Width(230);
      x.Bound(y => y.created).Title("Oluşturulma Tarihi").Format(Extensions.DateFormatFull(true)).Width(250);
      x.Bound(y => y.createdby_Title).Title("Oluşturan Personel").Width(180);
      x.Bound(y => y.lastOperationStatus_Title).Title("Son Operasyon").Width(180);
      x.Bound(y => y.GorevAtamaTarihi).Title("Görev Atanma Tarihi").Format(Extensions.DateFormatFull(true)).Width(180);
      x.Bound(y => y.GorevUstlenilmeTarihi).Title("Görev Üstlenilme Tarihi").Format(Extensions.DateFormatFull(true)).Width(180);
      x.Bound(y => y.GorevBaslangicTarihi).Title("Görev Başlama Tarihi").Format(Extensions.DateFormatFull(true)).Width(180);
      x.Bound(y => y.GorevBitisTarihi).Title("Görev Çözüm Tarihi").Format(Extensions.DateFormatFull(true)).Width(200);
      x.Bound(y => y.CevapSure).Title("Cevap Süresi").Width(180);
      x.Bound(y => y.GecenSure).Title("Tamamlama Süresi").Width(180);
      x.Bound(y => y.planStartDate).Title("Planlanmış Başlangıç Tarihi").Format(Extensions.DateFormatFull(true)).Width(250);
      x.Bound(y => y.dueDate).Title("Planlanmış Bitiş Tarihi").Format(Extensions.DateFormatFull(true)).Width(250);
      x.Bound(y => y.city).Title("İl").Width(150);
      x.Bound(y => y.town).Title("İlçe").Width(150);
      x.Bound(y => y.openAddressLocationId_Title).Title("Açık Adres").Width(180);
      x.Bound(y => y.subjectTitles).Title("Görev Konuları").Width(180);
      x.Bound(y => y.DosyaSayisi).Title("Resim Adedi").Width(180);
      x.Bound(y => y.DoldurulanGorevFormSayisi).Title("Form Adedi").Width(180);

  }).

  Selectable(x => x.Mode(GridSelectionMode.Multiple))
     .ToolBar(x =>
     {

         x.Custom().Text("<i data-original-title='Görev Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" }, { "data-modal", "false" }, { "data-blank", "" } }).Url(Url.Action("Detail", "VWFTM_Task", new { area = "FTM" }));
     }))

}
else
{
	<div class="row">
		<div class="col-lg-3">
			<div class="widget style1 blue-bg">
				<div class="row">
					<div class="col-xs-4">
						<i class="icon-user-add fa-3x"></i>
					</div>
					<div class="col-xs-8 text-right">
						<span> Personel Ataması Bekleyenler </span>
						<h2 class="font-bold active unitName" data-grid="VWFTM_Task" data-category="0" data-counturl="/FTM/VWFTM_Task/DataSourceCount?filter=((assignUserId~eq~'99999999-1234-5678-0000-999999999999'~and~assignableUserIds~eq~'')~and~isComplete~eq~false)"> 0 Adet</h2>
					</div>
				</div>
			</div>
		</div>
		<div class="col-lg-3">
			<div class="widget style1 navy-bg">
				<div class="row">
					<div class="col-xs-4">
						<i class="icon-clock fa-3x"></i>
					</div>
					<div class="col-xs-8 text-right">
						<span> Devam Edenler </span>
						<h2 class="font-bold active unitName" data-grid="VWFTM_Task" data-category="0" data-counturl="/FTM/VWFTM_Task/DataSourceCount?filter=((assignUserId~neq~'99999999-1234-5678-0000-999999999999'~and~isComplete~eq~false)~and~lastOperationStatus~neq~30)"> 0 Adet</h2>
					</div>
				</div>
			</div>
		</div>
		<div class="col-lg-3">
			<div class="widget style1 lazur-bg">
				<div class="row">
					<div class="col-xs-4">
						<i class="icon-arrows-cw fa-3x"></i>
					</div>
					<div class="col-xs-8 text-right">
						<span> Çözüm Onayı Bekleyenler </span>
						<h2 class="font-bold active unitName" data-grid="VWFTM_Task" data-category="0" data-counturl="/FTM/VWFTM_Task/DataSourceCount?filter=(isComplete~eq~false~and~lastOperationStatus~eq~30)"> 0 Adet</h2>
					</div>
				</div>
			</div>
		</div>
		<div class="col-lg-3">
			<div class="widget style1 yellow-bg">
				<div class="row">
					<div class="col-xs-4">
						<i class="icon-check fa-3x"></i>
					</div>
					<div class="col-xs-8 text-right">
						<span> Çözümlenmiş Görevler </span>
						<h2 class="font-bold active unitName" data-grid="VWFTM_Task" data-category="0" data-counturl="/FTM/VWFTM_Task/DataSourceCount?filter=(isComplete~eq~true)"> 0 Adet</h2>
					</div>
				</div>
			</div>
		</div>
	</div>

	@(Html.Akilli()
  .Grid<Infoline.WorkOfTime.BusinessData.VWFTM_TaskGrid>("VWFTM_TaskGrid")
  .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWFTM_TaskGrid", new { area = "FTM" }))
  .PageSize(25).Sort(a => a.Add(c => c.lastOperationDate).Descending())).Scrollable(a => a.Height(500))
  .Groupable(g => g.ShowFooter(false))
  .ColumnMenu()
  .Columns(x =>
  {
      x.Bound(y => y.code).Title("Görev Kodu").Width(180);
      x.Bound(y => y.type_Title).Title("Görev Tipi").Width(180);
      x.Bound(y => y.company_Title).Title("Görevli Firma").Width(180);
      x.Bound(y => y.customer_Title).Title("Müşteri").Width(180);
      x.Bound(y => y.customerStorage_Title).Title("Şube/Depo/Kısım").Width(200);
      x.Bound(y => y.groupName).Title("Grup/Ekip").Width(180);
      x.Bound(y => y.assignUser_Title).Title("Görevli Personel").Width(180);
      x.Bound(y => y.fixture_Title).Title("Görevlendirilen Envanter").Width(230);
      x.Bound(y => y.created).Title("Oluşturulma Tarihi").Format(Extensions.DateFormatFull(true)).Width(250);
      x.Bound(y => y.createdby_Title).Title("Oluşturan Personel").Width(180);
      x.Bound(y => y.lastOperationStatus_Title).Title("Son Operasyon").Width(180);
      x.Bound(y => y.GorevAtamaTarihi).Title("Görev Atanma Tarihi").Format(Extensions.DateFormatFull(true)).Width(180);
      x.Bound(y => y.GorevUstlenilmeTarihi).Title("Görev Üstlenilme Tarihi").Format(Extensions.DateFormatFull(true)).Width(180);
      x.Bound(y => y.GorevBaslangicTarihi).Title("Görev Başlama Tarihi").Format(Extensions.DateFormatFull(true)).Width(180);
      x.Bound(y => y.GorevBitisTarihi).Title("Görev Çözüm Tarihi").Format(Extensions.DateFormatFull(true)).Width(200);
      x.Bound(y => y.CevapSure).Title("Cevap Süresi").Width(180);
      x.Bound(y => y.GecenSure).Title("Tamamlama Süresi").Width(180);
      x.Bound(y => y.planStartDate).Title("Planlanmış Başlangıç Tarihi").Format(Extensions.DateFormatFull(true)).Width(250);
      x.Bound(y => y.dueDate).Title("Planlanmış Bitiş Tarihi").Format(Extensions.DateFormatFull(true)).Width(250);
      x.Bound(y => y.created).Title("Oluşturulma Tarihi").Format(Extensions.DateFormatFull(true)).Width(250);


      x.Bound(y => y.DurdurulmaTarihi).Title("Durdurulma Tarihi").Format(Extensions.DateFormatFull(true)).Width(200);
      x.Bound(y => y.DevamTarihi).Title("Devam Tarihi").Format(Extensions.DateFormatFull(true)).Width(200);

      x.Bound(y => y.city).Title("İl").Width(150);
      x.Bound(y => y.town).Title("İlçe").Width(150);
      x.Bound(y => y.createdby_Title).Title("Oluşturan Personel").Width(180);
      x.Bound(y => y.openAddressLocationId_Title).Title("Açık Adres").Width(180);
      x.Bound(y => y.subjectTitles).Title("Görev Konuları").Width(180);
      x.Bound(y => y.description).Title("Açıklama").Width(180);
      x.Bound(y => y.DosyaSayisi).Title("Resim Adedi").Width(180);
      x.Bound(y => y.DoldurulanGorevFormSayisi).Title("Form Adedi").Width(180);
  }).

  Selectable(x => x.Mode(GridSelectionMode.Multiple))
     .ToolBar(x =>
     {

         x.Custom().Text("<i data-original-title='Görev Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" }, { "data-modal", "false" }, { "data-blank", "" } }).Url(Url.Action("Detail", "VWFTM_Task", new { area = "FTM" }));
     }))

}



<div class="theme-config">
	<div class="theme-config-box">
		<div class="spin-icon">
			<i class="fa fa-filter"></i>
		</div>
		<div class="skin-setttings">
			<div class="title">FİLTRELEME</div>
			<div class="file-manager">
				<h5> GÖREV DURUMU </h5>
				<ul class="folder-list" style="padding: 0">
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_TaskGrid" data-switch="radio" data-category="0" data-query="((assignUserId~eq~'99999999-1234-5678-0000-999999999999'~and~assignableUserIds~eq~'')~and~isComplete~eq~false)">
							<i class="icon-user-add"></i>  Personel Ataması Bekleyenler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_TaskGrid" data-switch="radio" data-category="0" data-query="((assignUserId~neq~'99999999-1234-5678-0000-999999999999'~and~isComplete~eq~false)~and~lastOperationStatus~neq~30~and~lastOperationStatus~neq~26)">
							<i class="icon-clock"></i>  Devam Edenler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" id="pendingApprove" data-grid="VWFTM_TaskGrid" data-switch="radio" data-category="0" data-query="(isComplete~eq~false~and~lastOperationStatus~eq~30)">
							<i class="icon-arrows-cw"></i>  Çözüm Onayı Bekleyenler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_TaskGrid" data-switch="radio" data-category="0" data-query="(isComplete~eq~true)">
							<i class="fa fa-check"></i>  Çözümlenmiş Görevler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_TaskGrid" data-switch="radio" data-category="0" data-query="(MemnuniyetAnketiDoldurulmaSayisi~eq~1)">
							<i class="fa fa-th-list"></i>  Memnuniyet Anketi Doldurulanlar
						</a>
					</li>
				</ul>


				<div class="space-25"></div>
				<h5> GÖREV ÖNCELİĞİ </h5>
				<ul class="folder-list" style="padding: 0">
					@foreach (var item in Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumFTM_TaskPriority>())
					{
						<li class="clearfix">
							<a class="pull-left" href="#" data-grid="VWFTM_TaskGrid" data-switch="radio" data-category="1" data-query="(priority~eq~'@item.Key')">
								<i style="color:#@item.Generic["color"]" class="fa fa-circle"></i>  @item.Value
							</a>

						</li>
					}
				</ul>


				<div class="space-25"></div>
				<h5> GÖREV TİPİNE GÖRE </h5>
				<ul class="tag-list" style="padding: 0">

					@foreach (var item in Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumFTM_TaskType>())
					{
						<li class="clearfix">
							<a class="pull-left" href="#" data-grid="VWFTM_TaskGrid" data-switch="radio" data-category="4" data-query="(type~eq~'@item.Key')">
								<i data-original-title="" class="@item.Generic["icon"]"></i>  @item.Value
							</a>
						</li>
					}
				</ul>




			</div>
		</div>
	</div>
</div>


<link href="~/Content/Custom/css/filter.css" rel="stylesheet" />
<script src="~/Content/Custom/js/filter.js"></script>
