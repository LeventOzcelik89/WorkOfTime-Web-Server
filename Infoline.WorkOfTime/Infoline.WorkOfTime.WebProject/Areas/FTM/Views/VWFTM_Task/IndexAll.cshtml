@{
	ViewBag.Title = "Tüm Görevler";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var userStatus = (PageSecurity)Session["userStatus"];
	var now = DateTime.Now;
	var userId = (Guid?)ViewBag.userId;
	var Types = Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumFTM_TaskOperationStatus>().ToArray();
}

<style>
	.active {
		font-weight: bold;
	}

	.blink {
      animation: blinker 1.9s linear infinite;
      color: red;
      font-size: 30px;
      font-weight: bold;
      font-family: sans-serif;
      }
      @@keyframes blinker {
      50% { opacity: 0; }
      }

</style>
<script type="text/javascript">
	function FilterMenuTaskType(element) {
		element.kendoDropDownList({
			dataTextField: "Name",
			dataValueField: "Name",
			filter: "contains",
			dataSource: {
				transport: {
					read: "@Url.Action("FilterMenuTaskType", "General",  new { area = string.Empty })"
				}
			},
			optionLabel: "Görev Tipi Seçiniz"
		})
	}

		function FilterMenuTaskStatus(element) {
			element.kendoDropDownList({
				dataTextField: "Name",
                dataValueField: "Name",
				filter: "contains",
				dataSource: {
					transport: {
						read: "@Url.Action("FilterMenuTaskStatus", "General",  new { area = string.Empty })"
					}
				},
				optionLabel: "Son İşlem Seçiniz"
			});
		}


		function FilterMenuTaskPriority(element) {
			element.kendoDropDownList({
				dataTextField: "Name",
                dataValueField: "Name",
				filter: "contains",
				dataSource: {
					transport: {
						read: "@Url.Action("FilterMenuTaskPriority", "General",  new { area = string.Empty })"
					}
				},
				optionLabel: "Görev Önceliği Seçiniz"
			})
		}



</script>
<script type="text/javascript">

    function FilterDate() {

        var ids = '@Html.Raw(String.Join(",", Model))';

        if (ids != '') {

            var grid = $('#VWFTM_Task').data('kendoGrid');
            var filter = grid.dataSource.filter();
            filter.logic = 'or';
            filter.filters = ids.split(',').map(function (item) { return { field: "id", operator: "equal", value: item } });
            grid.dataSource.filter(filter);

        }

    }


    $(document)
        .on('ready', function () {
			FilterDate();
		})
		.on("selected:grid", "#VWFTM_Task", function (e, data) {
			var grid = $('#VWFTM_Task').data("kendoGrid");
			if (data.lastOperationStatus >= '@((int)EnumFTM_TaskOperationStatus.GorevBaslandi)') {
				var _selectedRows = $.Enumerable.From(grid.select().map(function (i, elem) { return grid.dataItem(elem)["id"]; }).toArray()).GroupBy(a => a).Select(a => a.Key());
                $('[data-id="ftmtask"]').attr("data-href", '/PA/VWPA_Transaction/InsertExpense?hasTask=1&type=@((int)EnumPA_TransactionType.Masraf)&dataTable=FTM_Task&dataId=' + _selectedRows.FirstOrDefault());
			}
			else {
				$('[data-id="ftmtask"]').addClass("hide")
			}

			if (data.lastOperationStatus == '@((int)EnumFTM_TaskOperationStatus.CozumOnaylandi)') {
				$('[data-id="satisfactionSurvey"]').removeClass("hide")
				$('[data-id="satisfactionSurvey"]').attr("data-href", '/FTM/VWFTM_TaskOperation/Insert?status=@((int)EnumFTM_TaskOperationStatus.MemnuniyetAnketiYuklendi)&taskId=' + data.id);
			}
			else {
				$('[data-id="satisfactionSurvey"]').addClass("hide")
			}


			if (data.lastOperationStatus >= 0 && data.lastOperationStatus <= 10) {
				$('[data-user="share"]').removeClass('hide');
                $('[data-user="share"]').attr('data-href', '/FTM/VWFTM_Task/UpdateStaff?status=' + @((int)EnumFTM_TaskOperationStatus.PersonelAtamaYapildi) + '&id=' + data.id);
			} else {
                $('[data-user="share"]').addClass('hide');
			}

			$('[data-id="subTask"]').attr("data-href", '/FTM/VWFTM_Task/Insert?pid=' + data.id + '&customerId=' + data.customerId + '&customerStorageId=' + data.customerStorageId + '&id=' + kendo.guid());
        })

</script>

<script type="text/x-kendo-template" id="taskTypeTemplate" data-selector="modalContainer">
    #var types = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskType>()))#

    #if(type_Title != null){#
    <div style="font-size:13px;"><strong><a style="font-size: 15px;" class="#:types.filter(function(e){return e.Key == type}).map(a=>a.Generic['icon'])#"></a></strong> #=type_Title#</div>
    #}#
</script>


<script type="text/x-kendo-template" id="taskStatusTemplate" data-selector="modalContainer">
    #var types = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskOperationStatus>()))#

    #if(lastOperationStatus_Title != null){#
    <div style="font-size:13px;"><strong><a style="font-size: 15px;" class="#:types.filter(function(e){return e.Key == status}).map(a=>a.Generic['icon'])#"></a></strong> #=lastOperationStatus_Title#</div>
    #}#
</script>

<script type="text/javascript">

	function taskPriorityResult(data) {

		if (data.priority == 0) {

			return '<i style="color:#EF5352" class="fa fa-circle"></i>  Yüksek';
		}
		else if (data.priority == 1) {
			return '<i style="color:#F8AC59" class="fa fa-circle"></i>  Orta';
		}
		else if (data.priority == 2) {
			return '<i style="color:#1ab394" class="fa fa-circle"></i>  Düşük';
		}

	}

	function assignStaffButton(data) {
		return '<a class="btn btn-success" style="margin-top: -5px;" data-modal="true" data-task="Insert" data-href="/FTM/VWFTM_Task/AssignStaff?id=' + data.id + '"> <i class="fa fa-users"></i> Personel Ata </a>';
	}



	var gridBase = {
		items: {
			DropDown1: null,
			DropDown2: null
		}
	};

	function filterMenuInit(e) {
		if (e.field == "created") {
			var $container = e.container;

			e.container.find('[type="reset"]').hide();
			e.container.find(".k-filter-help-text").remove();
			e.container.find('[type="submit"]').addClass('filterSubmitBtn').attr('disabled', 'disabled');
			e.container.find('[data-role="datetpicker"]').attr('required', 'required');

			gridBase.items.DropDown1 = e.container.find("select:eq(0)");
			gridBase.items.DropDown1.data("kendoDropDownList").value("gte");
			gridBase.items.DropDown1.data("kendoDropDownList").trigger("change");

			var logicDropDown = e.container.find("select:eq(1)");
			logicDropDown.data("kendoDropDownList").value("and");
			logicDropDown.data("kendoDropDownList").trigger("change");

			gridBase.items.DropDown2 = e.container.find("select:eq(2)");
			gridBase.items.DropDown2.data("kendoDropDownList").value("lte");
			gridBase.items.DropDown2.data("kendoDropDownList").trigger("change");

			//  firstValueDropDown.parents('.k-dropdown').hide();
			logicDropDown.parents('.k-dropdown').hide();
			//  secondValueDropDown.parents('.k-dropdown').hide();

			gridBase.items.DropDown1.data('kendoDropDownList').readonly(true);
			gridBase.items.DropDown2.data('kendoDropDownList').readonly(true);

			$($('.k-header')[14]).html("Başlangıç Tarihi");
			$($('.k-header')[17]).html("Bitiş Tarihi");

			$container.find('[data-role="datepicker"]').on('change', function (e) {

				var dt1 = $container.find('[data-role="datepicker"]').eq(0);
				var dt2 = $container.find('[data-role="datepicker"]').eq(1);

				if (dt1.data('kendoDatePicker').value() != null && dt2.data('kendoDatePicker').value() != null) {
					dt2.data('kendoDatePicker').value().addHours(23);
					dt2.data('kendoDatePicker').value().addMinutes(59);
					dt2.data('kendoDatePicker').value().addSeconds(59);

					$container.find('[type="submit"]').removeAttr('disabled');

				}

			});

			$('[role="columnheader"][data-field="ReadTime"] .k-grid-filter').on('click', function (a) {

				$container.find('[data-role="datepicker"]').trigger('change');

			});

		}
		else if (e.field == "dueDate") {
			var $container = e.container;

			e.container.find('[type="reset"]').hide();
			e.container.find(".k-filter-help-text").remove();
			e.container.find('[type="submit"]').addClass('filterSubmitBtn').attr('disabled', 'disabled');
			e.container.find('[data-role="datetpicker"]').attr('required', 'required');

			gridBase.items.DropDown1 = e.container.find("select:eq(0)");
			gridBase.items.DropDown1.data("kendoDropDownList").value("gte");
			gridBase.items.DropDown1.data("kendoDropDownList").trigger("change");

			var logicDropDown = e.container.find("select:eq(1)");
			logicDropDown.data("kendoDropDownList").value("and");
			logicDropDown.data("kendoDropDownList").trigger("change");

			gridBase.items.DropDown2 = e.container.find("select:eq(2)");
			gridBase.items.DropDown2.data("kendoDropDownList").value("lte");
			gridBase.items.DropDown2.data("kendoDropDownList").trigger("change");

			//  firstValueDropDown.parents('.k-dropdown').hide();
			logicDropDown.parents('.k-dropdown').hide();
			//  secondValueDropDown.parents('.k-dropdown').hide();

			gridBase.items.DropDown1.data('kendoDropDownList').readonly(true);
			gridBase.items.DropDown2.data('kendoDropDownList').readonly(true);

			$($('.k-header')[20]).html("Başlangıç Tarihi");
			$($('.k-header')[23]).html("Bitiş Tarihi");

			$container.find('[data-role="datepicker"]').on('change', function (e) {

				var dt1 = $container.find('[data-role="datepicker"]').eq(0);
				var dt2 = $container.find('[data-role="datepicker"]').eq(1);

				if (dt1.data('kendoDatePicker').value() != null && dt2.data('kendoDatePicker').value() != null) {
					dt2.data('kendoDatePicker').value().addHours(23);
					dt2.data('kendoDatePicker').value().addMinutes(59);
					dt2.data('kendoDatePicker').value().addSeconds(59);

					$container.find('[type="submit"]').removeAttr('disabled');

				}

			});

			$('[role="columnheader"][data-field="ReadTime"] .k-grid-filter').on('click', function (a) {

				$container.find('[data-role="datepicker"]').trigger('change');

			});
		}
		else if (e.field == "lastOperationDate") {
			var $container = e.container;


			e.container.find('[type="reset"]').hide();
			e.container.find(".k-filter-help-text").remove();
			e.container.find('[type="submit"]').addClass('filterSubmitBtn').attr('disabled', 'disabled');
			e.container.find('[data-role="datetpicker"]').attr('required', 'required');

			gridBase.items.DropDown1 = e.container.find("select:eq(0)");
			gridBase.items.DropDown1.data("kendoDropDownList").value("gte");
			gridBase.items.DropDown1.data("kendoDropDownList").trigger("change");

			var logicDropDown = e.container.find("select:eq(1)");
			logicDropDown.data("kendoDropDownList").value("and");
			logicDropDown.data("kendoDropDownList").trigger("change");

			gridBase.items.DropDown2 = e.container.find("select:eq(2)");
			gridBase.items.DropDown2.data("kendoDropDownList").value("lte");
			gridBase.items.DropDown2.data("kendoDropDownList").trigger("change");

			//  firstValueDropDown.parents('.k-dropdown').hide();
			logicDropDown.parents('.k-dropdown').hide();
			//  secondValueDropDown.parents('.k-dropdown').hide();

			gridBase.items.DropDown1.data('kendoDropDownList').readonly(true);
			gridBase.items.DropDown2.data('kendoDropDownList').readonly(true);

			$($('.k-header')[25]).html("Başlangıç Tarihi");
			$($('.k-header')[28]).html("Bitiş Tarihi");

			$container.find('[data-role="datepicker"]').on('change', function (e) {

				var dt1 = $container.find('[data-role="datepicker"]').eq(0);
				var dt2 = $container.find('[data-role="datepicker"]').eq(1);

				if (dt1.data('kendoDatePicker').value() != null && dt2.data('kendoDatePicker').value() != null) {
					dt2.data('kendoDatePicker').value().addHours(23);
					dt2.data('kendoDatePicker').value().addMinutes(59);
					dt2.data('kendoDatePicker').value().addSeconds(59);

					$container.find('[type="submit"]').removeAttr('disabled');
				}
			});

			$('[role="columnheader"][data-field="ReadTime"] .k-grid-filter').on('click', function (a) {
				$container.find('[data-role="datepicker"]').trigger('change');
			});
		}
	}

</script>


<script type="text/x-kendo-template" id="taskDescription" data-selector="modalContainer">
	#if(description!=null){#
	#if(description.length >= 25){#
	<div style="font-size:13px;">#=description.substring(0,50)#...</div>
	#}
	else
	{#
	<div style="font-size:13px;">#=description#</div>
	#}#
	#}#
</script>

<script type="text/x-kendo-template" id="FTM_TaskTemplate" data-selector="modalContainer">
    #var types = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskType>()))#
    #var priorityType = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskPriority>()))#
    #var color ="text-primary"#

    #if(priority==0)
	{#
    #color = "text-danger"#
    #}
	else if(priority==1)
	{#
    #color = "text-warning"#
    #}
	else if(priority==2){#
    #color = "text-primary"#
    #}#

    #var slaStatus = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskSLAStatus>()));#

    <table class="table shoping-cart-table">
        <tbody>
            <tr>
                <td style="width:3%;text-align: center;vertical-align: inherit;">
                    <span>
                        #if((assignUserId!=null && isComplete=='0') && lastOperationStatus!='30' && lastOperationStatus!='26'){#
                        <i style="font-size: 25px;" class="icon-clock #:color#" st></i><br />
                        #}

                        else if((assignUserId==null && assignableUserIds!=null) && isComplete==0){#
                        <i style="font-size: 25px;" class="icon-users #:color#"></i><br />
                        #}

                        else if((assignUserId==null && assignableUserIds==null) && isComplete=='0'){#
                        <i style="font-size: 25px;" class="icon-user-add #:color#"></i><br />
                        #}

                        else if(isComplete=='0' && lastOperationStatus=='26'){#
                        <i style="font-size: 25px;" class="icon-pause #:color#"></i><br />
                        #}

                        else if(isComplete=='0' && lastOperationStatus=='30' ){#
                        <i style="font-size: 25px;" class="icon-arrows-cw #:color#"></i><br />
                        #}

                        else if(isComplete='1'){#
                        <i style="font-size: 25px;" class="fa fa-check #:color#"></i><br />
                        #}#


                    </span>
                </td>

                <td class="desc" style="width:55%;">
                    #if(taskPlanId_Title!=null){#
                    <div style="font-size:13px;"><strong>Bakım Planı : </strong>#=taskPlanId_Title#</div>
                    #}#
                    #if(type_Title != null){#
                    <div style="font-size:13px;"><strong>Görev Tipi  : <a style="font-size: 15px;" class="#:types.filter(function(e){return e.Key == type}).map(a=>a.Generic['icon'])#"></a></strong>#=type_Title#</div>
                    #}#

                    #if(description!=null){#
                    #if(description.length >= 25){#
                    <div style="font-size:13px;"><strong>Görev Açıklaması : </strong>#=description.substring(0,50)#...</div>
                    #}
                    else
                    {#
                    <div style="font-size:13px;"><strong>Görev Açıklaması : </strong>#=description#</div>
                    #}#
                    #}#

	                #if(mainTaskCode!=null){#
                    <div style="font-size:13px;"><strong>Ana Görev Kodu : </strong>#=mainTaskCode#</div>
                    #}#

                    #if(code!=null){#
                    <div style="font-size:13px;"><strong>Görev Kodu : </strong>#=code#</div>
                    #}#

                    #if(customer_Title!=null){#
                    <div style="font-size:13px;"><strong>Müşteri İşletme : </strong>#=customer_Title#</div>
                    #}#

                    #if(customerStorage_Title!=null){#
                    <div style="font-size:13px;"><strong>Şube/Depo/Kısım : </strong>#=customerStorage_Title#</div>
                    #}#

                    #if(fixture_Title!=null){#
                    <div style="font-size:13px;"><strong>Görevli Envanter : </strong>#=' ( ' +fixture_Title + ' ) '#</div>
                    #}#

                    <div style="font-size:13px;"><strong>Planlanan Başlangıç/Bitiş Tarihi : </strong>#:(planStartDate != null ?  kendo.toString(planStartDate,"dd.MM.yyyy HH:mm") : '-')# / #:(dueDate != null ?  kendo.toString(dueDate,"dd.MM.yyyy HH:mm") : '-')#</div>

                    #if(lastOperationStatus_Title!=null){#
                    <div style="font-size:13px;"><strong>Son İşlem : </strong>#=lastOperationStatus_Title#</div>
                    #}#

	                #if(planLater == @((int)EnumFTM_TaskPlanLater.Evet)){#
                    <div class="blink" style="font-size:13px;color:red;"><strong>Göreve Planlanmış Başlangıç ve Bitiş Atanması Bekleniyor</strong></div>
	                #}#


                    #if(penaltyStartDate!=null){#
                    <div style="font-size:13px"><strong>SLA Başlangıç Tarihi  :</strong><span style="color:red;font-weight:bold"> #=kendo.toString(penaltyStartDate,"dd.MM.yyyy HH:mm")#  #=(SLAText ? ' | '+SLAText : '')# </span></div>
                    <div style="font-size:13px"><strong>SLA Ceza Tutarı  :</strong><span style="color:red;font-weight:bold"> #=amercementTotal#  ₺ </span> </div>
                    #}#

                    #if((assignUserId==null && assignableUserIds!=null) && isComplete==0){#
                    <div style="font-size:13px;"><strong>Üstlenebilecek Personeller : </strong> #=assignableUserTitles# </div>
                    #}#



                    #if(taskSubjectType_Title != null){#
                    <span style="font-size:13px;"><strong>Görev Konuları : </strong>#=(SplitDataReturnBadge(taskSubjectType_Title ?? ''))#</span>
                    #}#
                   </td>
	           <td style="width:5%;vertical-align: inherit;">
	            #if(mainTaskCode != null){#
	                            <span>
                                    <a target="_blank" href="/FTM/VWFTM_Task/Detail/#=mainTaskId#"><i style="font-size: 30px;margin-right: 10px;" class="ii-anasayfa" data-toggle="tooltip" data-placement="top" title="Ana Görev" st=""></i></a><br>
                                </span>
	            #}#
	            </td>
		        <td style="width:5%;vertical-align: inherit;">
	            #if(MemnuniyetAnketiDoldurulmaSayisi > 0){#
	                            <span>
                                    <a data-task="Insert" data-href="/FTM/VWFTM_TaskOperation/Detail/#=memnuniyetAnketId#"><i style="font-size: 30px;margin-right: 10px;" class="ii-hesap-kodu-operasyonlari" data-toggle="tooltip" data-placement="top" title="Memnuniyet Anketi Dolduruldu." st=""></i></a><br>
                                </span>
	                            #}#
	            </td>
	               <td style="width:5%;vertical-align: inherit;">
	               #if(transactionCount > 0){#

	                  <span>
                          <a target="_blank" href="/PA/VWPA_Transaction/IndexAllRequest?id=#:id#"><i style="font-size: 30px;margin-right: 10px;" class="ii-sermayeuretim" data-toggle="tooltip" data-placement="top" title="Görev Masrafları" st=""></i></a><br>
                      </span>

	                #}#
	            </td>



                <td style="width:10%;vertical-align: inherit;">
                    <h5 data-original-title="Saha Operasyon Görev Form Sayısı" data-placement="left" class="m-b-xs">
                        <i class="fa fa-upload   m-r-xs"></i>#=SahaOperasyonGorevFormSayisi# Adet
                    </h5>
                    <h5 data-original-title="İşlem Sayısı" data-placement="left" class="m-b-xs">
                        <i class="fa fa-qrcode   m-r-xs"></i>#=IslemSayisi# Adet
                    </h5>
                    <h5 data-original-title="Doldurulan Görev Form Sayısı" data-placement="left" class="m-b-xs">
                        <i class="fa fa-file-text   m-r-xs"></i> #=DoldurulanGorevFormSayisi# Adet
                    </h5>
                    <h5 data-original-title="Dosya(Resim) Sayısı" data-placement="left" class="m-b-xs">
                        <i class="fa fa-image   m-r-xs"></i> #=DosyaSayisi# Adet
                    </h5>
                </td>
            </tr>
        </tbody>
    </table>

</script>

<style type="text/css">
	.k-grid-content i {
		font-size: 13px;
	}
</style>
<script type="text/javascript">
    $(document)
        .on("selected:grid", "#VWFTM_Task", function (e, res) {
            var grid = $('#VWFTM_Task').data("kendoGrid");
            $('[data-check="all"]').removeClass("hide");

            var ids = [];
            $.each(grid.select(), function (i, item) {
                ids.push(grid.dataItem(item).id);
                if (grid.dataItem(item).lastOperationStatus != '@((int)EnumFTM_TaskOperationStatus.CozumBildirildi)') {
                    $('[data-check="all"]').addClass("hide");
                }
            })
            $('[data-check="all"]').attr("data-href", "/FTM/VWFTM_Task/ApproveAll?taskIds=" + ids.join(","));
        })

</script>

<div class="row">
	<div class="col-md-12">
		<div class="ibox m-b-none">
			<div class="ibox-title">
				<div class="col-md-9">
					<h5>Görev Listesi</h5>
				</div>
				<div class="col-md-3">

					<div class="btn-group pull-right">
						<a class="btn btn-sm btn-success" style="margin-top: -5px;" data-modal="true" data-task="Insert" data-href="/FTM/VWFTM_Task/Insert?multiple=true"> <i class="fa fa-plus-square-o"></i> Yeni Çoklu Görev </a>
					</div>
					<a class="btn pull-right m-r-sm btn-sm btn-success" style="margin-top: -5px;" data-modal="true" data-task="Insert" data-href="/FTM/VWFTM_Task/Insert"> <i class="fa fa-plus-circle"></i> Yeni Görev </a>

				</div>
			</div>
			<div class="ibox-content">
				@if (userId.HasValue)
				{
					@(Html.Akilli()
		.Grid<Infoline.WorkOfTime.BusinessData.VWFTM_Task>("VWFTM_Task")
		.DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWFTM_Task", new { area = "FTM" }))
		.Filter(a=>a.createdby == userId.Value)
		.PageSize(25).Sort(a => a.Add(c => c.lastOperationDate).Descending()))
		.Scrollable(a => a.Height(650))
		.Columns(x =>
		{
			x.Bound(y => y.id).Title("").Width(800).Filterable(false).Locked(true).Hidden(false).ClientTemplate("#=TemplateEngine('FTM_TaskTemplate',data)#");

			x.Bound(y => y.created).Title("Oluşturulma Tarihi").Filterable(filterable => filterable.Operators(a => a.ForDate(b =>
			{

				b.Clear();
				b.IsGreaterThanOrEqualTo("Başlangıç Tarihi");
				b.IsLessThanOrEqualTo("Bitiş Tarihi");
			}

			))).Width(180).Format(Extensions.DateFormatFull(true));
			x.Bound(y => y.mainTaskCode).Title("Ana Görev Kodu").Width(180);
			x.Bound(y => y.code).Title("Görev Kodu").Width(180);
			x.Bound(y => y.customer_Title).Title("Müşteri İşletme").Width(180);
			x.Bound(y => y.customerStorage_Title).Title("Şube/Depo/Kısım").Width(180);
			x.Bound(y => y.description).Title("Görev Açıklaması").ClientTemplate("#=TemplateEngine('taskDescription',data)#").Width(180);
			x.Bound(y => y.type_Title).Title("Görev Tipi").Width(125).Filterable(filterable=>filterable.UI("FilterMenuTaskType")).ClientTemplate("#=TemplateEngine('taskTypeTemplate',data)#");
			x.Bound(y => y.taskPlanId_Title).Title("Bakım Planı").Width(180);
			x.Bound(y => y.lastOperationStatus_Title).Title("Son İşlem").Width(180).Filterable(filterable => filterable.UI("FilterMenuTaskStatus")).ClientTemplate("#=TemplateEngine('taskStatusTemplate',data)#");
			x.Bound(y => y.priority_Title).Title("Görev Önceliği").Filterable(filterable=>filterable.UI("FilterMenuTaskPriority")).Width(140).ClientTemplate("#=taskPriorityResult(data)#");
			//x.Bound(y => y.id).Title("").Width(180).Filterable(false).ClientTemplate("#=assignStaffButton(data)#");
			x.Bound(y => y.assignableUserTitles).Title("Üstlenebilecek Personeller").Width(180);
			x.Bound(y => y.helperUserTitles).Title("Yardımcı Personeller").Width(180);
			x.Bound(y => y.plate).Title("Araç").Width(180);
			x.Bound(y => y.lastOperationDate).Title("Son Operasyon Tarihi").Width(190).Format(Extensions.DateFormatFull(true));
			x.Bound(y => y.dueDate).Title("Planlanan Bitiş Tarihi").Filterable(filterable => filterable.Operators(a => a.ForDate(b =>
			{
				b.Clear();
				b.IsGreaterThanOrEqualTo("Başlangıç Tarihi");
				b.IsLessThanOrEqualTo("Bitiş Tarihi");
			}

			))).Width(180).Format(Extensions.DateFormatFull(true));
			x.Bound(y => y.fixture_Title).Title("Görevlendirilen Envanter").Width(230);
			x.Bound(y => y.stopSubject_Titles).Title("Durdurulma Nedenleri").Width(230);
			x.Bound(y => y.taskSubjectType_Title).Title("Görev Konusu").Width(230);
			x.Bound(y => y.createdby_Title).Title("Oluşturan Personel").Width(180).Hidden(false);
		})
		.Events(ev => ev.FilterMenuInit("filterMenuInit"))
		.Selectable(x => x.Mode(GridSelectionMode.Multiple))
		.ToolBar(x =>
		{
			x.Custom().Text("<i data-original-title='Alt Görev Oluştur' class='fa fa-sort-amount-asc'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" }, { "data-id", "subTask" } }).Url(Url.Action("Insert", "VWFTM_Task", new { area = "FTM" }));
			x.Custom().Text("<i data-original-title='Toplu Onay' class='fa fa-check'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-method", "GET" }, { "data-check", "all" } }).Url(Url.Action("ApproveAll", "VWFTM_Task", new { area = "FTM" }));
			x.Custom().Text("<i data-original-title='Görev Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" }, { "data-blank", "" }, { "data-modal", "false" } }).Url(Url.Action("Detail", "VWFTM_Task", new { area = "FTM" }));
			x.Custom().Text("<i class='icon-money' data-original-title='Masraf Girişi'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" }, { "data-id", "ftmtask" } }).Url(Url.Action("InsertExpense", "VWPA_Transaction", new { area = "PA" }));
			x.Custom().Text("<i class='fa fa-th-list' data-original-title='Memnuniyet Anketi Doldur'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" }, { "data-id", "satisfactionSurvey" } }).Url(Url.Action("Insert", "VWFTM_TaskOperation", new { area = "FTM", status = (int)EnumFTM_TaskFormType.Anket }));
			x.Custom().Text("<i data-original-title='Görev Sil' class='fa fa-trash'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWFTM_Task", new { area = "FTM" }));
		}))
				}
				else
				{
					@(Html.Akilli()
		.Grid<Infoline.WorkOfTime.BusinessData.VWFTM_Task>("VWFTM_Task")
		.DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWFTM_Task", new { area = "FTM" }))
		.PageSize(25).Sort(a => a.Add(c => c.lastOperationDate).Descending()))
		.Scrollable(a => a.Height(650))
		.Columns(x =>
		{
			x.Bound(y => y.id).Title("").Width(800).Filterable(false).Locked(true).Hidden(false).ClientTemplate("#=TemplateEngine('FTM_TaskTemplate',data)#");
			x.Bound(y => y.mainTaskCode).Title("Ana Görev Kodu").Width(180);
			x.Bound(y => y.code).Title("Görev Kodu").Width(180);
			x.Bound(y => y.taskPlanId_Title).Title("Bakım Planı").Width(180);
			x.Bound(y => y.created).Title("Oluşturulma Tarihi").Filterable(filterable => filterable.Operators(a => a.ForDate(b =>
			{

				b.Clear();
				b.IsGreaterThanOrEqualTo("Başlangıç Tarihi");
				b.IsLessThanOrEqualTo("Bitiş Tarihi");
			}

			))).Width(180).Format(Extensions.DateFormatFull(true));
			x.Bound(y => y.customer_Title).Title("Müşteri İşletme").Width(180);
			x.Bound(y => y.customerStorage_Title).Title("Şube/Depo/Kısım").Width(180);
			x.Bound(y => y.description).Title("Görev Açıklaması").ClientTemplate("#=TemplateEngine('taskDescription',data)#").Width(180);
			x.Bound(y => y.type_Title).Title("Görev Tipi").Width(125).Filterable(filterable=>filterable.UI("FilterMenuTaskType")).ClientTemplate("#=TemplateEngine('taskTypeTemplate',data)#");
			x.Bound(y => y.lastOperationStatus_Title).Title("Son İşlem").Width(180).Filterable(filterable => filterable.UI("FilterMenuTaskStatus")).ClientTemplate("#=TemplateEngine('taskStatusTemplate',data)#");
			x.Bound(y => y.priority_Title).Title("Görev Önceliği").Filterable(filterable=>filterable.UI("FilterMenuTaskPriority")).Width(140).ClientTemplate("#=taskPriorityResult(data)#");
			//x.Bound(y => y.id).Title("").Width(180).Filterable(false).ClientTemplate("#=assignStaffButton(data)#");
			x.Bound(y => y.assignableUserTitles).Title("Üstlenebilecek Personeller").Width(180);
			x.Bound(y => y.helperUserTitles).Title("Yardımcı Personeller").Width(180);
			x.Bound(y => y.plate).Title("Araç").Width(180);
			x.Bound(y => y.lastOperationDate).Title("Son Operasyon Tarihi").Width(190).Format(Extensions.DateFormatFull(true));
			x.Bound(y => y.dueDate).Title("Planlanan Bitiş Tarihi").Filterable(filterable => filterable.Operators(a => a.ForDate(b =>
			{
				b.Clear();
				b.IsGreaterThanOrEqualTo("Başlangıç Tarihi");
				b.IsLessThanOrEqualTo("Bitiş Tarihi");
			}

			))).Width(180).Format(Extensions.DateFormatFull(true));
			x.Bound(y => y.fixture_Title).Title("Görevlendirilen Envanter").Width(230);
			x.Bound(y => y.stopSubject_Titles).Title("Durdurulma Nedenleri").Width(230);
			x.Bound(y => y.taskSubjectType_Title).Title("Görev Konusu").Width(230);
			x.Bound(y => y.createdby_Title).Title("Oluşturan Personel").Width(180).Hidden(false);
		})
		.Events(ev => ev.FilterMenuInit("filterMenuInit"))
		.Selectable(x => x.Mode(GridSelectionMode.Multiple))
		.ToolBar(x =>
		{
			x.Custom().Text("<i data-original-title='Alt Görev Oluştur' class='fa fa-sort-amount-asc'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" }, { "data-id" , "subTask" } }).Url(Url.Action("Insert", "VWFTM_Task", new { area = "FTM" }));
			x.Custom().Text("<i data-original-title='Toplu Onay' class='fa fa-check'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-method", "GET" }, { "data-check", "all" } }).Url(Url.Action("ApproveAll", "VWFTM_Task", new { area = "FTM" }));
			x.Custom().Text("<i class='icon-user' data-original-title='Personel Ata'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" },{ "data-user","share" } }).Url(Url.Action("UpdateStaff", "VWFTM_Task", new { area = "FTM" }));
			x.Custom().Text("<i data-original-title='Görev Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" }, { "data-blank", "" }, { "data-modal", "false" } }).Url(Url.Action("Detail", "VWFTM_Task", new { area = "FTM" }));
			x.Custom().Text("<i class='icon-money' data-original-title='Masraf Girişi'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" }, { "data-id", "ftmtask" } }).Url(Url.Action("InsertExpense", "VWPA_Transaction", new { area = "PA" }));
			x.Custom().Text("<i class='fa fa-th-list' data-original-title='Memnuniyet Anketi Doldur'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" }, { "data-id", "satisfactionSurvey" } }).Url(Url.Action("Insert", "VWFTM_TaskOperation", new { area = "FTM", status = (int)EnumFTM_TaskFormType.Anket }));
			x.Custom().Text("<i data-original-title='Görev Sil' class='fa fa-trash'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWFTM_Task", new { area = "FTM" }));
		}))
				}

			</div>
		</div>
	</div>
</div>

<div class="theme-config">
	<div class="theme-config-box">
		<div class="spin-icon">
			<i class="fa fa-filter"></i>
		</div>
		<div class="skin-setttings">
			<div class="title">FİLTRELEME</div>
			<div class="file-manager">
				<h5> GÖREV DURUMU </h5>
				<ul class="folder-list" style="padding: 0">
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="0" data-query="((assignUserId~eq~'99999999-1234-5678-0000-999999999999'~and~assignableUserIds~eq~'')~and~isComplete~eq~false)">
							<i class="icon-user-add"></i>  Personel Ataması Bekleyenler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="0" data-query="((assignUserId~eq~'99999999-1234-5678-0000-999999999999'~and~assignableUserIds~neq~'')~and~isComplete~eq~false)">
							<i class="icon-users"></i>  Üstlenilmeyi Bekleyenler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="0" data-query="((assignUserId~neq~'99999999-1234-5678-0000-999999999999'~and~isComplete~eq~false)~and~lastOperationStatus~neq~30~and~lastOperationStatus~neq~26)">
							<i class="icon-clock"></i>  Devam Edenler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="5" data-query="(planLater~eq~'@((int)EnumFTM_TaskPlanLater.Evet)')">
							<i class="fa fa-tasks"></i>  Planlanmayı Bekleyenler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="0" data-query="((assignUserId~neq~'99999999-1234-5678-0000-999999999999'~and~isComplete~eq~false)~and~lastOperationStatus~eq~26)">
							<i class="fa fa-pause"></i>  Durdurulanlar
						</a>
					</li>

					<li class="clearfix">
						<a class="pull-left" href="#" id="pendingApprove" data-grid="VWFTM_Task" data-switch="radio" data-category="0" data-query="(isComplete~eq~false~and~lastOperationStatus~eq~30)">
							<i class="icon-arrows-cw"></i>  Çözüm Onayı Bekleyenler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="0" data-query="(isComplete~eq~true)">
							<i class="fa fa-check"></i>  Çözümlenmiş Görevler
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="0" data-query="(MemnuniyetAnketiDoldurulmaSayisi~eq~1)">
							<i class="fa fa-th-list"></i>  Memnuniyet Anketi Doldurulanlar
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="5" data-query="(createdby~eq~'@userStatus.user.id')">
							<i class="fa fa-user"></i>  Benim Oluşturduklarım
						</a>
					</li>
					<li class="clearfix">
						<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="5" data-query="(mainTaskCode~neq~'@System.UIHelper.String.Null')">
							<i class="fa fa-recycle"></i> İlişkili Görevler
						</a>
					</li>
				</ul>



				<div class="space-25"></div>
				<h5> GÖREV ÖNCELİĞİ </h5>
				<ul class="folder-list" style="padding: 0">
					@foreach (var item in Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumFTM_TaskPriority>())
					{
						<li class="clearfix">
							<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="1" data-query="(priority~eq~'@item.Key')">
								<i style="color:#@item.Generic["color"]" class="fa fa-circle"></i>  @item.Value
							</a>

						</li>
					}
				</ul>

				<div class="space-25"></div>
				<h5> SLA DURUMUNA GÖRE </h5>
				<ul class="folder-list" style="padding: 0">

					@foreach (var item in Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumFTM_TaskSLAStatus>())
					{


						<li class="clearfix">
							<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="5" data-query="(SLAStatus~eq~'@item.Key')">
								<i style="color:@item.Generic["color"]" class="fa fa-circle"></i>  @item.Value
							</a>

						</li>
					}
				</ul>



				<div class="space-25"></div>
				<h5> PLANLANAN BİTİŞ TARİHİ </h5>
				<ul class="category-list" style="padding: 0">
					<li class="clearfix">
						<a href="#" class="pull-left" data-grid="VWFTM_Task" data-switch="radio" data-category="2" data-query="(dueDate~gte~datetime'@now.ToString("yyyy-MM-ddT00-00-00")'~and~dueDate~lte~datetime'@now.AddDays(30).ToString("yyyy-MM-ddT00-00-00")')"> <i class="fa fa-calendar"></i> Yaklaşanlar(30 günden az) </a>
					</li>

					<li class="clearfix">
						<a href="#" class="pull-left" data-grid="VWFTM_Task" data-switch="radio" data-category="2" data-query="(dueDate~lt~datetime'@now.ToString("yyyy-MM-ddT00-00-00")')"> <i class="fa fa-calendar"></i> Geçmiş </a>
					</li>
					<li class="clearfix">
						<a href="#" class="pull-left" data-grid="VWFTM_Task" data-switch="radio" data-category="2" data-query="(dueDate~gt~datetime'@now.ToString("yyyy-MM-ddT00-00-00")'~and~dueDate~lt~datetime'@now.AddDays(1).ToString("yyyy-MM-ddT00-00-00")')"> <i class="fa fa-calendar"></i> Bugün </a>
					</li>
					<li class="clearfix">
						<a href="#" class="pull-left" data-grid="VWFTM_Task" data-switch="radio" data-category="2" data-query="(dueDate~gt~datetime'@now.AddDays(1).ToString("yyyy-MM-ddT00-00-00")')"> <i class="fa fa-calendar"></i> Yarın ve Sonra</a>
					</li>
				</ul>
				<div class="space-25"></div>
				<h5> OLUŞTURULMA TARİHİ </h5>
				<ul class="category-list" style="padding: 0">
					<li class="clearfix">
						<a href="#" class="pull-left" data-grid="VWFTM_Task" data-switch="radio" data-category="3" data-query="(created~lt~datetime'@now.ToString("yyyy-MM-ddT00-00-00")')"> <i class="fa fa-calendar"></i> Geçmiş </a>
					</li>
					<li class="clearfix">
						<a href="#" class="pull-left" data-grid="VWFTM_Task" data-switch="radio" data-category="3" data-query="(created~gt~datetime'@now.ToString("yyyy-MM-ddT00-00-00")'~and~created~lt~datetime'@now.AddDays(1).ToString("yyyy-MM-ddT00-00-00")')"> <i class="fa fa-calendar"></i> Bugün </a>
					</li>
					<li class="clearfix">
						<a href="#" class="pull-left" data-grid="VWFTM_Task" data-switch="radio" data-category="3" data-query="(created~gt~datetime'@now.AddDays(1).ToString("yyyy-MM-ddT00-00-00")'')"> <i class="fa fa-calendar"></i> Yarın ve Sonra</a>
					</li>
				</ul>
				<div class="space-25"></div>
				<h5> GÖREV TİPİNE GÖRE </h5>
				<ul class="tag-list" style="padding: 0">

					@foreach (var item in Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumFTM_TaskType>())
					{
						<li class="clearfix">
							<a class="pull-left" href="#" data-grid="VWFTM_Task" data-switch="radio" data-category="4" data-query="(type~eq~'@item.Key')">
								<i data-original-title="" class="@item.Generic["icon"]"></i>  @item.Value
							</a>
						</li>
					}
				</ul>




			</div>
		</div>
	</div>
</div>


<link href="~/Content/Custom/css/filter.css" rel="stylesheet" />
<script src="~/Content/Custom/js/filter.js"></script>
