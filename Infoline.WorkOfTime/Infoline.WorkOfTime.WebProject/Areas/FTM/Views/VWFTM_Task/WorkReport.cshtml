
@{
	ViewBag.Title = "Günlük İş Takip";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
	$(document)
		.on('click', '#scheduler .k-event', function () {
			var uid = $(this).attr('data-uid');
			var elem = $('#scheduler').data('kendoScheduler');
			var dataItem = elem.occurrenceByUid(uid);

			if (!dataItem.isTask) {
				Kendo_GetRequest('/FTM/VWFTM_TaskPlan/CalendarPlanDetail?id=' + dataItem.taskPlanId + '&planStartDate=' + kendo.toString(dataItem.start, 'yyyy-MM-dd HH:mm:00') + '&dueDate=' + kendo.toString(dataItem.end, 'yyyy-MM-dd HH:mm:00'), null, $('<a data-method="GET" />'), 'type-info');
			}
			else {
				Kendo_GetRequest('/FTM/VWFTM_TaskPlan/CalendarDetail?id=' + dataItem.taskId, null, $('<a data-method="GET" />'), 'type-info');
			}

		})

	function onChangeGroup(e) {
		if (this.value() == undefined) {
			return;
		}
		var users = $.ajax({
			type: "GET",
			url: '/General/GetGroupUsers?id=' + this.value(),
			success: function (response) {
			},
			async: false
		}).responseJSON;
		if (users.length > 0) {
			$('#userIds').data('kendoMultiSelect').value($.Enumerable.From(users).Select(x => x.userId).ToArray())
		}
	}

</script>

@Html.Hidden("type")

<div class="row clearfix">
	<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
		<div class="ibox-custom ">
			<div class="ibox-content" style="border-bottom:1px #e7eaec solid;">

				<div class="row">
					<div class="col-md-4">
						<div class="form-group">
							@(
                                       Html.Akilli()
                                       .DropDownList("group")
                                       .OptionLabel("Lütfen Grub/Ekip Seçiniz..")
                                       .DataValueField("id")
                                       .DataTextField("name")
                                       .Action(b => b.Action("DataSourceDropDown", "SH_Group", new { area = "SH" }))
                                       .Events(x=> x.Change("onChangeGroup"))
                                       .Sort(x => x.Add("name").Ascending())
                                       .Execute()
                                   )
						</div>
					</div>

					<div class="col-md-3">
						<div class="form-group">
							@(
                                       Html.Akilli()
                                       .MultiSelect("userIds")
                                       .Placeholder("Lütfen Personel Seçiniz..")
                                       .DataValueField("id")
                                       .DataTextField("FullName")
                                       .ItemTemplate("#=TemplateEngine('userTemplate',data)#")
                                       .Action(b => b.Action("DataSourceDropDown", "VWSH_User", new { area = "SH" }))
                                       .Filter<VWSH_User>(a => a.type == (int)(EnumSH_UserType.MyPerson) && a.IsWorking == true && a.RoleIds.Contains(SHRoles.SahaGorevPersonel))
                                       .Sort(x => x.Add("FullName").Ascending())
                                       .Execute()
                                   )
						</div>
					</div>

					<div class="col-md-2">
						<div class="form-group">
							<div class="radio akilliRadioGrup clearfix" style="margin-top: 5px;margin-left: 18px;">
								<input checked="checked" data-val="true" data-val-number="The field planLater must be a number." id="planLater0" name="type" type="radio" value="0" autocomplete="off">
								<label for="planLater0" tabindex="0" class="radio-label" style="width: 117px;text-align: center;">
									Görevler
								</label>
								<input id="planLater1" name="type" type="radio" value="1" autocomplete="off">
								<label for="planLater1" tabindex="0" class="radio-label" style="width: 117px;text-align: center;">
									Planlar
								</label>
							</div>
						</div>
					</div>

					<div class="col-md-3 pull-right">
						<button class="btn btn-md btn-block btn-success" type="submit" id="DashBoardFilter" style="line-height: 27px">Sorgula</button>
					</div>
				</div>

			</div>

			<br />
		</div>
	</div>
</div>

<div class="row">
	<div class="col-md-12">
		<div class="ibox m-b-none">
			<div class="ibox-title">
				<div class="col-md-6">
					<h5>Görev Havuzu</h5>
				</div>
				<div class="col-md-6">
					<div class="btn-group pull-right">
						<a class="btn pull-right m-r-sm btn-sm btn-success" style="margin-top: -5px;margin-right: -7px;" data-modal="true" data-task="Insert" data-href="/FTM/VWFTM_Task/Insert"> <i class="fa fa-plus-circle"></i> Yeni Görev </a>
					</div>
				</div>
			</div>
			<div class="ibox-content">
				<div id="TaskGrid"></div>
			</div>
		</div>

		<div class="ibox m-b-none" style="margin-top: 25px;">
			<div class="ibox-title">
				<div class="col-md-9">
					<span class="pull-left" style="margin-right:10px; color:black; font-size:12px;" data-selector="priority">
						<i style="color: #ff0000" class="fa fa-circle"></i><span style="margin-left:1px;"> Planlanmış Görev <i class="fa fa-info-circle" data-toggle="tooltip" data-placement="top" title="" data-original-title="Planlanmış ve görevi açılmamışlar"></i></span>
					</span>
					<span class="pull-left" style="margin-right:10px; color:black; font-size:12px;" data-selector="priority">
						<i style="color:#23c6c8" class="fa fa-circle"></i><span style="margin-left:1px;"> Görev Üstlenilmeyi Bekleniyor</span>
					</span>
					<span class="pull-left" style="margin-right:10px; color:black; font-size:12px;" data-selector="priority">
						<i style="color:#1c84c6" class="fa fa-circle"></i><span style="margin-left:1px;"> Görev Üstlenildi</span>
					</span>
					<span class="pull-left" style="margin-right:10px; color:black; font-size:12px;" data-selector="priority">
						<i style="color:#f8ac59" class="fa fa-circle"></i><span style="margin-left:1px;"> Görev Devam Etmekte</span>
					</span>
				</div>
				<div class="col-md-3">

				</div>
			</div>
			<div class="ibox-content">
				<div id="scheduler"></div>
			</div>
		</div>
	</div>
</div>



<script type="text/x-kendo-template" id="FTM_TaskTemplate" data-selector="modalContainer">
    #var types = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskType>()))#
    #var priorityType = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskPriority>()))#
    #var color ="text-primary"#

    #if(priority==0)
	{#
    #color = "text-danger"#
    #}
	else if(priority==1)
	{#
    #color = "text-warning"#
    #}
	else if(priority==2){#
    #color = "text-primary"#
    #}#

    #var slaStatus = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskSLAStatus>()));#

    <table class="table shoping-cart-table">
        <tbody>
            <tr>
                <td style="width:3%;text-align: center;vertical-align: inherit;">
                    <span>
                        #if((assignUserId!=null && isComplete=='0') && lastOperationStatus!='30' && lastOperationStatus!='26'){#
                        <i style="font-size: 25px;" class="icon-clock #:color#" st></i><br />
                        #}

                        else if((assignUserId==null && assignableUserIds!=null) && isComplete==0){#
                        <i style="font-size: 25px;" class="icon-users #:color#"></i><br />
                        #}

                        else if((assignUserId==null && assignableUserIds==null) && isComplete=='0'){#
                        <i style="font-size: 25px;" class="icon-user-add #:color#"></i><br />
                        #}

                        else if(isComplete=='0' && lastOperationStatus=='26'){#
                        <i style="font-size: 25px;" class="icon-pause #:color#"></i><br />
                        #}

                        else if(isComplete=='0' && lastOperationStatus=='30' ){#
                        <i style="font-size: 25px;" class="icon-arrows-cw #:color#"></i><br />
                        #}

                        else if(isComplete='1'){#
                        <i style="font-size: 25px;" class="fa fa-check #:color#"></i><br />
                        #}#


                    </span>
                </td>

                <td class="desc" style="width:55%;">
                    #if(taskPlanId_Title!=null){#
                    <div style="font-size:13px;"><strong>Bakım Planı : </strong>#=taskPlanId_Title#</div>
                    #}#
                    #if(type_Title != null){#
                    <div style="font-size:13px;"><strong>Görev Tipi  : <a style="font-size: 15px;" class="#:types.filter(function(e){return e.Key == type}).map(a=>a.Generic['icon'])#"></a></strong>#=type_Title#</div>
                    #}#

                    #if(description!=null){#
                    #if(description.length >= 25){#
                    <div style="font-size:13px;"><strong>Görev Açıklaması : </strong>#=description.substring(0,50)#...</div>
                    #}
                    else
                    {#
                    <div style="font-size:13px;"><strong>Görev Açıklaması : </strong>#=description#</div>
                    #}#
                    #}#

                    #if(code!=null){#
                    <div style="font-size:13px;"><strong>Görev Kodu : </strong>#=code#</div>
                    #}#

                    #if(customer_Title!=null){#
                    <div style="font-size:13px;"><strong>Müşteri İşletme : </strong>#=customer_Title#</div>
                    #}#

                    #if(customerStorage_Title!=null){#
                    <div style="font-size:13px;"><strong>Şube/Depo/Kısım : </strong>#=customerStorage_Title#</div>
                    #}#

                    #if(fixture_Title!=null){#
                    <div style="font-size:13px;"><strong>Görevli Envanter : </strong>#=' ( ' +fixture_Title + ' ) '#</div>
                    #}#

                    <div style="font-size:13px;"><strong>Planlanan Başlangıç/Bitiş Tarihi : </strong>#:(planStartDate != null ?  kendo.toString(kendo.parseDate(planStartDate), "dd.MM.yyyy HH:mm") : '-')# / #:(dueDate != null ?  kendo.toString(kendo.parseDate(dueDate), "dd.MM.yyyy HH:mm") : '-')#</div>


                    #if(penaltyStartDate!=null){#
                    <div style="font-size:13px"><strong>SLA Başlangıç Tarihi  :</strong><span style="color:red;font-weight:bold"> #=kendo.toString(penaltyStartDate,"dd.MM.yyyy HH:mm")#  #=(SLAText ? ' | '+SLAText : '')# </span></div>
                    <div style="font-size:13px"><strong>SLA Ceza Tutarı  :</strong><span style="color:red;font-weight:bold"> #=amercementTotal#  ₺ </span> </div>
                    #}#

                    #if((assignUserId==null && assignableUserIds!=null) && isComplete==0){#
                    <div style="font-size:13px;"><strong>Üstlenebilecek Personeller : </strong> #=assignableUserTitles# </div>
                    #}#


                    #if(taskSubjectType_Title != null){#
                    <span style="font-size:13px;"><strong>Görev Konuları : </strong>#=(SplitDataReturnBadge(taskSubjectType_Title ?? ''))#</span>
                    #}#
                   </td>
	               <td style="width:5%;vertical-align: inherit;">
	                #if(planLater == @((int)EnumFTM_TaskPlanLater.Evet)){#
                     <span>
                        <i style="font-size: 28px;margin-right: 64px;" class="icon-clock text-success" data-toggle="tooltip" data-placement="top" title="Görev Planlanmış Başlangıç ve Bitişin Atamasını Bekliyor." st=""></i><br>
                    </span>
	                #}#
	            </td>

	            <td style="width:8%;vertical-align: inherit;">
	                <a data-task="Insert" data-href="/FTM/VWFTM_Task/Update?id=#=id#"><i style="font-size: 30px;margin-right: 64px;" class="fa fa-arrow-right" data-toggle="tooltip" data-placement="top" title="Göreve Atama Yap" st=""></i></a><br>
	            </td>
            </tr>
        </tbody>
    </table>

</script>

<script type="text/javascript">

	var _Grid = {
		init: function () {
			this.GetTasks();
		},
		GetTasks: function () {

			$.ajax({
				dataType: 'JSON',
				type: 'POST',
				async: false,
				timeout: 6000000,
				url: '/FTM/VWFTM_Task/WorkReportGridDataSource',
				data: (typeof (data) != 'undefined' ? data : null),
				success: function (res) {
					var columns = [
						{
							field: "type_Title",
							title: " ",
							template: kendo.template($("#FTM_TaskTemplate").html()),
							filterable: false,
							width: 800
						},
						{
							field: "code",
							title: "Görev Kodu",
							filterable: false,
							width: 150
						},
						{
							field: "customer_Title",
							title: "Müşteri İşletme",
							filterable: false,
							width: 200
						},
						{
							field: "customerStorage_Title",
							title: "Şube/Depo/Kısım",
							filterable: false,
							width: 170
						},
						{
							field: "fixture_Title",
							title: "Görevlendirilen Envanter",
							filterable: false,
							width: 160
						},
						{
							field: "taskPlanId_Title",
							title: "Bakım Planı",
							filterable: false,
							width: 150
						},
						{
							field: "priority_Title",
							title: "Görev Önceliği",
							filterable: false,
							width: 150
						},
						{
							field: "plate",
							title: "Araç",
							filterable: false,
							width: 150
						}
					]
					opts = {
						Data: res.objects,
						Column: columns,
						Filtreable: false,
						selectable: "single, row",
						groupable: true,
					};
					GridRender(opts, $('#TaskGrid'));
				},
				beforeSend: function () {
					$('body').loadingModal({ text: "Veriler yükleniyor. Lütfen bekleyiniz.", animation: 'rotatingPlane', backgroundColor: "black" });
				},
				complete: function () {
					$('body').loadingModal('destroy');
				},
			});
		}
	};

	$(document)
		.on('ready', function () {
			_Grid.init();
			createScheduler(null, null);
		})
		.on("change", '[name="type"][type="radio"]', function (c) {
			var type = $(this).val();
			$("#type").val(type);
		});

</script>


<script>

	function createScheduler(startDate, userIds, type) {

		if (startDate != null) {
			startDate = kendo.toString(startDate, "yyyy/MM/dd 00:00:00");
		}
		
		var typeEvent = $("#type").val();
		var typeData = 0;

		if (typeEvent == "1") {
			typeData = 1;
		}
		
		GetJsonDataFromUrl('/FTM/VWFTM_Task/DailyUserNewReport', { start: startDate, userIds: userIds, type: typeData }, function (res) {

			if (startDate == null) {
				startDate = new Date();
			}

			var starttime = kendo.toString(startDate, "yyyy/MM/dd 00:00:00").replace("00:00:00", "00:00:00");
			var endtime = kendo.toString(startDate, "yyyy/MM/dd 23:59:59").replace("00:00:00", "23:59:59");

			if (res != null && res.length > 0) {
				var resObjects = $.Enumerable.From(res).SelectMany(a => { return a.dataSource; }).ToArray();

				$("#scheduler").kendoScheduler({
					date: new Date(starttime),
					startTime: new Date(starttime),
					endTime: new Date(endtime),
					height: 700,
					showWorkHours: true,
					eventHeight: 10,
					//majorTick: 60,
					localization: "tr-TR",
					views: ["timeline", "day", "agenda"],
					scroll: true,
					eventTemplate: $("#event-template").html(),
					dataSource: resObjects,
					editable: {
						create: true,
						move: false,
						resize: false
					},
					add: function (e) {
						Kendo_GetRequest('/FTM/VWFTM_Task/Insert?assignableUsers=' + e.event.attendees, { planStartDate: kendo.toString(e.event.start, 'yyyy-MM-dd HH:mm:00'), dueDate: kendo.toString(e.event.end, 'yyyy-MM-dd HH:mm:00') }, $('<a data-method="GET" />'), 'type-info');
						e.preventDefault();
						return false;
					},
					edit: function (e) {
						var buttonsContainer = e.container.find(".k-edit-buttons");
						var cancelButton = buttonsContainer.find(".k-scheduler-update");
						var removeButtonContainer = buttonsContainer.find(".k-icon k-si-close");
						removeButtonContainer.remove();
						cancelButton.text("");
						buttonsContainer.text("");
					},
					group: {
						resources: ["Attendees"],
						orientation: "vertical"
					},
					resources: [
						{
							field: "attendees",
							name: "Attendees",
							dataSource: res,
							multiple: true,
							title: "Attendees"
						}
					]
				});

				$("[class='k-link k-scheduler-refresh']").remove()
				$('[data-name="timeline"]').children(".k-link").text("Zaman Çizelgesi")
			}
		})
	}

</script>

<script id="event-template" type="text/x-kendo-template">
	<p style="font-size: 8px;margin-top: 5px;" data-toggle="tooltip" data-placement="bottom" title="#=taskStatus_Title#"><span class="k-scheduler-mark" style="background-color:#=color#;margin-top: -4.3px;margin-left: 5px;"></span> #: customer # - #: kendo.toString(new Date(start), "HH:mm") # - #: kendo.toString(new Date(end), "HH:mm") #</p>
</script>

<style>
	.k-scheduler-table .k-today, .k-today > .k-scheduler-datecolumn, .k-today > .k-scheduler-groupcolumn {
		background-color: rgb(255 255 255 / 15%);
	}

	.k-scheduler-edit-form .k-edit-field {
		width: 67%;
	}

	.k-textbox {
		width: 315px;
	}

	.k-input {
		width: 315px;
	}

	.k-event-actions {
		visibility: hidden;
	}

	.ibox-custom {
		clear: both;
		margin-top: 0;
		padding: 0;
	}

	.k-edit-buttons {
		visibility: hidden;
	}

	::-webkit-scrollbar {
		width: 8px;
		height: 15px;
	}
</style>

<script type="text/javascript">
	$("#DashBoardFilter").click(function () {


		var userIds = $("#userIds").val();
		var startDate = null;
		var scheduler = $("#scheduler").data("kendoScheduler");

		if (startDate == null) {
			startDate = new Date();
		}

		var starttime = kendo.toString(startDate, "yyyy/MM/dd 00:00:00");

		$("#scheduler").html(null);
		$("#scheduler").removeAttr("data-role")
		$("#scheduler").removeAttr("class")
		$("#scheduler").removeAttr("role")
		$("#scheduler").removeAttr("style")
		var type = $("#type");


		createScheduler(startDate, userIds, type);


	})

</script>