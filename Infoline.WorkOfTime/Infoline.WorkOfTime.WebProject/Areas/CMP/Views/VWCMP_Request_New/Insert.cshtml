@model Infoline.WorkOfTime.BusinessData.VWCMP_Request_New
@{
    ViewBag.Title = "Kayıt Ekleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using(Html.BeginForm("Insert", "VWCMP_Request_New", FormMethod.Post, new Dictionary<string, object>() {  
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="direction">direction</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.direction, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen direction Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="type">type</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.type, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen type Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="taskId">taskId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.taskId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen taskId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="pid">pid</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.pid).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen pid seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="description">description</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.description, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen description Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="rowNumber">rowNumber</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.rowNumber, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen rowNumber Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="customerId">customerId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.customerId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen customerId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="issueDate">issueDate</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DatePickerFor(model => model.issueDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen issueDate Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="sendingDate">sendingDate</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DatePickerFor(model => model.sendingDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen sendingDate Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="customerAdress">customerAdress</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.customerAdress, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen customerAdress Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="status">status</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.status, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen status Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="customerStorageId">customerStorageId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.customerStorageId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen customerStorageId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="type_Title">type_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.type_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen type_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="createdby_Title">createdby_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.createdby_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen createdby_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="changedby_Title">changedby_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.changedby_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen changedby_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="status_Title">status_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.status_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen status_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Customer_Title">Customer_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Customer_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Customer_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="CustomerStorage_Title">CustomerStorage_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.CustomerStorage_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen CustomerStorage_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="projectId">projectId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.projectId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen projectId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="projectId_Title">projectId_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.projectId_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen projectId_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
