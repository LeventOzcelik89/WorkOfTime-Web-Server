@model Infoline.WorkOfTime.BusinessAccess.VMCMP_RequestModels
@{
	ViewBag.Title = Model.rowNumber + " Kodlu Satın Alma Talebi Detayı";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var userStatus = (PageSecurity)Session["userStatus"];
	var tenderIds = Model.TransformTo.Select(a => a.invoiceIdTo).ToList();
	var enumRequestStatusArray = Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumCMP_RequestStatus>().ToArray();
	var enumInvoiceActionTypeArray = Infoline.Helper.EnumsProperties.EnumToArrayGeneric<EnumCMP_InvoiceActionType>().ToArray();
}


<style type="text/css" data-selector="modalContainer">
	#productItems .k-grid-toolbar {
		display: none;
	}

	#detailRequest .fileupload-container {
		background: #fff !important;
	}

	#detailRequest .list-group {
		margin-bottom: 0px !important;
	}

	#detailRequest .photoWidth img {
		width: 100%;
		height: auto;
	}

	.modal-lg {
		width: 75%;
	}


	#timeline-wrap {
		margin: 10% 10%;
		position: relative;
	}

	#timeline {
		height: 1px;
		width: 100%;
		background-color: #aabbc4;
		position: relative;
	}

	.marker {
		color: #fff;
		width: 40px;
		height: 40px;
		line-height: 40px;
		font-size: 1.4em;
		text-align: center;
		position: absolute;
		margin-left: -20px;
		background-color: #999999;
		border-radius: 50%;
	}

		.marker:hover {
			-moz-transform: scale(1.2);
			-webkit-transform: scale(1.2);
			-o-transform: scale(1.2);
			-ms-transform: scale(1.2);
			transform: scale(1.2);
			-webkit-transition: all 300ms ease;
			-moz-transition: all 300ms ease;
			-ms-transition: all 300ms ease;
			-o-transition: all 300ms ease;
			transition: all 300ms ease;
		}

	.mfirst {
		top: -20px;
	}

	.m2 {
		top: -20px;
		left: 25%
	}

	.m3 {
		top: -20px;
		left: 50%
	}

	.m4 {
		top: -20px;
		left: 75%
	}


	.mlast {
		top: -20px;
		left: 100%
	}

	.timeline-panel {
		margin-top: 20%;
		width: 500px;
		height: 200px;
		background-color: #cbd0df;
		border-radius: 2px;
		position: relative;
		text-align: left;
		padding: 10px;
		font-size: 20px;
		font-weight: bold;
		line-height: 20px;
		float: left;
	}

		.timeline-panel:after {
			content: '';
			position: absolute;
			margin-top: -12%;
			left: 10%;
			width: 0;
			height: 0;
			border: 12px solid transparent;
			border-bottom: 15px solid #cbd0df;
		}

	.pulseicon {
		display: inline-block;
		-moz-animation: pulse 2s infinite linear;
		-o-animation: pulse 2s infinite linear;
		-webkit-animation: pulse 2s infinite linear;
		animation: pulse 2s infinite linear;
	}

	@@-webkit-keyframes pulse {
		0% {
			opacity: 1;
		}

		50% {
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}

	@@-moz-keyframes pulse {
		0% {
			opacity: 1;
		}

		50% {
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}

	@@-o-keyframes pulse {
		0% {
			opacity: 1;
		}

		50% {
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}

	@@-ms-keyframes pulse {
		0% {
			opacity: 1;
		}

		50% {
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}

	@@keyframes pulse {
		0% {
			opacity: 1;
		}

		50% {
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}
</style>

<div class="row" id="detailRequest">
	<div class="col-lg-12">
		<div class="wrapper wrapper-content">
			<div class="col-lg-9">
				<div class="ibox ">
					<div class="ibox-title">
						<h5> <i class="fa fa-info-circle"></i> Talep Genel Bilgileri </h5>
						<div class="ibox-tools">
							<a class="collapse-link">
								<i class="fa fa-chevron-up"></i>
							</a>
						</div>
					</div>
					<div class="ibox-content">
						<div class="row">
							<div class="col-lg-6">
								<ul class="list-group clear-list">
									<li class="list-group-item fist-item">
										<i class="fa fa-user"></i> Talep Eden Personel :
										<strong> @(Model.createdby_Title)  </strong>
									</li>
									<li class="list-group-item fist-item">
										<i class="fa fa-building"></i> Talep Eden İşletme :
										<strong> @(Model.Customer_Title) </strong>
									</li>
									<li class="list-group-item fist-item">
										<i class="fa fa-database"></i> Giriş Yapılacak Şube/Depo :
										<strong> @(Model.CustomerStorage_Title) </strong>
									</li>

									<li class="list-group-item fist-item">
										<i class="icon-bri"></i>Satın Alma Yapılacak Proje :
										<strong> @(Model.projectId_Title != null ? Model.projectId_Title : "-")</strong>

									</li>
								</ul>
							</div>
							<div class="col-lg-6" style="border-left: 1px solid #e7eaec;">
								<ul class="list-group clear-list">
									<li class="list-group-item fist-item">
										<i class="fa fa-code"></i> Talep Kodu :
										<strong> @(Model.rowNumber) </strong>
									</li>
									@if (Model.Task != null)
									{
										<li class="list-group-item fist-item">
											<i class="fa fa-tasks"></i> Talep Görev Kodu :
											<strong> @(Model.Task.code)</strong>
											<a href="/FTM/VWFTM_Task/Detail?id=@Model.Task.id" target="_blank" class="text-navy"> <i class="fa fa-link"></i> </a>
										</li>

										if (Model.Tender != null)
										{
											<li class="list-group-item fist-item">
												<i class="fa fa-envelope"></i> Onaylanan Satış Teklifi :
												<strong> @(Model.Tender.rowNumber)</strong>
												<a href="/CMP/VWCMP_Tender/DetailSelling?id=@Model.Tender.id" target="_blank" class="text-navy"> <i class="fa fa-link"></i> </a>
											</li>
										}
									}

									<li class="list-group-item fist-item">
										<i class="fa fa-calendar"></i> Düzenleme Tarihi :
										<strong> @String.Format("{0:dd.MM.yyyy HH:mm}", Model.created) </strong>
									</li>
									<li class="list-group-item fist-item">
										<i class="fa fa-warning"></i>  Talebin Durumu :
										@{
											var status = Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumCMP_RequestStatus>();
											var statu = status.Where(c => Convert.ToInt32(c.Key) == Model.status).FirstOrDefault();
										}
										@if (statu != null)
										{
											<strong class="text-@(statu.Generic["color"])">
												<i class="@(statu.Generic["icon"])"></i> @(Model.status_Title)
											</strong>
										}
									</li>
									<li class="list-group-item fist-item">
										<i class="fa fa-comment"></i> Talep Açıklaması :
										<strong> @(Model.description != null ? Model.description : "-") </strong>
									</li>
								</ul>
							</div>
						</div>
					</div>
				</div>

				<div class="ibox " data-href="@Url.Action("DataSourceReport","VWCMP_InvoiceItem", new { area = "CMP" })">
					<div class="ibox-title">
						<h5> <i class="fa fa-line-chart"></i> Talep Ürün Kalem Bilgileri ve Stok Durumları</h5>
						<div class="ibox-tools">
							<a class="btn btn-xs btn-success hide" style="color:white;" data-button="stock" data-modal="true" data-task="Insert" data-method="GET" data-show="single" data-href="">
								<i class="fa fa-align-justify"></i> Ürün Stok Özeti
							</a>
							<a class="collapse-link">
								<i class="fa fa-chevron-up"></i>
							</a>
						</div>
					</div>
					<div class="ibox-content no-padding">
						@(Html.Akilli()
                           .Grid<Infoline.WorkOfTime.BusinessData.VWCMP_InvoiceItemReport>("VWCMP_InvoiceItemReport")
                           .DataSource(x => x.Ajax().Read(r => r.Action("DataSourceReport", "VWCMP_InvoiceItem", new { area = "CMP" }))
                           .Filter(a => a.invoiceId == Model.id).PageSize(999))
                           .Columns(x =>
                           {
                               x.Bound(y => y.Product_Title).Title("Talep Edilen Ürün/Hizmet").Filterable(false);
                               x.Bound(y => y.description).Title("Açıklama").Width(250).Filterable(false);
                               x.Bound(y => y.quantity).Title("Talep Edilen Miktar").Width(200).Filterable(false).ClientTemplate("#=requestDetail.templates.quantityTemp(data)#")
                                    .HeaderHtmlAttributes(new Dictionary<string, object>() { { "style", "text-align:center" } })
                                    .HtmlAttributes(new Dictionary<string, object>() { { "style", "text-align:center" } });
                               x.Bound(y => y.stockCount).Title("Stoklardaki Mevcut Miktar").Width(200).Filterable(false).ClientTemplate("#=requestDetail.templates.stockTemp(data)#");
                               x.Bound(y => y.Unit_Title).Title("Birim").Hidden(true);
                           })
                           .Selectable(x => x.Mode(GridSelectionMode.Single))
                           .Scrollable(s => s.Height(200))
                        )
					</div>
				</div>

				@if (Model.status != (int)EnumCMP_RequestStatus.TalepReddedildi)
				{
					<div class="ibox " data-href="@Url.Action("DataSource", "VWCMP_Tender", new { area = "CMP" })">
						<div class="ibox-title">
							<h5> <i class="fa fa-hand-o-right"></i> Talep için Toplanan Teklifler </h5>
							<div class="ibox-tools">
								@if (Model.status != (int)EnumCMP_RequestStatus.TalepIptalEdildi)
								{

									if (Model.status != (int)EnumCMP_RequestStatus.FaturasiAlindi)
									{
										if (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaPersonel)))
										{
											if (Model.TransformTo.Where(a => a.typeTo == (int)EnumCMP_InvoiceType.Teklif).Count() > 0 && Model.status != (int)EnumCMP_RequestStatus.TeklifToplandiOnayBekleniyor && Model.status != (int)EnumCMP_RequestStatus.TeklifOnaylandi)
											{
												<button onclick="requestDetail.events.updateStatus(this)" data-type="@((int)EnumCMP_RequestStatus.TeklifToplandiOnayBekleniyor)" class="btn btn-info btn-xs"><i class="fa fa-check-circle"></i> Teklifleri Onaya Gönder </button>
											}

											if (Model.status != (int)EnumCMP_RequestStatus.YoneticiOnayiBekleniyor && Model.status != (int)EnumCMP_RequestStatus.FaturasiAlindi)
											{
												if (Model.taskId.HasValue)
												{
													<a style="color:white;" class="btn btn-success btn-xs" data-task="Insert" data-method="GET" data-show="single" data-href="/CMP/VWCMP_Tender/InsertBuying?id=@Model.id&customerId=@Model.customerId&transform=true&isTaskRule=true&isBuying=true">
														<i class="fa fa-plus-circle"></i> Teklif Ekle
													</a>
												}
												else
												{
													<a style="color:white;" class="btn btn-success btn-xs" data-task="Insert" data-method="GET" data-show="single" data-href="/CMP/VWCMP_Tender/InsertBuying?id=@Model.id&customerId=@Model.customerId&transform=true">
														<i class="fa fa-plus-circle"></i> Teklif Ekle
													</a>
												}
											}
										}

										if (Model.TransformTo.Where(a => a.typeTo == (int)EnumCMP_InvoiceType.Teklif).Count() > 1 && Model.status != (int)EnumCMP_RequestStatus.TeklifOnaylandi)
										{
											<a style="color:white;" class="btn btn-primary btn-xs" data-task="Insert" data-modal="false" data-blank="true" data-method="GET" data-show="single"
											   data-href="/CMP/VWCMP_Tender/TenderCompare?requestId=@Model.id">
												<i class="fa fa-refresh"></i> Teklifleri Karşılaştır
											</a>
										}

										if (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayici)) && Model.status == (int)EnumCMP_RequestStatus.TeklifToplandiOnayBekleniyor)
										{
											<button onclick="requestDetail.events.updateStatus(this)" data-type="@((int)EnumCMP_RequestStatus.YeniTeklifToplanmasiBekleniyor)" class="btn btn-warning btn-xs"><i class="fa fa-refresh"></i> Teklifler Tekrar Toplansın </button>
										}
									}
								}
								<a class="collapse-link">
									<i class="fa fa-chevron-up"></i>
								</a>
							</div>
						</div>
						<div class="ibox-content no-padding">
							@{
								// Hiç teklif yoksa
								if (tenderIds.Count() == 0)
								{
									tenderIds.Add(Guid.NewGuid());
								}
							}




							@(Html.Akilli()
							.Grid<Infoline.WorkOfTime.BusinessData.VWCMP_Tender>("VWCMP_TenderPending")
							.DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWCMP_Tender", new { area = "CMP" }))
							.Filter(a => tenderIds.Contains(a.id)).PageSize(25))
							.Columns(x =>
							{
								x.Bound(y => y.id).ClientTemplate("#= requestDetail.templates.statusTemp(data) #").Width(30).Filterable(false).Title("");
								x.Bound(y => y.rowNumber).Title("Teklif Kodu").Width(120);
								x.Bound(y => y.Supplier_Title).Title("Tedarikçi (Teklif Veren)").Width(200);
								x.Bound(y => y.createdby_Title).Title("Teklifi Giren Personel").Width(200);
								x.Bound(y => y.issueDate).Title("Teklif Tarihi").Width(140).Format(Extensions.DateFormatShort(true));
								x.Bound(y => y.totalAmount).Title("Toplam Tutar").Width(120).ClientTemplate("#=requestDetail.templates.currencyTemp(data, data.totalAmount, true)#");
							})
							.Scrollable(s => s.Height(200))
							.Selectable(x => x.Mode(GridSelectionMode.Single))
							.ToolBar(x =>
							{
								x.Custom().Text("<i data-original-title='Teklifi Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("UpdateBuying", "VWCMP_Tender", new { area = "CMP" }));
								if (!userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayici)) && !userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaPersonel)) && !userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.MuhasebeAlis)) && (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaTalebi))))
								{
									x.Custom().Text("<i data-original-title='Teklif Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-modal", "true" }, { "data-blank", "true" }, { "data-default", "" }, { "data-transform", "detailTender" } }).Url(Url.Action("DetailReport", "VWCMP_Tender", new { area = "CMP" }));
								}
								else
								{
									x.Custom().Text("<i data-original-title='Teklif Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-modal", "false" }, { "data-blank", "true" }, { "data-default", "" }, { "data-transform", "detailTender" } }).Url(Url.Action("DetailBuying", "VWCMP_Tender", new { area = "CMP" }));
								}

								if ((userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayiciGorev)) || userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayici))) && (Model.status != (int)EnumCMP_RequestStatus.FaturasiAlindi))
								{
									x.Custom().Text("<i data-original-title='Teklifi Onayla' class='fa fa-check'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-ask", "" }, { "data-transform", "approveTender" } }).Url(Url.Action("UpdateStatus", "VWCMP_Tender", new { area = "CMP" }));
									x.Custom().Text("<i data-original-title='Teklifi Reddet' class='fa fa-times'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-ask", "" }, { "data-transform", "rejectTender" } }).Url(Url.Action("UpdateStatus", "VWCMP_Tender", new { area = "CMP" }));
								}

								x.Custom().Text("<i data-original-title='Teklifi Sil' class='fa fa-trash'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWCMP_Tender", new { area = "CMP" }));


								if (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayiciGorev)) && Model.taskId.HasValue)
								{
									x.Custom().Text("<i data-original-title='Satış Teklifi Oluştur' class='fa fa-shopping-cart'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("InsertSelling", "VWCMP_Tender", new { area = "CMP", isTaskRule = true,customerId = Model.Task.customerId, salesAfter = true, taskId = Model.taskId  }));
								}

							}))
						</div>
					</div>
				}
				<div class="ibox ">
					<div class="ibox-title">
						<h5><i class="fa fa-folder-open"></i> Talep Dosyaları</h5>
						<div class="ibox-tools">
							<a class="collapse-link">
								<i class="fa fa-chevron-up"></i>
							</a>
						</div>
					</div>
					<div class="ibox-content photoWidth collapsed">
						@Html.Action("Index", "Files", new { area = "", DataId = Model.id, DataTable = "CMP_Invoice", FileGroup = "Talep Dosyası" })
					</div>
				</div>

			</div>

			<div class="col-lg-3">
				<div class="ibox ">

					@{
						Model.status = Model.status ?? (int)EnumCMP_RequestStatus.YoneticiOnayiBekleniyor;
						var statusm = enumRequestStatusArray.Where(a => Convert.ToInt32(a.Key) == Model.status).FirstOrDefault();
						var createdRequest = Model.InvoiceActions.Where(a => a.type == (int)EnumCMP_InvoiceActionType.YeniTalep).FirstOrDefault();
						var approveRequest = Model.InvoiceActions.Where(a => a.type == (int)EnumCMP_InvoiceActionType.TalepOnay).FirstOrDefault();
						var tenderAddedRequest = Model.InvoiceActions.Where(a => a.type == (int)EnumCMP_InvoiceActionType.TalepTeklifEklendi).FirstOrDefault();
						var requestTenderRequest = Model.InvoiceActions.Where(a => a.type == (int)EnumCMP_InvoiceActionType.TalepFatura).FirstOrDefault();
						var rejectRequest = Model.InvoiceActions.Where(a => a.type == (int)EnumCMP_InvoiceActionType.TalepRed).FirstOrDefault();
						var cancelRequest = Model.InvoiceActions.Where(a => a.type == (int)EnumCMP_InvoiceActionType.TalepIptal).FirstOrDefault();
						var invoiceRequest = Model.InvoiceActions.Where(a => a.type == (int)EnumCMP_InvoiceActionType.TalepFatura).FirstOrDefault();

					}

					<div class="ibox-title">
						<div class="text-center" style="font-size: 16px;fon">
							<i class="fa text-navy pulseicon @(statusm.Generic["icon"])">
								@statusm.Value
							</i>
						</div>
						<div id="timeline-wrap">
							<div id="timeline"></div>
							<div class="marker mfirst" data-html="true" data-original-title="@(createdRequest != null ? string.Format("Talep oluşturuldu.  <br/> İşlem Yapan : {0}   <br/>  {1:dd.MM.yyyy HH:mm}", createdRequest.createdby_Title, createdRequest.created) : "İşlem yapılmadı.")" style="background-color:#1ab394;">
								<i class="fa fa-pencil"></i>
							</div>

							@if (Model.status == (int)EnumCMP_RequestStatus.TalepReddedildi)
							{
								<div class="marker m2" style="background-color:#ed5565;" data-html="true"
									 data-original-title="@(string.Format("Talep reddedildi.  <br/> İşlem Yapan : {0}   <br/>  {1:dd.MM.yyyy HH:mm}", rejectRequest.createdby_Title, rejectRequest.created))">
									<i class="icon-thumbs-down-3"></i>
								</div>
							}
							else if (Model.status == (int)EnumCMP_RequestStatus.TalepIptalEdildi)
							{
								<div class="marker m2" style="background-color:#ed5565;" data-html="true"
									 data-original-title="@(string.Format("Talep iptal edildi.  <br/> İşlem Yapan : {0}   <br/>  {1:dd.MM.yyyy HH:mm}", cancelRequest.createdby_Title, cancelRequest.created))">
									<i class="icon-thumbs-down-3"></i>
								</div>
							}
							else
							{
								<div class="marker m2" style="background-color:@(Model.status == (int)EnumCMP_RequestStatus.YoneticiOnayiBekleniyor ? "" : "#1ab394");" data-html="true"
									 data-original-title="@(approveRequest != null ? string.Format("Talep onaylandı.  <br/> İşlem Yapan : {0}   <br/>  {1:dd.MM.yyyy HH:mm}", approveRequest.createdby_Title, approveRequest.created) : "Talep Onayı Bekleniyor.")">
									<i class="icon-thumbs-up-3"></i>
								</div>
							}

							<div class="marker m3" style="background-color:@(tenderAddedRequest != null ? "#1ab394" : "");" data-html="true"
								 data-original-title="@(requestTenderRequest != null ? string.Format("Teklif Girilmesi Bekleniyor.  <br/> İşlem Yapan : {0}   <br/>  {1:dd.MM.yyyy HH:mm}", tenderAddedRequest.createdby_Title, tenderAddedRequest.created) : "Teklif Toplama.")">
								<i class="fa fa-file-text"></i>
							</div>

							<div class="marker m4" style="background-color:@(requestTenderRequest != null ? "#1ab394" : "");" data-html="true"
								 data-original-title="@(requestTenderRequest != null ? string.Format("Tekliflerden biri onaylandı.  <br/> İşlem Yapan : {0}   <br/>  {1:dd.MM.yyyy HH:mm}", requestTenderRequest.createdby_Title, requestTenderRequest.created) : "Teklif Onayı.")">
								<i class="fa fa-pencil-square"></i>
							</div>

							<div class="marker mlast" style="background-color:@(invoiceRequest != null ? "#1ab394" : "");" data-html="true"
								 data-original-title="@(requestTenderRequest != null ? string.Format("Fatura Kesildi.  <br/> İşlem Yapan : {0}   <br/>  {1:dd.MM.yyyy HH:mm}", requestTenderRequest.createdby_Title, requestTenderRequest.created) : "Fatura Girişi")">
								<i class="fa fa-check"></i>
							</div>
						</div>
					</div>
				</div>

				@if (Model.status == (int)EnumCMP_RequestStatus.YoneticiOnayiBekleniyor && (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayici)) || userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SistemYonetici)) || userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayiciGorev))))
				{
					<div class="ibox ">
						<div class="ibox-title" style="text-align:center;">
							<button style="width:170px;" onclick="requestDetail.events.updateStatus(this)" data-type="@((int)EnumCMP_RequestStatus.TeklifToplanmasiBekleniyor)" class="btn btn-md btn-primary"><i class="fa fa-check-circle"></i> Onayla </button>
							<button style="width:170px;" onclick="requestDetail.events.updateStatus(this)" data-type="@((int)EnumCMP_RequestStatus.TalepReddedildi)" class="btn btn-md btn-danger"><i class="fa fa-times-circle"></i> Reddet </button>
						</div>
					</div>
				}

				<div class="ibox ">
					<div class="ibox-title" style="text-align:center;">

						@if (Model.status == (int)EnumCMP_RequestStatus.TeklifToplanmasiBekleniyor && userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaPersonel)))
						{
							<button class="btn btn-md btn-success" data-selector="share" data-formUrl="/CMP/VWCMP_Request/Print?id=@Model.id" data-formElemId="page" data-formSubject="Teklif Talebi" data-mycompany="@(Model.Customer_Title)"
									data-formMessage="Ekte belirtilen ürünler için sizden teklif talep ediyoruz." data-original-title="Satın Alma Talebini Mail Olarak Gönder">
								<i class="fa fa-send"></i> Teklif İste
							</button>
						}

						<a style="color: #ffffff;" class="btn btn-md btn-warning" data-task="Insert" data-method="GET" data-modal="true" data-show="single" data-href="/CMP/VWCMP_Request/Insert?&id=@Model.id&IsCopy=true">
							<i class="fa fa-copy"></i> Kopyala
						</a>
						<a data-method="GET" data-show="single" data-task="Insert" data-blank="true" data-modal="false" data-href="/CMP/VWCMP_Request/Print?id=@Model.id&type=1" class="btn btn-md btn-primary">
							<i class="fa fa-print"></i> Yazdır
						</a>
						<a data-method="GET" data-show="single" data-task="Insert" data-blank="true" data-modal="false" data-href="/CMP/VWCMP_Request/Print?id=@Model.id&type=0" class="btn btn-md btn-info">
							<i class="fa fa-download"></i> İndir
						</a>
					</div>
				</div>
				<div class="ibox ">
					<div class="ibox-title">
						<h5><i class="fa fa-history"></i> Talep Geçmişi</h5>
						<div class="ibox-tools">
							<a class="collapse-link">
								<i class="fa fa-chevron-up"></i>
							</a>
						</div>
					</div>
					<div class="ibox-content">
						<div class="form-group">
							<label class="col-lg-2 control-label">Not ekle : </label>
							<div class="col-lg-10">
								<input type="text" id="note" class="form-control" />
							</div>
						</div>
						<hr />
						<div id="vertical-timeline" class="vertical-container dark-timeline" style="margin-top: 4em;">
							@foreach (var item in Model.InvoiceActions.OrderByDescending(a => a.created))
							{
								var statusProps = enumInvoiceActionTypeArray.Where(a => Convert.ToInt32(a.Key) == item.type.Value).FirstOrDefault();

								<div class="vertical-timeline-block">
									<div class="vertical-timeline-icon gray-bg">
										<i class="fa fa-bolt"></i>
									</div>
									<div class="vertical-timeline-content" style="background-color: @statusProps.Generic["color"]">
										<p style="margin:0 !important;word-break: break-word;">
											@(item.description)
										</p>
										<span class="vertical-date small text-muted"> @String.Format("{0:dd.MM.yyyy HH:mm}", item.created) </span> <br />
										<span class="vertical-date small text-muted"> İşlem Yapan : @String.Format("{0:dd.MM.yyyy HH:mm}", item.createdby_Title) </span>

										@if (item.transformInvoiceId != null)
										{
											if (item.type == (int)EnumCMP_InvoiceActionType.TalepTeklifEklendi)
											{
												<a href="/CMP/VWCMP_Tender/DetailBuying?id=@item.transformInvoiceId" target="_blank" style="background-color: #1c84c6;color: #ffffff;" class="btn btn-xs" data-original-title="Teklife Git">
													<i class="fa fa-arrow-right"></i>
												</a>
											}

											if (item.type == (int)EnumCMP_InvoiceActionType.TalepFatura)
											{
												<a href="/CMP/VWCMP_Invoice/DetailBuying?id=@item.transformInvoiceId" target="_blank" style="background-color: #1c84c6;color: #ffffff;" class="btn btn-xs" data-original-title="Faturaya Git">
													<i class="fa fa-arrow-right"></i>
												</a>
											}
										}
									</div>
								</div>
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@if ((userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayici)) && Model.status == (int)EnumCMP_RequestStatus.TeklifToplandiOnayBekleniyor) ||
	(userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaPersonel)) && Model.status != (int)EnumCMP_RequestStatus.FaturasiAlindi))
{
	<div class="fixedStart">
		<input type="checkbox" id="fixed">
		<label title="" for="fixed" id="fixed"><i class="fa-2x fa fa-plus"> </i></label>
		<div class="fix-buttons">

			@if (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaOnaylayici)) && Model.status == (int)EnumCMP_RequestStatus.TeklifToplandiOnayBekleniyor)
			{
				<a onclick="requestDetail.events.updateStatus(this)" data-type="@((int)EnumCMP_RequestStatus.YeniTeklifToplanmasiBekleniyor)">
					<i class="fa fa-refresh" data-toggle="tooltip" title="Teklifler Tekrar Toplansın"></i>
				</a>
			}

			@if (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.SatinAlmaPersonel)) && Model.status != (int)EnumCMP_RequestStatus.FaturasiAlindi)
			{
				<a data-task="Insert" data-method="GET" data-show="single" data-href="/CMP/VWCMP_Tender/InsertBuying?id=@Model.id&customerId=@Model.customerId&transform=true">
					<i class="icon-pencil-alt" data-toggle="tooltip" title="Teklif Ekle"></i>
				</a>
			}

		</div>
	</div>
}



<script type="text/javascript" data-selector="modalContainer">

    var requestDetail = {
        dfn: {
            model: @(Html.Raw(Infoline.Helper.Json.Serialize(Model))),
        },
        events: {
            addNote: function (note) {
                $.ajax({
                type: "POST",
                    url: '/CMP/VWCMP_Request/InsertNote',
                    data: { requestId: requestDetail.dfn.model.id, note: note, invoiceId: '@Model.id' },
                success: function (response) {
                    if (response.result) {
                        var temp = '<div class="vertical-timeline-block">' +
                                          '      <div class="vertical-timeline-icon gray-bg">'+
                                          '          <i class="fa fa-bolt"></i>'+
                                          '      </div>'+
                                          '      <div class="vertical-timeline-content" style="background-color: #c3c3c3">'+
                                          '          <p style="margin:0 !important;">'+
                                          '              '+ response.objects.description +
                                          '          </p>'+
                                          '          <span class="vertical-date small text-muted">'+
                                          '              '+ new Date(response.objects.created).toLocaleString()+
                                          '          </span>  <br />'+
                                           '          <span class="vertical-date small text-muted">'+
                                          '              İşlemi Yapan : '+ response.objects.createdby_Title +
                                          '          </span>'+
                                          '      </div>'+
                                          '  </div>';

                        $('#vertical-timeline').prepend(temp);

                        $('#note').val("");
                    }
                }
            });
            },
            updateStatus: function (_this) {
                var type = $(_this).attr("data-type");

                $.ajax({
                    type: "POST",
                    url: '/CMP/VWCMP_Request/UpdateStatus',
                    data: { requestId: requestDetail.dfn.model.id, type: type },
                    success: function (response) {
                        if (response.Result) {
                            location.reload();
                        }
                    },
                    beforeSend: function () {
                        $('body').loadingModal({ text: "İşlem gerçekleştiriliyor, lütfen bekleyiniz.", animation: 'rotatingPlane', backgroundColor: "black" });
                    },
                    complete: function () {
                        $('body').loadingModal('destroy');
                    },
                });
            }
        },
        templates: {
            quantityTemp: function (item) {
                var unit = !item.Unit_Title ? "" : item.Unit_Title;
                if(unit == "ADET"){
                    return kendo.toString(item.quantity, "N0") + " " + unit;
                }

                return kendo.toString(item.quantity, "N2") + " " + unit;
            },
            currencyTemp: function (item, data, isTotal) {
                if (!data) {
                    return "-";
                }
                if (data != null) {
                    var currency = item.Currency_Symbol ? item.Currency_Symbol : "₺";
                    return isTotal ? '<span style="color:#ff6a00">' + kendo.toString(data, "N2") + " " + currency + '</span>' :
                        kendo.toString(data, "N2") + " " + currency;
                }
                else {
                    return "-";
                }
            },
            stockTemp: function (data) {
                if (data.stockType != 0) {
                    if (data.stockCount && data.stockCount != null) {
                        return kendo.toString(data.stockCount, "N2") + (data.Unit_Title ? data.Unit_Title : "");
                    }
                    else
                    {
                        return "Stokta Yok"
                    }
                }

                return "Stoksuz Ürün/Hizmet";
            },
            statusTemp: function (data) {
                if (data.status == '@((int)EnumCMP_TenderStatus.Red)') {
                    return '<i class="fa text-danger fa-times-circle">';
                }
                else if (data.status == '@((int)EnumCMP_TenderStatus.CevapBekleniyor)') {
                    return '<i class="fa text-warning fa-spinner">';
                }
                else {
                    return '<i class="fa text-navy fa-check">';
                }
            }
        }
    }

    if (document.getElementById("note")) {
        document.getElementById("note").addEventListener("keyup", function (e) {
            if (e.keyCode == 13) {
                var note = e.target.value;
                if (!note || note == null || note == "") {
                    MesajWarning("Lütfen önce not giriniz.");
                    return;
                }

                requestDetail.events.addNote(note);
            }
        })
    }

    $(document)
        .on("load:grid", '#VWCMP_InvoiceItem', function (e) {
            $(this).find('table').toggleClass("k-selectable");

            var productIds = requestDetail.dfn.model.InvoiceItems.map(a => a.productId).join(",");
            $('[data-button="stock"]').attr("data-href", "/PRD/VWPRD_StockSummary/StockDetailProducts?productIds=" + productIds);
            $('[data-button="stock"]').removeClass("hide");
        })
        .on("success:swal", '[data-ask]', function (e) {
            location.reload();
        })
        .on("success", '#VWCMP_TenderInsertForm, #VWCMP_TenderUpdateForm', function (e, res) {
            if (res && res != null && res.Result) {
                location.reload();
            }
        })
        .on("selected:grid", '#VWCMP_TenderPending', function(e, res){
            var approveElem = $('[data-transform="approveTender"]');
            var rejectElem = $('[data-transform="rejectTender"]');

            if (res.status != '@((int)EnumCMP_TenderStatus.CevapBekleniyor)'){
                approveElem.addClass("hide");
                rejectElem.addClass("hide");
            }
            else {
                $(approveElem).attr("data-href", '/CMP/VWCMP_Tender/UpdateStatus?tenderId='+ res.id+'&type=@((int)EnumCMP_TenderStatus.YoneticiOnay)&isTaskRule=false');
				$(rejectElem).attr("data-href", '/CMP/VWCMP_Tender/UpdateStatus?tenderId=' + res.id +'&type=@((int)EnumCMP_TenderStatus.Red)&isTaskRule=false');
            }
        })

</script>