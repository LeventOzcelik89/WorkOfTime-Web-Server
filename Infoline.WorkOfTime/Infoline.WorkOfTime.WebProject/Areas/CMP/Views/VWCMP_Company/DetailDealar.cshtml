@model Infoline.WorkOfTime.BusinessAccess.VMCMP_CompanyModel
@{
    ViewBag.Path = Model.breadCrumps;
    ViewBag.Title = Model.fullName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userStatus = (PageSecurity)Session["userStatus"];
    var accountIds = Model.VWPA_Accounts.Select(a => (Guid?)a.id).ToList();
}
<style type="text/css">

    .panel-content {
        overflow: hidden !important;
    }
</style>
<script type="text/javascript">
	var first = false;
	function FilterMenuTaskType(element) {
		element.kendoDropDownList({
			dataTextField: "Name",
            dataValueField: "Name",
			filter: "contains",
			dataSource: {
				transport: {
					read: "@Url.Action("FilterMenuTaskType", "General",  new { area = string.Empty })"
				}
			},
			optionLabel: "Görev Tipi Seçiniz"
		})
	}
		function FilterMenuTaskStatus(element) {
			element.kendoDropDownList({
				dataTextField: "Name",
                dataValueField: "Name",
				filter: "contains",
				dataSource: {
					transport: {
						read: "@Url.Action("FilterMenuTaskStatus", "General",  new { area = string.Empty })"
					}
				},
				optionLabel: "Son İşlem Seçiniz"
			});
		}
		function FilterMenuTaskPriority(element) {
			element.kendoDropDownList({
				dataTextField: "Name",
                dataValueField: "Name",
				filter: "contains",
				dataSource: {
					transport: {
						read: "@Url.Action("FilterMenuTaskPriority", "General",  new { area = string.Empty })"
					}
				},
				optionLabel: "Görev Önceliği Seçiniz"
			})
	}
	  function FilterMenuInventoryLastStatus(element) {
        element.kendoDropDownList({
            dataTextField: "Name",
			dataValueField: "Name",
			filter: "contains",
			dataSource: {
				transport: {
					read: "@Url.Action("FilterMenuInventoryLastStatus", "General",  new { area = string.Empty })"
				}
			},
			optionLabel: "Durum Seçiniz"
        })
    }
	$(document).on('shown.bs.tab', 'a[href="#VWFTM_Tasks"]', function (e) {
		if (first == false) {
			first = true;
			$("#VWFTM_TaskContinuing").data("kendoGrid").refresh();
		}
	});
    $(document).on('shown.bs.tab', 'a[href="#VWPRD_Transaction"]', function (e) {
        if (first == false) {
            first = true;
            $("#VWPRD_Inventory").data("kendoGrid").refresh();
        }
	});
	$(document)
		.on("selected:grid", "#VWFTM_TaskFormRelations", function (e, res) {
			var detail = $("#taskFormDetail");
			$(detail).attr("data-href", "/FTM/VWFTM_TaskForm/Detail?id=" + res.formId);
		})
		.on("success", '#InsertCustomer', function (e, res) {
			if (res != null && res.Result) {
				location.reload();
			}
		})
</script>

<script type="text/javascript">
    function taskPriorityResult(data) {
        if (data.priority == 0) {
            return '<i style="color:#EF5352" class="fa fa-circle"></i>  Yüksek';
        }
        else if (data.priority == 1) {
            return '<i style="color:#F8AC59" class="fa fa-circle"></i>  Orta';
        }
        else if (data.priority == 2) {
            return '<i style="color:#1ab394" class="fa fa-circle"></i>  Düşük';
        }
    }
    var gridBase = {
        items: {
            DropDown1: null,
            DropDown2: null
        }
    };
    function filterMenuInit(e) {
        if (e.field == "created") {
            var $container = e.container;
            e.container.find('[type="reset"]').hide();
            e.container.find(".k-filter-help-text").remove();
            e.container.find('[type="submit"]').addClass('filterSubmitBtn').attr('disabled', 'disabled');
            e.container.find('[data-role="datetpicker"]').attr('required', 'required');
            gridBase.items.DropDown1 = e.container.find("select:eq(0)");
            gridBase.items.DropDown1.data("kendoDropDownList").value("gte");
            gridBase.items.DropDown1.data("kendoDropDownList").trigger("change");
            var logicDropDown = e.container.find("select:eq(1)");
            logicDropDown.data("kendoDropDownList").value("and");
            logicDropDown.data("kendoDropDownList").trigger("change");
            gridBase.items.DropDown2 = e.container.find("select:eq(2)");
            gridBase.items.DropDown2.data("kendoDropDownList").value("lte");
            gridBase.items.DropDown2.data("kendoDropDownList").trigger("change");
            //  firstValueDropDown.parents('.k-dropdown').hide();
            logicDropDown.parents('.k-dropdown').hide();
            //  secondValueDropDown.parents('.k-dropdown').hide();
            gridBase.items.DropDown1.data('kendoDropDownList').readonly(true);
            gridBase.items.DropDown2.data('kendoDropDownList').readonly(true);
            $($('.k-header')[14]).html("Başlangıç Tarihi");
            $($('.k-header')[17]).html("Bitiş Tarihi");
            $container.find('[data-role="datepicker"]').on('change', function (e) {
                var dt1 = $container.find('[data-role="datepicker"]').eq(0);
                var dt2 = $container.find('[data-role="datepicker"]').eq(1);
                if (dt1.data('kendoDatePicker').value() != null && dt2.data('kendoDatePicker').value() != null) {
                    dt2.data('kendoDatePicker').value().addHours(23);
                    dt2.data('kendoDatePicker').value().addMinutes(59);
                    dt2.data('kendoDatePicker').value().addSeconds(59);
                    $container.find('[type="submit"]').removeAttr('disabled');
                }
            });
            $('[role="columnheader"][data-field="ReadTime"] .k-grid-filter').on('click', function (a) {
                $container.find('[data-role="datepicker"]').trigger('change');
            });
        }
        else if (e.field == "dueDate") {
            var $container = e.container;
            e.container.find('[type="reset"]').hide();
            e.container.find(".k-filter-help-text").remove();
            e.container.find('[type="submit"]').addClass('filterSubmitBtn').attr('disabled', 'disabled');
            e.container.find('[data-role="datetpicker"]').attr('required', 'required');
            gridBase.items.DropDown1 = e.container.find("select:eq(0)");
            gridBase.items.DropDown1.data("kendoDropDownList").value("gte");
            gridBase.items.DropDown1.data("kendoDropDownList").trigger("change");
            var logicDropDown = e.container.find("select:eq(1)");
            logicDropDown.data("kendoDropDownList").value("and");
            logicDropDown.data("kendoDropDownList").trigger("change");
            gridBase.items.DropDown2 = e.container.find("select:eq(2)");
            gridBase.items.DropDown2.data("kendoDropDownList").value("lte");
            gridBase.items.DropDown2.data("kendoDropDownList").trigger("change");
            //  firstValueDropDown.parents('.k-dropdown').hide();
            logicDropDown.parents('.k-dropdown').hide();
            //  secondValueDropDown.parents('.k-dropdown').hide();
            gridBase.items.DropDown1.data('kendoDropDownList').readonly(true);
            gridBase.items.DropDown2.data('kendoDropDownList').readonly(true);
            $($('.k-header')[20]).html("Başlangıç Tarihi");
            $($('.k-header')[23]).html("Bitiş Tarihi");
            $container.find('[data-role="datepicker"]').on('change', function (e) {
                var dt1 = $container.find('[data-role="datepicker"]').eq(0);
                var dt2 = $container.find('[data-role="datepicker"]').eq(1);
                if (dt1.data('kendoDatePicker').value() != null && dt2.data('kendoDatePicker').value() != null) {
                    dt2.data('kendoDatePicker').value().addHours(23);
                    dt2.data('kendoDatePicker').value().addMinutes(59);
                    dt2.data('kendoDatePicker').value().addSeconds(59);
                    $container.find('[type="submit"]').removeAttr('disabled');
                }
            });
            $('[role="columnheader"][data-field="ReadTime"] .k-grid-filter').on('click', function (a) {
                $container.find('[data-role="datepicker"]').trigger('change');
            });
        }
        else if (e.field == "lastOperationDate") {
            var $container = e.container;
            e.container.find('[type="reset"]').hide();
            e.container.find(".k-filter-help-text").remove();
            e.container.find('[type="submit"]').addClass('filterSubmitBtn').attr('disabled', 'disabled');
            e.container.find('[data-role="datetpicker"]').attr('required', 'required');
            gridBase.items.DropDown1 = e.container.find("select:eq(0)");
            gridBase.items.DropDown1.data("kendoDropDownList").value("gte");
            gridBase.items.DropDown1.data("kendoDropDownList").trigger("change");
            var logicDropDown = e.container.find("select:eq(1)");
            logicDropDown.data("kendoDropDownList").value("and");
            logicDropDown.data("kendoDropDownList").trigger("change");
            gridBase.items.DropDown2 = e.container.find("select:eq(2)");
            gridBase.items.DropDown2.data("kendoDropDownList").value("lte");
            gridBase.items.DropDown2.data("kendoDropDownList").trigger("change");
            //  firstValueDropDown.parents('.k-dropdown').hide();
            logicDropDown.parents('.k-dropdown').hide();
            //  secondValueDropDown.parents('.k-dropdown').hide();
            gridBase.items.DropDown1.data('kendoDropDownList').readonly(true);
            gridBase.items.DropDown2.data('kendoDropDownList').readonly(true);
            $($('.k-header')[25]).html("Başlangıç Tarihi");
            $($('.k-header')[28]).html("Bitiş Tarihi");
            $container.find('[data-role="datepicker"]').on('change', function (e) {
                var dt1 = $container.find('[data-role="datepicker"]').eq(0);
                var dt2 = $container.find('[data-role="datepicker"]').eq(1);
                if (dt1.data('kendoDatePicker').value() != null && dt2.data('kendoDatePicker').value() != null) {
                    dt2.data('kendoDatePicker').value().addHours(23);
                    dt2.data('kendoDatePicker').value().addMinutes(59);
                    dt2.data('kendoDatePicker').value().addSeconds(59);
                    $container.find('[type="submit"]').removeAttr('disabled');
                }
            });
            $('[role="columnheader"][data-field="ReadTime"] .k-grid-filter').on('click', function (a) {
                $container.find('[data-role="datepicker"]').trigger('change');
            });
        }
    }
</script>


<style type="text/css">
    .list-group.clear-list .list-group-item {
        padding: 5px 0px !important;
    }

    .table {
        border-top: 0px #ddd solid;
    }

    .mywidget {
        border-radius: 10px !important;
        padding: 10px 15px !important;
        margin-bottom: 10px !important;
        margin-top: 0px !important;
        min-height: 70px !important;
    }

    .dl-horizontal dt {
        text-align: left !important;
    }

    .toggle-group label {
        line-height: 20px !important;
    }

    .breadcrumb {
        padding: 0px 0px !important;
        margin-bottom: 0px !important;
        border-radius: 4px !important;
    }
</style>
<div class="row">
    <div class="col-lg-3">
        <div class="ibox ">
            <div class="p-md text-center myCompanyBg" style="background:url('/Content/Custom/img/Company-Background.png');color: #ffffff;padding-bottom:10px !important;">
                <div class="m-b-md">
                    <h2 class="font-bold no-margins">
                        @Model.name
                    </h2>
                    <small> <i class="fa fa-location-arrow"></i> @(Model.openAddressLocationId_Title != null ? Model.openAddressLocationId_Title : "Lokasyon bulunamadı")</small>
                </div>
                <img src="@(Model.logo != null ? Model.logo : "")" alt="image" class="img-circle m-t-xs img-responsive" style="height: 103px; margin: auto; border: 2px solid #fff;" onerror="ImageError(this,'/Content/Custom/img/company.png')">
                @if (Model.type == (int)EnumCMP_CompanyType.Diger)
                {
                    <div style="margin-top: 15px;">
                        <a class="btn btn-xs btn-primary" data-href="/CMP/VWCMP_Company/Update?id=@Model.id" data-modal="true" data-task="Insert"> <i class="fa fa-edit"></i> Düzenle </a>
                        <a class="btn btn-xs btn-primary" href="mailto:@Model.email"> <i class="fa fa-envelope"></i> Mail Gönder </a>
                        <a class="btn btn-xs btn-primary" href="tel:@Model.phone"> <i class="fa fa-phone"></i> Ara </a>
                    </div>
                }
                else
                {
                    <div style="margin-top: 15px;">
                        <a class="btn btn-xs btn-primary" data-href="/CMP/VWCMP_Company/Update?id=@Model.id" data-modal="true" data-task="Insert"> <i class="fa fa-edit"></i> Düzenle </a>
                    </div>
                }
            </div>
            <div class="widget-text-box">
                <ul class="list-group clear-list" style="margin-bottom: 0 !important;">
                    <li class="list-group-item fist-item">
                        <i class="fa fa-building"></i> <strong> Firma Kodu : </strong> @Model.code
                    </li>
                    <li class="list-group-item fist-item">
                        <i class="fa fa-envelope"></i> <strong> E-Posta : </strong> <a href="mailto:@Model.email"> @Model.email </a>
                    </li>
                    <li class="list-group-item fist-item">
                        <i class="fa fa-phone"></i><strong> Telefon : </strong> <a href="tel:@Model.phone"> @Model.phone </a>
                    </li>
                    <li class="list-group-item fist-item">
                        <i class="fa fa-info-circle"></i><strong> Durumu : </strong> @Model.isActive_Title
                    </li>
                    @if (TenantConfig.Tenant.TenantCode == 1133)
                    {
                        <li class="list-group-item fist-item">
                            <i class="fa fa-info-circle"></i><strong> Açıklama : </strong> @Model.description
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="ibox ">
            <div class="ibox-title">
                <h5>GENEL BİLGİLER</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content no-padding">
                <ul class="list-group">
                    <li class="list-group-item">
                        <span class="badge badge-white">@Model.commercialTitle</span>
                        Ticari Ünvan :
                    </li>
                    <li class="list-group-item ">
                        <span class="badge badge-white">@Model.taxType_Title</span>
                        Ticari Firma Türü :
                    </li>
                    <li class="list-group-item">
                        <span class="badge badge-white"><a href="/CMP/VWCMP_Company/Detail?id=@Model.pid">@Model.pid_Title</a></span>
                        Bağlı Olduğu Firma :
                    </li>
                    <li class="list-group-item">
                        <span class="badge badge-white">@Model.fax</span>
                        Faks Numarası:
                    </li>
                    <li class="list-group-item">
                        <span class="badge badge-white">@Model.mersisNo</span>
                        Mersis Numarası :
                    </li>
                    <li class="list-group-item">
                        <span class="badge badge-white">@Model.taxOffice</span>
                        Vergi Dairesi :
                    </li>
                    <li class="list-group-item">
                        <span class="badge badge-white">@Model.taxNumber </span>
                        Vergi Numarası :
                    </li>
                    <li class="list-group-item" style="padding: 12px 0px 30px 15px;">
                        <span style="width:75%;text-align:right;white-space:normal;" class="badge badge-white">@Model.invoiceAddress</span>
                        Fatura Adresi :
                    </li>
                    <li class="list-group-item clearfix">
                        <span style="width:80%;text-align:right;white-space:normal;" class="badge badge-primary">@Model.Sectors</span>
                        Faaliyet Alanları :
                    </li>
                </ul>
            </div>
        </div>
        @if (TenantConfig.Tenant.Config.CustomProperty.ContainsKey("CMP_Company") && TenantConfig.Tenant.Config.CustomProperty["CMP_Company"].Length > 0)
        {
            @Html.Action("Detail", "VWSYS_TableAdditionalProperty", new { area = "SYS", dataId = Model.id, dataTable = "CMP_Company" })
        }
        <div class="ibox ">
            <div class="ibox-title">
                <h5>KONUM BİLGİSİ</h5>
                <div class="ibox-tools">
                    <a class="collapse-link" id="locationArrow">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content p-sm clearfix">
                @Html.Akilli().MapInputFor(a => a.location).OnlyMap().Searchable(false).HtmlAttributes(new Dictionary<string, object>() { { "id", "LocationCompany" } }).Image("/Content/Custom/img/marker-company.png").ZoomLevel(16).Navigation(false).Height(300)
            </div>
        </div>
        <div class="ibox ">
            <div class="ibox-title">
                <h5>QR KOD</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content clearfix">
                <div class="qrCodeWrapper" data-wrapper="qrCode" style="width: 170px;">
                    @(Html.Kendo().QRCode()
                 .Name("QRCode")
                 .Value(Model.code)
                 .Size(160)
                    )
                    <span data-error-correction="M" data-bind="value: qrcode" style="height: 100px;"></span>
                    <div style="text-align:center;">
                        <a href="#" class="btn btn-danger btn-xs" data-target="QRCode" data-print="qrcode" data-original-title="QR Kod Yazdır"><i class="fa fa-print" aria-hidden="true"></i> Yazdır</a>
                        <a href="#" data-export="qr-code-png" download="qr-code.png" data-target="QRCode" class="btn btn-success btn-xs" data-original-title="QR Kod İndir"><i class="fa fa-download"></i> İndir</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-9">
        <div class="ibox ">
            <div class="ibox-title">
                <h5> <i class="fa text-success fa-bar-chart-o"></i> ÖZET BİLGİ</h5>
            </div>
            <div class="ibox-content clearfix" style="padding-bottom:10px !important; padding-top:10px !important;">
                <div class="col-md-12">
                    <table class="table m-b-xs">
                        <tbody>
                            <tr>
                                <td style="border-top:none;"> <span data-id="VWCMP_Storage" class="label label-success pull-right">1</span> <i class="ii-ambarmevcudu"></i> Toplam Şube/Depo/Kısım Sayısı </td>
                            </tr>
                            <tr>
                                <td><span class="label label-success pull-right" data-id="VWSH_UserActive">1</span><i class="fa fa-hand-o-right"></i> Toplam Personel Sayısı </td>
                            </tr>
                            <tr>
                                <td><span data-id="VWCMP_Company" class="label label-success pull-right">1</span> <i class="fa fa-calendar"></i> Toplam Şube Sayısı </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
            </div>
        </div>
        <section style="margin-bottom: 20px;">
            <div class="tabs-container">
                <ul class="nav nav-tabs">
                    <li class="active" data-toggle="tooltip" data-placement="top" title="Firma Şube/Depo/Kısım Haritası">
                        <a data-toggle="tab" href="#VWCMP_StoragesMap" aria-expanded="true"><i class="icon-map text-success fa-2x"></i></a>
                    </li>
                    <li data-href="@Url.Action("DataSource", "VWCMP_Storage", new { area = "CMP" })" data-toggle="tooltip" data-placement="top" title="Firma Şube/Depo/Kısımları">
                        <a data-toggle="tab" href="#VWCMP_Storages" aria-expanded="true"><i class="icon-home-4 text-success fa-2x"></i></a>
                    </li>
                    <li data-href="@Url.Action("DataSource", "VWSH_User", new { area = "SH" })" data-toggle="tooltip" data-placement="top" title="Firma Personelleri">
                        <a data-toggle="tab" href="#VWSH_Users" aria-expanded="false"><i class="icon-adult text-success fa-2x" aria-hidden="true"></i></a>
                    </li>
                    <li data-href="@Url.Action("DataSource", "VWCMP_Company", new { area = "CMP" })" data-toggle="tooltip" data-placement="top" title="Bağlı Firmalar">
                        <a data-toggle="tab" href="#VWCMP_Companys" aria-expanded="false"><i class="icon-building text-success fa-2x" aria-hidden="true"></i></a>
                    </li>
                    <li data-toggle="tooltip" data-placement="top" title="Firma Dosya ve Evrakları">
                        <a data-toggle="tab" href="#SYS_Files" aria-expanded="false"><i class="icon-attach text-success fa-2x" aria-hidden="true"></i></a>
                    </li>
                    <li data-href="@Url.Action("DataSource", "VWPA_Account", new { area = "PA" })" data-toggle="tooltip" data-placement="top" title="Banka&Kasa İşlemleri">
                        <a data-toggle="tab" href="#VWPA_Accounts" aria-expanded="false"><i class="icon-bank text-success fa-2x" aria-hidden="true"></i></a>
                    </li>
                </ul>
                <style>
                    .k-icon {
                        margin-right: 10px
                    }
                </style>
                <div class="tab-content">
                    <div class="tab-pane active" id="VWCMP_StoragesMap">
                        <h4><i class="icon-map text-success"></i> FİRMANIN ŞUBE/DEPO/KISIM HARİTASI</h4>
                        <div id="Harita"></div>

                    </div>
                    <div class="tab-pane" data-href="@Url.Action("DataSource", "VWCMP_Storage", new { area = "CMP" })" id="VWCMP_Storages">
                        <h4><i class="icon-home-4 text-success"></i> FİRMANIN ŞUBE/DEPO/KISIMLARI </h4>
                        @(Html.Akilli().Grid<Infoline.WorkOfTime.BusinessData.VWCMP_Storage>("VWCMP_Storage")
	.Columns(x => {
		x.Bound(y => y.hasChildren).Hidden().HtmlAttributes(new {name="hasChildren" });
		x.Bound(y => y.code).Title("Kodu").Width(100).Filterable(true);
		x.Bound(y => y.name).Title("İsmi").Width(100).Filterable(true);
		x.Bound(y => y.locationType_Title).Title("Depo Tipi").Width(300);
		x.Bound(y => y.address).Title("Açık Adres").Width(150).Filterable(true);
		x.Bound(y => y.locationId_Title).Title("Ülke/İl/İlçe").Width(150).Filterable(true);
		if (Model.type == (int)EnumCMP_CompanyType.Benimisletmem)
		{
			x.Bound(y => y.supervisorId_Title).Title("Sorumlu Personel").Width(150).Filterable(true);
		}
	})
	.Pageable()
	.Sortable()
	.Scrollable()
	.Filterable()
	.Events(x=>x.DataBound("dataBound"))
	.Selectable()
	.ClientDetailTemplateId("template")
	.DataSource(dataSource => dataSource
	.Ajax()
	.PageSize(20)
	.Read(read => read.Action("DataSource", "VWCMP_Storage", new { area = "CMP" })).Filter(a => a.companyId == Model.id&&a.pid==System.UIHelper.Guid.Null).PageSize(150))
					.ToolBar(x =>
					{
						x.Custom().Text("<i data-original-title='Şube/Depo/Kısım Depo Ekle' class='fa fa-plus-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "id", "storage-add" }, { "data-method", "GET" }, { "data-href", "/CMP/VWCMP_Storage/Insert?companyId="+Model.id+"&locationType="+(int)EnumCMP_StorageLocationType.Depo } }).Url(Url.Action("Insert", "VWCMP_Storage", new { area = "CMP", companyId = Model.id, locationType = (int)EnumCMP_StorageLocationType.Depo }));
						x.Custom().Text("<i data-original-title='Şube/Depo/Kısım Alan Ekle' class='icon-map'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "id", "storage-add" }, { "data-method", "GET" }, { "data-href", "/CMP/VWCMP_Storage/InsertArea?companyId="+Model.id+"&locationType="+(int)EnumCMP_StorageLocationType.Alan } }).Url(Url.Action("InsertArea", "VWCMP_Storage", new { area = "CMP", companyId = Model.id, locationType = (int)EnumCMP_StorageLocationType.Alan }));
						x.Custom().Text("<i data-original-title='Şube/Depo/Kısım Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "id", "storage-update" } ,{ "data-method", "GET" } }).Url(Url.Action("Update", "VWCMP_Storage", new { area = "CMP" }));
						x.Custom().Text("<i data-original-title='Şube/Depo/Kısım Detay' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" },{ "id","detail"}, {"data-default","" },{ "data-modal", "false" }, { "data-blank", "true" } }).Url(Url.Action("Detail", "VWCMP_Storage", new { area = "CMP" }));
						x.Custom().Text("<i data-original-title='Şube/Depo/Kısım Sil' class='fa fa-trash'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } , { "data-method", "POST" }, { "id", "storage-delete" } }).Url(Url.Action("Delete", "VWCMP_Storage", new { area = "CMP" }));
					})
     )
                        <script id="template" type="text/kendo-tmpl">
            @(Html.Kendo().Grid<Infoline.WorkOfTime.BusinessData.VWCMP_Storage>()
            .Name("grid_#=id#")
            .Columns(x =>
            {
                x.Bound(y => y.hasChildren).Hidden().HtmlAttributes(new { name = "hasChildren" });
                x.Bound(y => y.code).Title("Kodu").Width(100).Filterable(true);
                x.Bound(y => y.name).Title("İsmi").Width(100).Filterable(true);
                x.Bound(y => y.address).Title("Açık Adres").Width(150).Filterable(true);
                x.Bound(y => y.locationId_Title).Title("Ülke/İl/İlçe").Width(150).Filterable(true);
                if (Model.type == (int)EnumCMP_CompanyType.Benimisletmem)
                {
                    x.Bound(y => y.supervisorId_Title).Title("Sorumlu Personel").Width(150).Filterable(true);
                }
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(25)
               .Read(read => read.Action("HierarchyDataSource", "VWCMP_Storage", new { area = "CMP" ,id="#=id#" }))
               .PageSize(250)
            )
            .Events(x=>x.DataBinding("hideHeader").DataBound("dataBound"))
            .Sortable()
            .Selectable()
            .ClientDetailTemplateId("template")
            .ToClientTemplate()
    )
                        </script>
                        <script>
                            function hideHeader() {
                                $("#VWCMP_Storage").children().find(".k-grid .k-grid-header").hide();
                            }
                            function dataBound() {
                                $('[name="hasChildren"]').each(function (i, item) {
                                    var hasChildren = $(this).text();
                                    if (hasChildren == "false") {
                                        $(item).parents("tr").children("td.k-hierarchy-cell").children("a").hide();
                                    }
                                });
                            }

                        </script>
                    </div>

                    <div class="tab-pane" data-href="@Url.Action("DataSource", "VWCMP_Company", new { area = "CMP" })" id="VWCMP_Companys">
                        <h4><i class="text-success icon-building"></i> BAĞLI FİRMALAR </h4>
                        @(Html.Akilli()
                .Grid<Infoline.WorkOfTime.BusinessData.VWCMP_Company>("VWCMP_Company")
                .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWCMP_Company", new { area = "CMP" })).PageSize(25).Filter(c => c.pid == Model.id))
                .Columns(x =>
                {
                    x.Bound(y => y.fullName).Title("İşletme Bilgileri").ClientTemplate("#=TemplateEngine('CMP_CompanyGridTemplate',data)#");
                    x.Bound(y => y.code).Title("Kodu").Hidden(true);
                    x.Bound(y => y.name).Title("İsmi").Hidden(true);
                    x.Bound(y => y.commercialTitle).Title("Fatura Ünvanı").Hidden(true);
                    x.Bound(y => y.openAddressLocationId_Title).Title("Ülke/İl/İlçe").Hidden(true);
                    x.Bound(y => y.email).Title("E-Mail").Hidden(true);
                    x.Bound(y => y.fax).Title("Telefon Numarası").Hidden(true);
                    x.Bound(y => y.fax).Title("Faks Numarası").Hidden(true);
                    x.Bound(y => y.mersisNo).Title("Mersis No").Hidden(true);
                    x.Bound(y => y.taxNumber).Title("Vergi Numarası").Hidden(true);
                    x.Bound(y => y.taxOffice).Title("Vergi Dairesi").Hidden(true);
                    x.Bound(y => y.invoiceAddress).Title("Fatura Adresi").Hidden(true);
                    x.Bound(y => y.openAddress).Title("Açık Adres").Hidden(true);
                })
                .Scrollable(x => x.Height(350))
                .Selectable(x => x.Mode(GridSelectionMode.Single))
                .ToolBar(x =>
                {
                    x.Custom().Text("<i data-original-title='Firma Ekle' class='fa fa-plus-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-Insert", "Company" }, { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWCMP_Company", new { area = "CMP", pid = Model.id, type = Model.type }));
                    x.Custom().Text("<i data-original-title='Firma Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWCMP_Company", new { area = "CMP", pid = Model.id }));
                    x.Custom().Text("<i data-original-title='Firma Detay' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-blank", "" }, { "data-modal", "false" } }).Url(Url.Action("Detail", "VWCMP_Company", new { area = "CMP" }));
                })
                        )
                    </div>
                    <div class="tab-pane" id="SYS_Files">
                        <h4><i class="text-success icon-attach"></i> FİRMA DOSYALARI VE EVRAKLARI </h4>
                        @Html.Action("Index", "Files", new { area = "", DataId = Model.id, DataTable = "CMP_Company", Filter = false })
                        @Html.Action("PreviewTable", "Files", new { area = "", DataTable = "CRM_Contact", DataIds = ((Guid[])ViewBag.ContactIds), Filter = false })
                        @Html.Action("PreviewTable", "Files", new { area = "", DataTable = "CRM_Presentation", DataIds = ((Guid[])ViewBag.PresentationIds), Filter = false })
                        @if (Model.type == (int)EnumCMP_CompanyType.Benimisletmem)
                        {
                            <div class="ibox  collapsed">
                                <div class="ibox-title">
                                    <h5> <i class="fa text-success fa-list-alt"></i>  Şirket Kütüphanesi </h5>
                                    <div class="ibox-tools">
                                        <a class="collapse-link">
                                            <i class="fa fa-chevron-up"></i>
                                        </a>
                                    </div>
                                </div>
                                <div class="ibox-content">
                                    @Html.Action("Index", "Files", new { area = "", DataId = Model.id, DataTable = "CMP_CompanyMyPersonDocument" })
                                </div>
                            </div>
                            <div class="ibox  collapsed">
                                <div class="ibox-title">
                                    <h5> <i class="fa text-success fa-list-alt"></i>  İSG Dosyaları</h5>
                                    <div class="ibox-tools">
                                        <a class="collapse-link">
                                            <i class="fa fa-chevron-up"></i>
                                        </a>
                                    </div>
                                </div>
                                <div class="ibox-content">
                                    @Html.Action("Index", "Files", new { area = "", DataId = Model.id, DataTable = "CMP_CompanyMyWorkHealthDocument" })
                                </div>
                            </div>
                            <div class="ibox  collapsed">
                                <div class="ibox-title">
                                    <h5> <i class="fa text-success fa-list-alt"></i>  Şirket Evrakları </h5>
                                    <div class="ibox-tools">
                                        <a class="collapse-link">
                                            <i class="fa fa-chevron-up"></i>
                                        </a>
                                    </div>
                                </div>
                                <div class="ibox-content">
                                    @Html.Action("Index", "Files", new { area = "", DataId = Model.id, DataTable = "CMP_CompanyMyDocument" })
                                </div>
                            </div>
                        }
                    </div>
                    <div class="tab-pane" data-href="@Url.Action("DataSource", "VWSH_User", new { area = "SH" })" id="VWSH_Users">
                        <h4><i class="icon-adult text-success"></i> PERSONEL LİSTESİ </h4>
                        @(Html.Akilli()
            .Grid<Infoline.WorkOfTime.BusinessData.VWSH_User>("VWSH_UserActive")
            .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWSH_User", new { area = "SH" }))
            .Filter(a => a.CompanyId == Model.id && a.IsWorking == true).PageSize(25).Sort(a => a.Add(c => c.FullName)))
            .Columns(x =>
            {
                if (Model.type == (int)EnumCMP_CompanyType.Benimisletmem)
                {
                    x.Bound(y => y.FullName).Title("Personel Bilgileri").ClientTemplate("#=TemplateEngine('personelTemplate',data)#");
                    x.Bound(y => y.code).Title("Personel Kodu").Width(180).Hidden(true);
                    x.Bound(y => y.loginname).Title("TC Kimlik No").Width(180).Hidden(true);
                    x.Bound(y => y.firstname).Title("Ad").Width(180).Hidden(true);
                    x.Bound(y => y.lastname).Title("Soyad").Width(180).Hidden(true);
                    x.Bound(y => y.title).Title("Ünvan").Hidden(true);
                    x.Bound(y => y.Department_Title).Title("Çalıştığı Departman").Width(180).Hidden(true);
                    x.Bound(y => y.birthday).Title("Doğum Tarihi").Width(180).Format(Extensions.DateFormatShort(true)).Hidden(true);
                    x.Bound(y => y.cellphone).Title("Şahsi Cep Telefonu").Width(180).Hidden(true);
                    x.Bound(y => y.email).Title("Email").Width(180).Hidden(true);
                    x.Bound(y => y.address).Title("Adres").Width(180).Hidden(true);
                    x.Bound(y => y.CompanyPerson_Title).Title("Sigortadaki Ünvan").Width(180).Hidden(true);
                    x.Bound(y => y.companyCellPhone).Title("Şirket Cep Telefonu").Width(180).Hidden(true);
                    x.Bound(y => y.JobStartDate).Title("İşe Giriş Tarihi").Format(Extensions.DateFormatShort(true)).Hidden(true);
                    x.Bound(y => y.PersonWorkingCount).Title("Toplam Çalışılan Gün").Hidden(true);
                    x.Bound(y => y.PermitYearlyDeserved).Title("Hak Edilen Yıllık İzin").Hidden(true);
                    x.Bound(y => y.PermitYearlyUsed).Title("Kullanılan Yıllık İzin").Hidden(true);
                    x.Bound(y => y.PermitYearlyUsable).Title("Kalan Yıllık İzin").Hidden(true);
                }
                else
                {
                    x.Bound(y => y.FullName).Title("Adı Soyadı");
                    x.Bound(y => y.title).Title("Ünvanı").Width(200);
                    x.Bound(y => y.cellphone).Title("Cep Telefonu").Width(200);
                    x.Bound(y => y.phone).Title("Sabit Telefon").Width(200);
                    x.Bound(y => y.email).Title("Eposta Adresi").Width(200);
                }
            })
            .Scrollable(x => x.Height(350))
            .Selectable(x => x.Mode(GridSelectionMode.Single))
            .ToolBar(x =>
            {
                if (Model.type == (int)EnumCMP_CompanyType.Benimisletmem)
                {
                    x.Custom().Text("<i data-original-title='Personel Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-modal", "false" }, { "data-show", "single" }, { "data-blank", "" } }).Url(Url.Action("Update", "VWSH_User", new { area = "SH" }));
                    x.Custom().Text("<i data-original-title='Personel Detay' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-modal", "false" }, { "data-show", "single" }, { "data-blank", "" } }).Url(Url.Action("Detail", "VWSH_User", new { area = "SH" }));
                }
                else
                {
                    x.Custom().Text("<i data-original-title='Personel Ekle' class='fa fa-plus-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-modal", "true" }, { "data-show", "always" }, { "data-method", "get" } }).Url(Url.Action("InsertCustomer", "VWSH_User", new { area = "SH", companyId = Model.id }));
                    x.Custom().Text("<i data-original-title='Personel Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-modal", "true" }, { "data-show", "single" }, { "data-method", "get" } }).Url(Url.Action("UpdateCustomer", "VWSH_User", new { area = "SH" }));
                    x.Custom().Text("<i class='icon-mail-1'  data-original-title='Oturum Bilgisi (KullanıcıAdı,Şifre) Paylaş'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-modal", "true" }, { "data-ask", "Oturum bilgisi paylaşmak istediğinizden eminmisiniz.Kullanıcı bu bilgilerle sistemde oturum açabilecektir." } }).Url(Url.Action("SendPassword", "VWSH_User", new { area = "SH" }));
                    x.Custom().Text("<i title='Personeli Sİl' class='fa fa-trash'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWSH_User", new { area = "SH" }));
                }
            }))
                    </div>
                    <div class="tab-pane" data-href="@Url.Action("DataSource", "VWPA_Account", new { area = "PA" })" id="VWPA_Accounts">
                        <h4><i class="text-success icon-bank"></i> BANKA VE KASA İŞLEMLERİ </h4>
                        @(Html.Akilli()
               .Grid<Infoline.WorkOfTime.BusinessData.VWPA_Account>("VWPA_Account")
               .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWPA_Account", new { area = "PA" }))
               .Filter(a => a.dataTable == "CMP_Company" && a.dataId == Model.id && a.type == (int)EnumPA_AccountType.Banka).PageSize(25))
               .Columns(x =>
               {
                   x.Bound(y => y.name).HeaderHtmlAttributes(new { @class = "hide" }).Sortable(false).Width(90).ClientTemplate("#=TemplateEngine('VWPA_AccountTemplate',data)#").Filterable(a => a.Cell(c => c.Template("kendo.TextSeachFilter"))); ;
                   x.Bound(y => y.created).Title("Oluşturulma Tarihi").Format(Extensions.DateFormatShort(true)).Width(130).Hidden(true);
                   x.Bound(y => y.dataId_Title).Title("Hesap Sahibi").Width(200).Hidden(true);
                   x.Bound(y => y.code).Title("Hesap Kodu").Width(160).Hidden(true);
                   x.Bound(y => y.currencyId_Title).Title("Döviz Cinsi").Width(160).Hidden(true);
                   x.Bound(y => y.Currency_Symbol).Title("Döviz Sembol").Width(160).Hidden(true);
                   x.Bound(y => y.bankId_Title).Title("Banka Adı").Width(160).Hidden(true);
                   x.Bound(y => y.iban).Title("IBAN").Width(160).Hidden(true);
                   x.Bound(y => y.status_Title).Title("Durumu").Width(100).Hidden(true);
                   x.Bound(y => y.Currency_Symbol).Hidden(true).Title("Para Birimi");
               })
               .Scrollable(x => x.Height(350))
               .Selectable(x => x.Mode(GridSelectionMode.Multiple))
               .ToolBar(x =>
               {
                   if (Model.type == (int)EnumCMP_CompanyType.Benimisletmem|| userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.HakEdisBayiPersoneli)))
                   {
                       x.Custom().Text("<i data-original-title='Hesap Ekle' class='fa fa-plus-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWPA_Account", new { area = "PA", dataTable = "CMP_Company", dataId = Model.id }));
                       x.Custom().Text("<i data-original-title='Hesap Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWPA_Account", new { area = "PA" }));
                       x.Custom().Text("<i data-original-title='Hesap Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-modal", "false" }, { "data-blank", "true" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWPA_Account", new { area = "PA" }));
                   }
               }))
                    </div>

                </div>
            </div>
        </section>
    </div>
</div>
<script type="text/javascript" data-selector="modalContainer">
    var cmpDetail = {
        dfn: {
            tenderStatusEnums: @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumCMP_TenderStatus>())),
            orderStatusEnums: @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumCMP_OrderStatus>())),
            requestStatusEnums: @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumCMP_RequestStatus>())),
            ledgerTypes: @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumPA_LedgerType>())),
            taskTypes: @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumFTM_TaskType>())),
        },
        templates: {
            taskIconTemp: function (item) {
                if (item == null) { return ''; }
                var type = $.Enumerable.From(cmpDetail.dfn.taskTypes).Where(a => a.Key == item).FirstOrDefault();
                return '<i class="' + type.Generic.icon + '" data-toggle="tooltip" data-placement="left" data-original-title="' + type.Value + '"></i>';
            },
            currencyTemp: function (item, data, isTotal) {
                if (!data) {
                    return "-";
                }
                if (isTotal && isTotal == true) {
                    return '<span style="color:#ff6a00;font-weight:700;">' + kendo.toString(data, "N2") + " " + item.Currency_Symbol + '</span>';
                }
                return kendo.toString(data, "N2") + " " + item.Currency_Symbol;
            },
            requestStatusTemp: function (data) {
                var status = $.Enumerable.From(cmpDetail.dfn.requestStatusEnums).Where(a => a.Key == data.status).FirstOrDefault();
                return '<i style="color:'+ status.Generic.color +'" class="'+ status.Generic.icon +'">';
            },
            orderStatusTemp: function (data) {
                var status = $.Enumerable.From(cmpDetail.dfn.orderStatusEnums).Where(a => a.Key == data.status).FirstOrDefault();
                return '<i style="color:'+ status.Generic.color +'" class="'+ status.Generic.icon +'">';
            },
            tenderStatusTemp: function (data) {
                var status = $.Enumerable.From(cmpDetail.dfn.tenderStatusEnums).Where(a => a.Key == data.status).FirstOrDefault();
                return '<i style="color:'+ status.Generic.color +'" class="'+ status.Generic.icon +'">';
            },
            totalAmountTemp: function (data, amountTotal) {
                var textColor = data.direction == -1 ? "text-danger" : "text-primary";
                if (amountTotal != 0) {
                    return '<span class="' + textColor + ' pull-right" style="font-size:18px">' + kendo.toString(amountTotal, "n2") + " " + data.Currency_Symbol +  '</span>';
                }
                return "";
            },
            ledgerTypeTemp: function (data) {
                var type = $.Enumerable.From(cmpDetail.dfn.ledgerTypes).Where(a => a.Key == data.type).FirstOrDefault();
                var color = data.direction == -1 ? "text-danger" : "text-primary";
                return '<i class="'+ color +' fa-2x '+ type.Generic.icon +'">';
            }
        }
    }
    $(document)
		.on("selected:grid", "#VWPRD_StockSummaryStorage", function (e, res) {
            var detail = $('[data-storage="detail"]');
            var dataProduct = $('[data-productStorage="detail"]');
            $(detail).attr("data-href", '/PRD/VWPRD_StockSummary/Detail?productId=' + res.productId + '&stockId=' + res.stockId + '&stockTable=' + res.stockTable);
            if (res.stockType == 2 && res.quantity != 0) {
                $(dataProduct).show();
                $(dataProduct).attr("data-href", '/PRD/VWPRD_Inventory/DetailInventory?productId=' + res.productId + '&stockId=' + res.stockId);
            }
            else {
                $(dataProduct).hide();
            }
        })
        .on('click', '[data-Insert="Company"]', function (e) {
            setTimeout(function () {
                $('#VWCMP_CompanyInsertForm').closest('.modal-dialog').css('width', '90%')
            }, 500)
        })
        .on("load:grid", ".k-grid", function (e, resp) {
            var grid = $(this).data("kendoGrid");
            var adet = grid.dataSource.total();
            var gridId = grid.element.attr("id");
            if (gridId == "VWCMP_InvoiceSelling" || gridId == "VWCMP_InvoiceBuying" || gridId == "VWCMP_InvoiceSellingMy" || gridId == "VWCMP_InvoiceBuyingMy") {
                var data = grid.dataSource.data();
                var total = $.Enumerable.From(data).Sum(a => a.totalAmountAsTL);
                $('[data-total="' + gridId + '"]').text(kendo.toString(total, "N2") + " ₺");
            }
            else if (gridId == "VWPA_Account") {
                $('[data-toggle="toggle"]').bootstrapToggle({
                    width: 90,
                    height: 20
                });
            }
            $('[data-id="' + gridId + '"]').text(adet + " Adet");
        })
        .on("click", '#locationArrow', function (e) {
            setTimeout(function (e) {
                haritalar['LocationCompany'].map.updateSize();
                haritalar['LocationCompany'].feature.panTo('@Model.id');
                haritalar['LocationCompany'].map.getView().setZoom(16);
            }, 250)
        })
		.on("selected:grid", "#VWCMP_Storage", function (e, res) {
			var detail = $("#taskFormDetail");
			$(detail).attr("data-href", "/FTM/VWFTM_TaskForm/Detail?id=" + res.formId);
        });

    $("#VWCMP_Storage").on("dblclick", "tr.k-state-selected", function () {
        var dataUid = $(this).attr("data-uid");
        var tableId = $(this).parents(".k-grid").first().attr("id");
        var grid = $("#" + tableId).data("kendoGrid");
        var dataSource = grid.dataSource.getByUid(dataUid);

        window.open("/CMP/VWCMP_Storage/Detail?id=" + dataSource.id)
    });
    $("#VWCMP_Storage").on("click", "tr.k-state-selected", function () {
        $("tr.k-state-selected").removeClass("k-state-selected");
        $(this).addClass("k-state-selected");
        var dataUid = $(this).attr("data-uid");
        var tableId = $(this).parents(".k-grid").first().attr("id");
        var grid = $("#" + tableId).data("kendoGrid");
        var dataSource = grid.dataSource.getByUid(dataUid);

        if (dataSource.pid != null && dataSource.pid != undefined) {
			$("#detail").attr("data-href", "/CMP/VWCMP_Storage/Detail?id=" + dataSource.id);
        }
        else {
			$("#detail").attr("data-href", "/CMP/VWCMP_Storage/Detail");
		}
      
        $("#detail").removeClass("hide");
        $("#storage-add").removeClass("hide");
        $("#storage-delete").removeClass("hide");
        $("#storage-update").removeClass("hide");
        $("#storage-add").attr("data-href", "/CMP/VWCMP_Storage/Insert?pid=" + dataSource.id + "&companyId=@Model.id");
        $("#storage-delete").attr("data-href", "/CMP/VWCMP_Storage/Delete?id=" + dataSource.id);

		if (dataSource.locationType == '@((int)EnumCMP_StorageLocationType.Alan)') {
			$("#storage-update").attr("data-href", "/CMP/VWCMP_Storage/UpdateArea?id=" + dataSource.id);
		} else {
			$("#storage-update").attr("data-href", "/CMP/VWCMP_Storage/Update?id=" + dataSource.id);
		}

    });
</script>

<script type="text/javascript">

    var _ta = {
        harita: null,
        init: function () {
            _ta.harita = new AkilliHarita('Harita', {
                uiInfoContent: "Firmanın Şube/Depo/Kısım Haritası",
                uiMesurement: true,
                uiDefault: true,
                uiSearch: false,
                //center: [4771198.196008172, 4615410.685769245],
                zoom: 8,
				altlik: "Default1",
            });

            _ta.harita.layer.addVector('TaskArea', 'TaskArea');
            _ta.harita.layer.createControl("TaskAreaList", "DEPOLARIN LİSTESİ", "fa fa-search", ["TaskArea"]);
            _ta.harita.panel.add('AreaOptions', 'Depo Bilgileri', 'fa fa-pencil');

            _ta.harita.style.add('updated', 'rgba(26, 179, 148, 0.3)', '#000000', 1, null, null, 0.75);
            _ta.harita.style.add('updatedHover', 'rgba(26, 179, 148, 0.6)', '#000000', 1, null, null, 1);

            _ta.harita.drawing.create(
                ["Polygon", "PolygonFreeHand", "Square", "Box", "Select", "Hover", "DragSelect", "Modify", "HelpPolygon", "Transform", "MeasurementDraw", "DragAndDrop"],
                _ta.harita.layer.get('TaskArea')['TaskArea'],
                true,
                false,
                function (evnt) {

                    var panel = _ta.harita.panel.get('AreaOptions')['AreaOptions'];

                    console.log(evnt);
                    if (evnt.event == 'Draw') {

                        var panel = _ta.harita.panel.get('AreaOptions')['AreaOptions'];
                        var feat = evnt.features.getArray()[0];
                        var item = {
                            id: feat.getId(),
							location: feat.getSQL(),
                            name: '',
                            description: '',
                            code: ''
                        };

                        feat.set('item', item);
                        feat.set('updated', true);

                        feat.set('style', _ta.harita.style.get('updated')['updated']);
                        feat.set('styleSelected', _ta.harita.style.get('updatedHover')['updatedHover']);
                        feat.set('styleHover', _ta.harita.style.get('updatedHover')['updatedHover']);

                        panel.content.find('[data-target="updated"]').removeClass('hide');
                        panel.content.find('#TaskInsert').addClass('hide');

                        setTimeout(function () {
                            $('[data-tool="Select"]').trigger('click');
                        }, 200);

                    } else if (evnt.event == 'Select' && evnt.features.getArray().length == 1) {

                        var feat = evnt.features.getArray()[0];
                        var item = feat.get('item');
                        var temp = $(
                            $('#TaskAreaTemplate').html()
								.replace(/{{location}}/g, item.location)
								.replace(/{{companyId}}/g, item.companyId)
                                .replace(/{{created}}/g, (item.created != undefined ?
                                    kendo.toString(new Date(Date.parse(item.created)), "dd.MM.yyyy HH:mm") :
                                    kendo.toString(new Date(), "dd.MM.yyyy HH:mm")))
                                .replace(/{{id}}/g, item.id)
                                .replace(/{{hide}}/g, feat.get('updated') == true ? '' : 'hide')

                                .replace(/{{code}}/g, item.code ?? '')
                                .replace(/{{name}}/g, item.name ?? '')
                        //        .replace(/{{description}}/g, item.description ?? '')
                        );

                        if (feat.get('updated') == true) {
                            panel.content.find('[data-target="inserted"]').addClass('hide');
                            temp.find('#TaskInsert').addClass('hide');
                        }

						temp.find('[name="name"], [name="description"], [name="location"]')
                            .on('change', function () {

                                feat.set('style', _ta.harita.style.get('updated')['updated']);
                                feat.set('styleSelected', _ta.harita.style.get('updatedHover')['updatedHover']);
                                feat.set('styleHover', _ta.harita.style.get('updatedHover')['updatedHover']);

                                item.name = temp.find('[name="name"]').val();
                                item.description = temp.find('[name="description"]').val();
								item.location = feat.getSQL();

                                feat.set('updated', true);
                                feat.set('item', item);

                                temp.find('[data-target="updated"]').removeClass('hide');
                                panel.content.find('#TaskInsert').addClass('hide');

                                var v = $('#form').data('bs.validator');
                                v.validate();

                            });

                        temp.find('#TaskInsert').on('click', function () {
							Kendo_GetRequest("/FTM/VWFTM_Task/Insert?customerStorageId=" + item.id +"&customerId="+item.companyId, null, $('<button data-task="Insert"></button>'))
                        });


                        if (item.eGuid == undefined) {
                            temp.find('[data-key="globalId"]').hide();
                        }
                        if (item.globalId == undefined) {
                            temp.find('[data-key="eGuid"]').hide();
                        }
                        if (item.gis_ID == undefined) {
                            temp.find('[data-key="gis_ID"]').hide();
                        }

                        panel.content
                            .html(null)
                            .html(temp);

                        if (!_ta.harita.panel.get('AreaOptions')['AreaOptions'].button.hasClass('active')) {
                            _ta.harita.panel.get('AreaOptions')['AreaOptions'].button.trigger('click');
                        }

                        //  console.log(item);
                        if (item.companyId == undefined) {
                            ReadData('/General/GetIdCode', null, function (_code) {

                                temp.find('[name="code"]').val(_code);

                            })
                        } else {
                            $('#TaskDetail').removeClass('hide');
                            var panel = _ta.harita.panel.get('AreaOptions')['AreaOptions'];
                            panel.content.find('#TaskDetail').attr("href", "/CMP/VWCMP_Storage/Detail?id=" +item.id)
                        }
                    } else if (evnt.event == 'UnSelect') {

                        panel.content
                            .html($('#TaskAreaEmpty').html());

                    } else if (evnt.event == 'Modify') {

                        var feat = evnt.features.getArray()[0];
                        var item = feat.get('item');

                        panel.content
							.find('[name="location"]')
                            .val(feat.getSQL())
                            .trigger('change');

                    }

                }
            );

            _ta.LoadTaskAreas();

        },
        LoadOptions: function () {



        },
        LoadTaskAreas: function () {
            var areas_panel = _ta.harita.panel.get('TaskAreaList')['TaskAreaList'];
            areas_panel.content.find('ul').html(null);

            $.each(_ta.harita.feature.get(null, 'TaskArea'), function (f, feat) {
                _ta.harita.feature.remove('TaskArea', feat.getId())
            });

			ReadData("/CMP/VWCMP_Storage/DataSourceDropdown?filter=companyId_Code~eq~'@Model.code'",null, function (res) {
                $.each(res, function (i, item) {
                    var feat = _ta.harita.feature.add('TaskArea', item.id, item.location);
                    if (feat != undefined) {

                        feat.set('item', item);
						//feat.set('label', item.name)

						$('<li data-id="' + item.id + '" >' + '<div><span>' + item.fullName + '</span></div>' + '</li>')
                            .on('click', function (e) {
                                _ta.harita.feature.panTo(item.id);
                                var interact = _ta.harita.interaction.get('Select')['Select'];

                                interact.getFeatures().push(feat);
                                $('[data-tool="Select"]').trigger('click');

                            })
                         .appendTo(areas_panel.content.find('ul'));
                    }
					_ta.harita.feature.panTo(item.id);

                });
                console.log(res);
            });
        }
    };

    $(document)

        .on('ready', function () {

            _ta.init();


        })
        .on('before:submit', '#form', function () {

            //  _ta.harita.drawing.properties.selectedFeatures.getArray()[0].get('item');

        })
        .on('success', '#form', function (e, retrn) {
            
            var panel = _ta.harita.panel.get('AreaOptions')['AreaOptions'];
            var idInput = panel.content.find('[name="id"]');

            if (idInput == undefined) {
                return;
            }

            var id = idInput.val();
            var feat = _ta.harita.feature.get(id)[id];
            feat.set('updated', false);
            panel.content.find('#TaskInsert').removeClass('hide');
            panel.content.find('#TaskDetail').removeClass('hide');
            panel.content.find('#TaskDetail').attr("href","/CMP/VWCMP_Storage/Detail?id="+id)
            panel.content.find('[data-target="updated"]').addClass('hide');
            feat.set('style', null);
            feat.set('styleSelected', null);
            feat.set('styleHover', null);

            if (retrn.Result == true) {
                _ta.LoadTaskAreas();
            }

        })
        .on('click', '[data-task="delete"]', function () {

            var panel = _ta.harita.panel.get('AreaOptions')['AreaOptions'];
            var idInput = panel.content.find('[name="id"]');

            if (idInput == undefined) {
                return;
            }

        })
        .on('click', '#TaskInsert', function () {


        })

        ;
</script>
