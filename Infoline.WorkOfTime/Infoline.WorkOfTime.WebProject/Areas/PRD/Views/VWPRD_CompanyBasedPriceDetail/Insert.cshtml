@model Infoline.WorkOfTime.BusinessData.VWPRD_CompanyBasedPriceDetail
@{
    ViewBag.Title = "Özel Fiyat Belirleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .bg-focus {
        background-color: #1ab394 !important;
    }
</style>
<script data-selector="modalContainer">
    var page = {
        defines: {
            isAllCompanies: 1,
            productTarget: 2
        },
        functions: {
            changeForAllCompanies: function (i) {
                if (i == 1 && page.defines.isAllCompanies != 1) {
                    $("#companyId").data("kendoDropDownList").value("");
                    $("#companyId").data("kendoDropDownList").readonly()
                    page.defines.isAllCompanies = 1;
                    $("#companyDropDown").find(".k-input").text("Tüm Şirketlere Uygula");
                    $("#companyDropDown").find(".k-dropdown-wrap").attr("style", "background-color:#ececec !important;");
                } else if (i == 0 && page.defines.isAllCompanies != 0) {
                    $("#companyId").data("kendoDropDownList")?.readonly(false);
                    page.defines.isAllCompanies = 0;
                    $("#companyDropDown").find(".k-input").text("Lütfen Şirket Seçiniz");
                    $("#companyDropDown").find(".k-dropdown-wrap").removeAttr("style");

                }
            },
            changeProductTarget: function (i) {
                debugger;
                if (i == 2 && page.defines.productTarget != 2) {
                    $("#productId").data("kendoDropDownList").value("");
                    $("#categoryId").data("kendoDropDownList").value("");
                    $("#productId").data("kendoDropDownList").readonly()
                    $("#productDropDown").find(".k-input").text("Tüm Ürünlere Uygula");
                    $("#productDropDown").find(".k-dropdown-wrap").attr("style", "background-color:#ececec !important;");
                    $("#productDropDown").removeAttr("style");
                    $("#categoryDropDown").attr("style", "display:none;");
                    $("#productId").data("kendoDropDownList").readonly();
                    page.defines.productTarget = 2;
                } else if (i == 1 && page.defines.productTarget != 1) {
                    $("#productId").data("kendoDropDownList").value("");
                    $("#categoryDropDown").removeAttr("style");
                    $("#productDropDown").attr("style", "display:none;");
                    page.defines.productTarget = 1;
                } else if (i == 0 && page.defines.productTarget != 0) {
                    $("#productId").data("kendoDropDownList").value("");
                    $("#categoryId").data("kendoDropDownList").value("");
                    $("#productDropDown").find(".k-input").text("Seçili Ürünlere Uygula");
                    $("#productDropDown").find(".k-dropdown-wrap").removeAttr("style");
                    $("#productDropDown").removeAttr("style");
                    $("#categoryDropDown").attr("style", "display:none;");
                    $("#productId").data("kendoDropDownList").readonly(false);
                    page.defines.productTarget = 0;
                }
            },
            setCompanyDropDownTitle: function (e) {
                $("#companyDropDown").find(".k-input").text("Tüm Şirketlere Uygula");
                $("#companyDropDown").find(".k-dropdown-wrap").attr("style", "background-color:#ececec !important;");
            },
            setProductDropDownTitle: function (e) {
                $("#productDropDown").find(".k-input").text("Tüm Ürünlere Uygula");
                $("#productDropDown").find(".k-dropdown-wrap").attr("style", "background-color:#ececec !important;");
            },
            setSellingTypeCheckbox: function () {
                $(document).on("change", "[name='sellingType']", function () {
                    let value = $("[name='sellingType']:checked").val();
                    if (value == 0 || value == 1) {
                        $("#month").hide();
                    }
                    else {
                        if (value == 2) {
                            $("#vadeay").text("Taksit Sayısı")
                            $("#monthCount").attr("placeholder", "Lütfen taksit sayısını giriniz");
                        }
                        if (value == 3) {
                            $("#vadeay").text("Vade Sayısı")
                            $("#monthCount").attr("placeholder", "Lütfen vade sayısını giriniz");
                        }
                        $("#month").show();
                    }
                });
            },
            setconditionTypeCheckbox: function () {
                $(document).on("change", "[name='conditionType']", function () {
                    let value = $("[name='conditionType']:checked").val();
                    if (value == 0) {
                        $("#minConditionDiv").hide();

                    }
                    else {
                        $("#minConditionDiv").show();
                        if (value == 1) {
                            $("#minCondition").attr("placeholder", "Lütfen minimum satış fiyatını sayısını giriniz");
                            $("#minConLabel").text("Minimum Satış Miktarı")
                        }
                        if (value == 2) {
                            $("#minCondition").attr("placeholder", "Lütfen minimum adet sayısını giriniz");
                            $("#minConLabel").text("Minimum Adet Sayısı")
                        }


                    }
                });
            }
        }
    }

    page.functions.setSellingTypeCheckbox();
    page.functions.setconditionTypeCheckbox();





</script>


@using (Html.BeginForm("Insert", "VWPRD_CompanyBasedPriceDetail", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.companyBasedPriceId)


    <div class="form-group">
        <div class="col-md-5">
            <div class="radio akilliRadioGrup clearfix">
                <input type="radio" class="bg-focus" name="isForAllCompany" id="all_company_check_1" checked value="1">
                <label tabindex="0" onClick="page.functions.changeForAllCompanies(1)" class="radio-label bg-focus" for="all_company_check_1">
                    Tüm Şirketlere
                </label>
                <input type="radio" name="isForAllCompany" id="all_company_check_0" value="0">
                <label tabindex="0" onClick="page.functions.changeForAllCompanies(0)" class="radio-label" for="all_company_check_0">
                    Seçili Şirkete
                </label>
            </div>
        </div>
        <div class="col-md-7" id="companyDropDown">
            @(Html.Akilli()
                .DropDownListFor(model => model.companyId)
                .OptionLabel("Lütfen Şirket Seçiniz..")
                .DataTextField("name")
                .DataValueField("id")
                .Action(b => b.Action("DataSourceDropDown", "VWCMP_Company", new { area = "CMP" }))
                .Sort(x => x.Add("name").Ascending())
                .Readonly(true)
                .Events(x => x.DataBound("page.functions.setCompanyDropDownTitle"))
                .Execute()
                )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-5">
            <div class="radio akilliRadioGrup clearfix">
                <input type="radio" class="bg-focus" name="target" id="all_products" checked value="2">
                <label tabindex="0" onClick="page.functions.changeProductTarget(2)" class="radio-label bg-focus" for="all_products">
                    Tüm Ürünlere
                </label>
                <input type="radio" name="target" id="all_categories" value="1">
                <label tabindex="0" onClick="page.functions.changeProductTarget(1)" class="radio-label" for="all_categories">
                    Seçili Kategoriye
                </label>
                <input type="radio" name="target" id="spesific_product" value="0">
                <label tabindex="0" onClick="page.functions.changeProductTarget(0)" class="radio-label" for="spesific_product">
                    Seçili Ürüne
                </label>
            </div>
        </div>

        <div class="col-md-7" id="productDropDown">
            @(
            Html.Akilli()
            .DropDownListFor(model => model.productId)
            .OptionLabel("Lütfen Ürün seçiniz..")
            .DataTextField("fullName")
            .DataValueField("id")
            .Template("#=TemplateEngine('productTemplate',data)#")
            .Action(b => b.Action("DataSourceDropDown", "VWPRD_Product", new { area = "PRD" }))
            .Sort(x => x.Add("code").Ascending())
            .Events(x => x.DataBound("page.functions.setProductDropDownTitle"))
            .Execute()
            )
        </div>

        <div class="col-md-7" id="categoryDropDown" style="display:none;">
            @(
            Html.Akilli()
            .DropDownListFor(model => model.categoryId)
            .OptionLabel("Lütfen Kategori seçiniz..")
            .DataTextField("fullname")
            .DataValueField("id")
            .Action(b => b.Action("DataSourceDropDown", "VWPRD_Category", new { area = "PRD" }))
            .Sort(x => x.Add("fullname").Ascending())
            .BasicInsert(Url.Action("Insert", "VWPRD_Category", new { area = "PRD" }), "name", true)
            .Execute("id")
        )
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-12">
            <div class="">
                @(Html.Akilli().RadioButtonGroupFor(a => a.sellingType).Value(EnumPRD_CompanyBasedPriceSellingType.Genel))

            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-12">
            <div class="">
                @(Html.Akilli().RadioButtonGroupFor(a => a.conditionType).Value(EnumPRD_CompanyBasedPriceConditionType.Genel))
            </div>
        </div>
    </div>

    <div class="form-group" id="minConditionDiv" style="display:none">
        <div class="col-md-4">
            <label class="control-label label-md" id="minConLabel" for="minCondition">Minimum Koşul</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.minCondition, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen minCondition Girin.."},
            })
        </div>
    </div>
   


    <div class="form-group">
        <div class="col-sm-12">
            <div id="example">
                <div id="grid"></div>

                <script>
            $(document).ready(function () {
                var crudServiceBaseUrl = "https://demos.telerik.com/kendo-ui/service",
                    dataSource = new kendo.data.DataSource({
                        transport: {
                            read: {
                                url: crudServiceBaseUrl + "/Products?id=@Model.id",
                                dataType: "jsonp"
                            },
                            update: {
                                url: crudServiceBaseUrl + "/Products/Update",
                                dataType: "jsonp"
                            },
                            destroy: {
                                url: crudServiceBaseUrl + "/Products/Destroy",
                                dataType: "jsonp"
                            },
                            create: {
                                url: crudServiceBaseUrl + "/Products/Create",
                                dataType: "jsonp"
                            },
                            parameterMap: function (options, operation) {
                                if (operation !== "read" && options.models) {
                                    return { models: kendo.stringify(options.models) };
                                }
                            }
                        },
                        batch: true,
                        pageSize: 20,
                        schema: {
                            model: {
                                id: "ProductID",
                                fields: {
                                    ProductID: { editable: false, nullable: true },
                                    ProductName: { validation: { required: true } },
                                    UnitPrice: { type: "number", validation: { required: true, min: 1 } },
                                    Discontinued: { type: "boolean" },
                                    UnitsInStock: { type: "number", validation: { min: 0, required: true } }
                                }
                            }
                        }
                    });

                $("#grid").kendoGrid({
                    dataSource: dataSource,
                    pageable: true,
                    height: 400,
                    toolbar: ["create"],
                    columns: [
                        "ProductName",
                        { field: "UnitPrice", title: "Unit Price", format: "{0:c}", width: "120px" },
                        { field: "UnitsInStock", title: "Units In Stock", width: "120px" },
                        { field: "Discontinued", width: "120px", editor: customBoolEditor },
                        { command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }],
                    editable: "inline"
                });
            });

            function customBoolEditor(container, options) {
                $('<input class="k-checkbox" type="checkbox" name="Discontinued" data-type="boolean" data-bind="checked:Discontinued">').appendTo(container);
            }
        </script>


            </div>
        </div>
</div>

        <div class="buttons">
            <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
            <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
        </div>

        }
