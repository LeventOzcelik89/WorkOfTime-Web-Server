@model Infoline.WorkOfTime.BusinessData.VWPRD_CompanyBasedPriceDetail
@{
    ViewBag.Title = "Kayıt Güncelleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Update", "VWPRD_CompanyBasedPriceDetail", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.companyBasedPriceId)



    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="startDate">Başlangıç Tarihi</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().DatePickerFor(model => model.startDate).HtmlAttributes(new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen startDate Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="endDate">Bitiş Tarihi</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().DatePickerFor(model => model.endDate).HtmlAttributes(new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen endDate Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="minCondition">minCondition</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.minCondition, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen minCondition Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>




    @if()
    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="discount">discount</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.discount, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen discount Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="monthCount">monthCount</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.monthCount, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen monthCount Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>





    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="createdby_Title">createdby_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.createdby_Title, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen createdby_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="changedby_Title">changedby_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.changedby_Title, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen changedby_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="productId">productId</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().DropDownListFor(model => model.productId).HtmlAttributes(new Dictionary<string, object>()
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen productId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="categoryId">categoryId</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().DropDownListFor(model => model.categoryId).HtmlAttributes(new Dictionary<string, object>()
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen categoryId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
