@model Infoline.WorkOfTime.BusinessAccess.VMPRD_ProductBountyModel
@{
	ViewBag.Title = "Ürüne Prim Tanımla";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" data-selector="modalContainer">

	function onChangeCompany(e) {
		var companyId = this.value();
		var personElem = $('#personIds').data("kendoMultiSelect");
		var basefilter = personElem.options.dataSource.filter;
		personElem.dataSource.filter(kendo.filterAdd(basefilter, 'CompanyId', companyId, "eq"));
	}
</script>

@using (Html.BeginForm("Insert", "VWPRD_ProductBounty", FormMethod.Post, new Dictionary<string, object>() {
	{ "class", "form-horizontal" },
	{ "role", "form" },
	{ "data-selector", "modalContainer" },
	{ "data-formType", "Ajax" }
}))
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.id)


	if (Model.productId.HasValue)
	{
		@Html.HiddenFor(model => model.productId)
	}
	else
	{
		<div class="form-group">
			<div class="col-md-4">
				<label class="control-label label-md req" for="productId">Ürün</label>
			</div>
			<div class="col-md-8">
				@(
                  Html.Akilli()
                  .DropDownListFor(model => model.productId)
                  .OptionLabel("Lütfen Ürün seçiniz..")
                  .DataTextField("name")
                  .DataValueField("id")
                  .Action(b => b.Action("DataSourceDropDown", "VWPRD_Product", new { area = "PRD" }))
                  .Template("#=TemplateEngine('productTemplate',data)#")
                  .Sort(x => x.Add("name").Ascending())
                  .Validate(Validations.Required)
                  .Execute()
                )
			</div>
		</div>
	}


	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md req" for="companyId">Firma Cari</label>
		</div>
		<div class="col-md-8">
			@(
		Html.Akilli()
		.DropDownListFor(model => model.companyId)
		.OptionLabel("Lütfen Firma Cari seçiniz..")
		.DataValueField("id")
		.DataTextField("fullName")
		.Template("#=TemplateEngine('companyTemplate',data)#")
		.Action(b => b.Action("DataSourceDropDown", "VWCMP_Company", new { area = "CMP" }))
		.Events(e => { e.Change("onChangeCompany"); })
		.Sort(x => x.Add("fullName").Ascending())
		.Validate(Validations.Required)
		.Execute()
            )
		</div>
	</div>
	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md req" for="personIds">Personeller</label>
		</div>
		<div class="col-md-8">
			@(
		Html.Akilli()
		.MultiSelectFor(a => a.personIds)
		.Placeholder("Lütfen pesonel(leri) seçiniz..")
		.DataValueField("id")
		.DataTextField("FullName")
		.ItemTemplate("#=TemplateEngine('userTemplate',data)#")
		.Action(b => b.Action("DataSourceDropDown", "VWSH_User", new { area = "SH" }))
		.Filter<VWSH_User>(a => a.IsWorking == true)
		.Sort(x => x.Add("FullName").Ascending())
		.Validate(Validations.Required)
		.Execute()
            )
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md req" for="quantity">Tutar</label>
		</div>
		<div class="col-md-8">
			<div class="input-group">
				@(
                    Html.Akilli()
                    .NumericTextBoxFor(a => a.amount)
                    .Min(0)
                    .Format("N2").Validate(Validations.Required)
                )
				<span class="input-group-addon" id="quantityTxt">₺</span>
			</div>
		</div>
	</div>

	<div class="buttons">
		<button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
		<button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
	</div>

}
