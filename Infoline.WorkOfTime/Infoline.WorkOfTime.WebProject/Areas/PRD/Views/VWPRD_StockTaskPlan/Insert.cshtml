@model Infoline.WorkOfTime.BusinessData.VWPRD_StockTaskPlan
@{
    ViewBag.Title = "Abone Ekle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Insert", "VWPRD_StockTaskPlan", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="code">Abone Numarası</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.code, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen abone numarası girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="code">İşletme</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
                                    .DropDownList("companyId")
                                    .OptionLabel("Lütfen İşletme Seçiniz..")
                                    .DataTextField("name")
                                    .DataValueField("id")
                                    .Action(b => b.Action("DataSourceDropDown", "VWCMP_Company", new { area = "CMP" }))
                                    .Sort(x => x.Add("name").Ascending())
                                    .Execute("id")
                                    .BasicInsert(Url.Action("Insert", "VWCMP_Company", new { area = "CMP", type = (int)EnumCMP_CompanyType.Diger }), "name", false)
                                    .Template("#=TemplateEngine('companyTemplate',data)#")
                                    .ValueTemplate("<span>#=name#</span>")
                                    .Validate(Validations.Required)
                        )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="code">Abone Adı Soyadı</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
                        .DropDownListFor(model => model.storageId)
                        .OptionLabel("Lütfen Şube/Depo Seçiniz..")
                        .DataTextField("name")
                        .DataValueField("id")
                        .CascadeFrom("companyId")
                        .CascadeFromField("companyId")
                        .Template("#=TemplateEngine('storageTemplate',data)#")
                        .Action(b => b.Action("DataSourceDropDown", "VWCMP_Storage", new { area = "CMP" }))
                        .BasicInsert(Url.Action("Insert", "VWCMP_Storage", new { area = "CMP" }), "name", true)
                        .Execute()
                        .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="code">Cihaz</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
                                    .DropDownList("productId")
                                    .OptionLabel("Lütfen Cihaz/Ürün seçiniz..")
                                    .DataTextField("name")
                                    .DataValueField("id")
                                    .Template("#=TemplateEngine('productTemplate',data)#")
                                    .Action(b => b.Action("DataSourceDropDown", "VWPRD_Product", new { area = "PRD" }))
                                    .BasicInsert(Url.Action("Insert", "VWPRD_Product", new { area = "PRD" }), "name", true)
                                    .Execute("id")
                        )
        </div>
    </div>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
