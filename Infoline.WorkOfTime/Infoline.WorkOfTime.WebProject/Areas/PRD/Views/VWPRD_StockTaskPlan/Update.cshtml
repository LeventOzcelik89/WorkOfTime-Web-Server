@model Infoline.WorkOfTime.BusinessData.VWPRD_StockTaskPlan
@{
    ViewBag.Title = "Kayıt Güncelleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using(Html.BeginForm("Update", "VWPRD_StockTaskPlan", FormMethod.Post, new Dictionary<string, object>() {  
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="inventoryId">inventoryId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.inventoryId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen inventoryId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="taskId">taskId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.taskId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen taskId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="status">status</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.status, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen status Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="storageId">storageId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.storageId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen storageId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="createdby_Title">createdby_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.createdby_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen createdby_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="changedby_Title">changedby_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.changedby_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen changedby_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="status_Title">status_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.status_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen status_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="storageId_Title">storageId_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.storageId_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen storageId_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="storageCode">storageCode</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.storageCode, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen storageCode Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="storageAddress">storageAddress</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.storageAddress, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen storageAddress Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="serialNumber">serialNumber</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.serialNumber, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen serialNumber Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="product_Title">product_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.product_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen product_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="lastOperationStatus_Title">lastOperationStatus_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.lastOperationStatus_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen lastOperationStatus_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
