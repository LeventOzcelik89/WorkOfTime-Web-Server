@model Infoline.WorkOfTime.BusinessAccess.VMPRD_ProductModel
@{
    ViewBag.Title = "Ürün&Hizmet Detayı";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .list-group.clear-list .list-group-item {
        padding: 5px 0px !important;
    }

    .table {
        border-top: 0px #ddd solid;
    }
</style>

<script type="text/javascript">
     function FilterMenuInventoryLastStatus(element) {
        element.kendoDropDownList({
            dataTextField: "Name",
			dataValueField: "Name",
			filter: "contains",
			dataSource: {
				transport: {
					read: "@Url.Action("FilterMenuInventoryLastStatus", "General",  new { area = string.Empty })"
				}
			},
			optionLabel: "Durum Seçiniz"

        })
    }
</script>

<script type="text/x-kendo-template" id="inventoryTemplate" data-selector="modalContainer">
     #var types = @Html.Raw(Infoline.Helper.Json.Serialize(Infoline.Helper.EnumsProperties.EnumToArrayGeneric<Infoline.WorkOfTime.BusinessAccess.EnumPRD_InventoryActionType>()))#

    <div class="chat-element">
        <a class="pull-left">
            <img alt="image" style="height:80px;width:80px;" class="img-circle" src="#:(productId_Image ? productId_Image : '/Content/Custom/img/urun-bulunamadi.png')#" onerror="ImageError(this, '/Content/Custom/img/urun-bulunamadi.png' )">
        </a>
        <div class="media-body">
            <strong class="pull-right text-right">
            </strong>
            <strong><i class="fa fa-qrcode text-success" data-toggle="tooltip" title="Seri Numarası ve Kodu"></i> #:fullName#</strong>
            <p class="m-b-none"><i class="fa fa-info-circle text-success" data-toggle="tooltip" title="Ürün"></i> #:(productId_Title != null ? productId_Title : "-")#</p>
            <p class="m-b-none"><i class="icon-warehouse text-success" data-toggle="tooltip" title="Şu anki Konumu"></i> #=(lastActionType_Title ? lastActionType_Title + ' |' : '-')# #=(lastActionDataCompanyId_Title ? lastActionDataCompanyId_Title : '-')# #=(lastActionDataId_Title ? ' - '+lastActionDataId_Title : '-')#</p>
        </div>
    </div>
</script>

<div class="row">
    <div class="col-lg-3">
        <div class="ibox ">
            <div class="p-md text-center mypageBg" style="background:url('/Content/Custom/img/MyPageBackground.png');color: #ffffff;padding-bottom:10px !important;">
                <div class="m-b-md">
                    <h2 class="font-bold no-margins">
                        @Model.name
                    </h2>
                    <small> <i class="icon-barcode-1"></i> @Model.code <i class="icon-barcode-1"></i></small>
                </div>
                <img src="@(Model.logo  != null ? Model.logo : "/Content/Custom/img/urun-bulunamadi.png")" alt="image" class="img-circle m-t-xs img-responsive" style="height: 100px;width:100px;margin: auto;margin-top: 25px;border: 2px #fff solid;" onerror="ImageError(this, '/Content/Custom/img/urun-bulunamadi.png')">

                <div style="margin-top: 15px;">
                    <a class="btn btn-xs btn-info" data-task="Insert" data-method="GET" data-href="@Url.Action("Update", "VWPRD_Product", new { area = "PRD", id = Model.id  })">  <i class="fa fa-edit"></i> Ürün Düzenle </a>
                </div>
            </div>
            <div class="widget-text-box" style="padding:0px !important;">

                <ul class="list-group">
                    @if (!string.IsNullOrEmpty(Model.barcode))
                    {
                        try
                        {
                            <li class="list-group-item">
                                @Html.Kendo().Barcode().Name("barcode").Value(Model.barcode).Height(100)
                            </li>
                        }
                        catch
                        {

                        }
                    }


                    <li class="list-group-item">
                        <span class="badge badge-white">@Html.Raw(Model.code != null ? Model.code : "-")</span>
                        Kodu :
                    </li>

                    <li class="list-group-item">
                        <span class="badge badge-white">@Html.Raw(Model.name != null ? Model.name : "-")</span>
                        Adı :
                    </li>

                    <li class="list-group-item">
                        <span class="badge badge-white">@Html.Raw(Model.unitId_Title)</span>
                        Birimi :
                    </li>

                    <li class="list-group-item">
                        <span class="badge badge-white">@Html.Raw(Model.type_Title)</span>
                        Stok Türü :
                    </li>

                    <li class="list-group-item">
                        <span class="badge badge-white">@Html.Raw(Model.stockType_Title)</span>
                        Stok Takip Tipi :
                    </li>

                    @if (Model.stockType != (short)EnumPRD_ProductStockType.Stoksuz)
                    {
                        <li class="list-group-item">
                            <span class="badge badge-white">@Html.Raw(Model.isCriticalStock_Title)</span>
                            Kritik Stok :
                        </li>

                        if (Model.isCriticalStock == true)
                        {
                            <li class="list-group-item">
                                <span class="badge badge-white">@Html.Raw(string.Format("{0:N0}", Model.criticalStock))</span>
                                Kritik Stok Miktarı :
                            </li>
                        }
                    }

                    <li class="list-group-item">
                        @if (Model.currentBuyingPrice != null)
                        {
                            <a data-task="Insert" data-method="GET" data-href="@Url.Action("Index", "VWPRD_ProductPrice", new { area = "PRD", productId = Model.id,type=(int)EnumPRD_ProductPriceType.Alis  })" class="pull-right" data-original-title="Geçmiş"><i class="fa fa-history"></i></a>
                            <span class="badge badge-white">@Html.Raw(string.Format("{0:N2} {1}", Model.currentBuyingPrice, Model.currentBuyingCurrencyId_Title))</span>
                        }
                        else
                        {
                            <span class="badge badge-white">-</span>
                        }
                        Birim Maliyet (Vergiler Hariç) :
                    </li>

                    <li class="list-group-item">
                        @if (Model.currentSellingPrice != null)
                        {
                            <a data-task="Insert" data-method="GET" data-href="@Url.Action("Index", "VWPRD_ProductPrice", new { area = "PRD", productId = Model.id,type=(int)EnumPRD_ProductPriceType.Satis  })" class="pull-right" data-original-title="Geçmiş"><i class="fa fa-history"></i></a>
                            <span class="badge badge-white">@Html.Raw(string.Format("{0:N2} {1}", Model.currentSellingPrice, Model.currentSellingCurrencyId_Title))</span>
                        }
                        else
                        {
                            <span class="badge badge-white">-</span>
                        }
                        Birim Fiyat(Vergiler Hariç) :
                    </li>

                    <li class="list-group-item">
                        @if (Model.currentSellingPoint != null)
                        {
                            <a href="#" class="pull-right" data-original-title="Geçmiş"><i class="fa fa-history"></i></a>
                            <span class="badge badge-white">@Html.Raw(string.Format("{0:N1}", Model.currentSellingPoint))</span>
                        }
                        else
                        {
                            <span class="badge badge-white">-</span>
                        }
                        Güncel Satış Puanı:
                    </li>

                    <li class="list-group-item">
                        <span class="badge badge-white">@Html.Raw(Model.brandId_Title != null ? Model.brandId_Title : "-")</span>
                        Marka :
                    </li>

                    <li class="list-group-item">
                        <span class="badge badge-white">@Html.Raw(Model.categoryId_Title != null ? Model.categoryId_Title : "-")</span>
                        Kategori :
                    </li>

                    <li class="list-group-item">
                        Açıklama :
                    </li>

                    @if (Model.description != null)
                    {
                        <li class="list-group-item">
                            @Html.Raw(Model.description)
                        </li>
                    }

                </ul>
            </div>
        </div>
        @Html.Action("Detail", "VWSYS_TableAdditionalProperty", new { area = "SYS", dataId = Model.id, dataTable = "PRD_Product" })
        

        <div class="ibox collapsed">
            <div class="ibox-title">
                <h5>QR Kod</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content clearfix">
                <div class="qrCodeWrapper" style="width:170px;">
                    @(  Html.Kendo().QRCode()
                             .Name("QRCode")
                             .Value(Model.code)
                             .Size(160)
                        )
                    <span data-error-correction="M" data-bind="value: qrcode" style="height: 100px;"></span>
                    <div style="text-align:center;">
                        <a href="#" class="btn btn-danger btn-xs" data-target="QRCode" data-print="qrcode" data-original-title="QR Kod Yazdır"><i class="fa fa-print" aria-hidden="true"></i> Yazdır</a>
                        <a href="#" data-export="qr-code-png" download="qr-code.png" data-target="QRCode" class="btn btn-success btn-xs" data-original-title="QR Kod İndir"><i class="fa fa-download"></i> İndir</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-9">
        <div class="row">
            <div class="colmd3Cards col-xs-12 col-sm-12 col-md-4">
                <div class="widget style1 yellow-bg">
                    <div class="row">
                        <div class="col-xs-2 hidden-md wHeader">
                            <i class="icon-home-4 fa-4x"></i>
                        </div>
                        <div class="col-xs-10 text-right wInformation">
                            <span>Depolardaki Stok</span>
                            <h2><span>@string.Format("{0:n2}", Model.stockStorage) @Model.unitId_Title</span></h2>
                        </div>
                    </div>
                </div>
            </div>
            <div class="colmd3Cards col-xs-12 col-sm-12 col-md-4">
                <div class="widget style1 lazur-bg">
                    <div class="row">
                        <div class="col-xs-2 hidden-md wHeader">
                            <i class="icon-adult fa-4x"></i>
                        </div>
                        <div class="col-xs-10 text-right wInformation">
                            <span>Personellerdeki Stok</span>
                            <h2><span>@string.Format("{0:n2}", Model.stockPerson) @Model.unitId_Title</span></h2>
                        </div>
                    </div>
                </div>
            </div>
            <div class="colmd3Cards col-xs-12 col-sm-12 col-md-4">
                <div id="Card_e2a97d72" class="widget style1 blue-bg">
                    <div class="row">
                        <div class="col-xs-2 hidden-md wHeader">
                            <i class="icon-cubes fa-4x"></i>
                        </div>
                        <div class="col-xs-10 text-right wInformation">
                            <span>Toplam Stok</span>
                            <h2><span>@string.Format("{0:n2}", Model.stockTotal)  @Model.unitId_Title</span></h2>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <section style="margin-bottom: 20px;">
            <div class="tabs-container">
				<ul class="nav nav-tabs">


					@if (Model.stockType == (short)EnumPRD_ProductStockType.SeriNoluTakip)
					{
						<li class="active" data-href="@Url.Action("DataSource", "VWPRD_Inventory", new { area = "PRD" })" data-toggle="tooltip" data-placement="top" title="Envanter Listesi">
							<a data-toggle="tab" href="#VWPRD_Inventories" aria-expanded="false"><i class="icon-buffer text-success fa-2x" aria-hidden="true"></i></a>
						</li>
					}


					<li class="@(Model.stockType == (short)EnumPRD_ProductStockType.SeriNoluTakip ? "" : "active")" data-href="@Url.Action("DataSource", "VWPRD_StockSummary", new { area = "PRD" })" data-toggle="tooltip" data-placement="top" title="Şube/Depo Stok Özeti">
						<a data-toggle="tab" href="#VWPRD_StockSummaryStorages" aria-expanded="false"><i class="icon-home-4 text-success fa-2x" aria-hidden="true"></i></a>
					</li>

					<li data-href="@Url.Action("DataSource", "VWPRD_StockSummary", new { area = "PRD" })" data-toggle="tooltip" data-placement="top" title="Personel Stok Özeti">
						<a data-toggle="tab" href="#VWPRD_StockSummaryPersons" aria-expanded="false"><i class="icon-adult text-success fa-2x" aria-hidden="true"></i></a>
					</li>

					<li data-href="@Url.Action("DataSource", "VWPRD_StockAction", new { area = "PRD" })" data-toggle="tooltip" data-placement="top" title="Stok Hareketleri">
						<a data-toggle="tab" href="#VWPRD_StockActions" aria-expanded="false"><i class="icon-exchange-1 text-success fa-2x" aria-hidden="true"></i></a>
					</li>

					<li class="pull-right" data-href="@Url.Action("DataSource", "VWPRD_ProductBounty", new { area = "PRD" })" data-toggle="tooltip" data-placement="top" title="Prim">
						<a data-toggle="tab" href="#VWPRD_ProductBounties" aria-expanded="false"><i class="icon-star-empty text-success fa-2x" aria-hidden="true"></i></a>
					</li>
					<li class="pull-right" data-href="@Url.Action("DataSource", "VWPRD_ProductPointSelling", new { area = "PRD" })" data-toggle="tooltip" data-placement="top" title="Satış Puanı Geçmişi">
						<a data-toggle="tab" href="#VWPRD_ProductPointSellings" aria-expanded="false"><i class="icon-star-empty text-success fa-2x" aria-hidden="true"></i></a>
					</li>
					<li class="pull-right" data-href="@Url.Action("DataSource","VWPRD_ProductMateriel", new { area = "CMP" })" data-toggle="tooltip" data-placement="top" title="Ürün Ağacı">
						<a data-toggle="tab" href="#VWPRD_ProductMateriels" aria-expanded="false"><i class="icon-flow-tree text-success fa-2x" aria-hidden="true"></i></a>
					</li>

					<li class="pull-right" data-toggle="tooltip" data-placement="top" title="Ürün Dosyaları">
						<a data-toggle="tab" href="#VWPRD_ProductFiles" aria-expanded="false"><i class="icon-attach text-success fa-2x" aria-hidden="true"></i></a>
					</li>

				</ul>
				<div class="tab-content">

					@if (Model.stockType == (short)EnumPRD_ProductStockType.SeriNoluTakip)
					{
						<div class="tab-pane active" data-href="@Url.Action("DataSource", "VWPRD_Inventory", new { area = "PRD" })" id="VWPRD_Inventories">
							<h4><i class="icon-buffer text-success"></i> ENVANTER LİSTESİ </h4>
							@(Html.Akilli()
                             .Grid<Infoline.WorkOfTime.BusinessData.VWPRD_Inventory>("VWPRD_Inventory")
                             .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWPRD_Inventory", new { area = "PRD" })).Filter(a => a.productId == Model.id).PageSize(25))
                             .Scrollable(a => a.Height(485))
                             .Columns(x =>
                             {
                                 x.Bound(y => y.id).Title("Envanter Bilgileri").HeaderHtmlAttributes(new { @class = "hide" }).Locked(true).Sortable(false).Width(600).ClientTemplate("#=TemplateEngine('inventoryTemplate',data)#");
                                 x.Bound(y => y.serialcode).Title("Seri No").Width(130).Hidden(false);
                                 x.Bound(y => y.code).Title("Envanter Kodu").Width(150).Hidden(false);
                                 x.Bound(y => y.productId_Title).Title("Ürün Bilgisi").Width(220).Hidden(false);
                                 x.Bound(y => y.lastActionType_Title).Title("Durumu").Filterable(filterable => filterable.UI("FilterMenuInventoryLastStatus")).Width(130).Hidden(false);
                                 x.Bound(y => y.lastActionDataCompanyId_Title).Title("Cari Konumu").Width(200).Hidden(false);
                                 x.Bound(y => y.lastActionDataId_Title).Title("Depo Konumu").Width(200).Hidden(false);
                             })
                             .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                             .ToolBar(x =>
                             {
                                 x.Custom().Text("<i data-original-title='Envanter Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWPRD_Inventory", new { area = "PRD" }));
                                 x.Custom().Text("<i data-original-title='Envanter Detayı' class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-modal", "false" }, { "data-blank", "true" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWPRD_Inventory", new { area = "PRD" }));
                                 // x.Custom().Text("<i title='Hareket Detayı' class='fa fa-trash'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWPRD_Inventory", new { area = "PRD" }));
                             }))
						</div>
					}

					<div class="tab-pane @(Model.stockType == (short)EnumPRD_ProductStockType.SeriNoluTakip ? "" : "active")" data-href="@Url.Action("DataSource", "VWPRD_StockSummary", new { area = "CMP" })" id="VWPRD_StockSummaryStorages">
						<h4><i class="icon-home-4 text-success"></i> ŞUBE/DEPO STOK ÖZETİ </h4>

						@(Html.Akilli()
                            .Grid<Infoline.WorkOfTime.BusinessData.VWPRD_StockSummary>("VWPRD_StockSummaryStorage")
                            .DataSource(x => x.Ajax().Read(r => r.Action("DataSourceIndex", "VWPRD_StockSummary", new { area = "PRD" })).Filter(a => a.stockTable == "CMP_Storage" && a.productId == Model.id).PageSize(25))
                            .Columns(x =>
                            {
                                x.Bound(y => y.stockCompanyId_Title).Title("Cari").Width(500);
                                x.Bound(y => y.stockId_Title).Title("Şube/Depo/Kısım").Width(500);
                                x.Bound(y => y.quantity).Title("Miktar").ClientTemplate("<span style='color:#=(quantity<0 ? 'red' : 'green')#'>#:kendo.toString(quantity, 'n2')# #:unitId_Title#</span> ").Width(180);
                                x.Bound(y => y.unitId_Title).Title("Birim").Hidden(true);
                            })
                            .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                            .ToolBar(x =>
                            {
                                x.Custom().Text("<i data-original-title='Stok Hareketi' class='icon-exchange-1'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-storage", "detail" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWPRD_StockSummary", new { area = "PRD" }));
                                x.Custom().Text("<i data-original-title='Envanter Özeti' class='icon-buffer'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-productStorage", "detail" }, { "data-default", "" } }).Url(Url.Action("DetailInventory", "VWPRD_Inventory", new { area = "PRD" }));
                            }
                            ))
					</div>

					<div class="tab-pane" data-href="@Url.Action("DataSource", "VWPRD_StockSummary", new { area = "CMP" })" id="VWPRD_StockSummaryPersons">
						<h4><i class="icon-adult text-success"></i> PERSONEL STOK ÖZETİ </h4>

						@(Html.Akilli()
                             .Grid<Infoline.WorkOfTime.BusinessData.VWPRD_StockSummary>("VWPRD_StockSummaryPerson")
                             .DataSource(x => x.Ajax().Read(r => r.Action("DataSourceIndex", "VWPRD_StockSummary", new { area = "PRD" })).Filter(a => a.stockTable == "SH_User" && a.productId == Model.id).PageSize(25))
                             .Columns(x =>
                             {

                                 x.Bound(y => y.stockId_Title).Title("Personel").Width(500);
                                 x.Bound(y => y.quantity).Title("Miktar").ClientTemplate("<span style='color:#=(quantity<0 ? 'red' : 'green')#'>#:kendo.toString(quantity, 'n2')# #:unitId_Title#</span> ").Width(180);
                                 x.Bound(y => y.unitId_Title).Title("Birim").Hidden(true);
                             })
                             .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                             .ToolBar(x =>
                             {
                                 x.Custom().Text("<i data-original-title='Stok Hareketi' class='icon-exchange-1'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-person", "detail" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWPRD_StockSummary", new { area = "PRD" }));
                                  x.Custom().Text("<i data-original-title='Envanter Özeti' class='icon-buffer'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-productPerson", "detail" }, { "data-default", "" } }).Url(Url.Action("DetailInventory", "VWPRD_Inventory", new { area = "PRD" }));
                             }))
					</div>


					<div class="tab-pane " data-href="@Url.Action("DataSource", "VWPRD_StockAction", new { area = "CMP" })" id="VWPRD_StockActions">
						<h4><i class="icon-exchange-1 text-success"></i> STOK HAREKETLERİ </h4>

						@(Html.Akilli()
                            .Grid<Infoline.WorkOfTime.BusinessData.VWPRD_StockAction>("VWPRD_StockAction")
                            .DataSource(x => x.Ajax().Read(r => r.Action("DataSourceIndex", "VWPRD_StockAction", new { area = "PRD" })).Filter(a => a.stockTable == "CMP_Storage" && a.productId == Model.id).PageSize(25))
                            .Groupable(a => a.Enabled(true))
                            .Scrollable(a => a.Height(440))
                            .Columns(x =>
                            {

                                x.Bound(y => y.type_Title).Title("İşlem Tipi").Width(140);
                                x.Bound(y => y.stockCompanyId_Title).Title("İşlemi Gerçekleştiren Cari").Width(330);
                                x.Bound(y => y.stockId_Title).Title("İşlemi Gerçekleştiren Şube/Depo/Kısım").Width(280);
                                x.Bound(y => y.dataCompanyId_Title).Title("Cari").Width(310);
                                x.Bound(y => y.dataId_Title).Title("Şube/Depo/Kısım  - Pesonel").Width(300);
                                x.Bound(y => y.productId_Title).Title("Ürün").Width(300);
                                x.Bound(y => y.totalQuantity).Title("Miktar").ClientTemplate("<span style='color:#=(totalQuantity<0 ? 'red' : 'green')#'>#:kendo.toString(totalQuantity, 'n2')# #:unitId_Title#</span> ").Width(150).Format("{0:N2}");
                                x.Bound(y => y.serialCodes).Title("Seri Kodları").Width(400);
                                x.Bound(y => y.unitId_Title).Title("Birim").Hidden(true);
                                x.Bound(y => y.unitPrice).Title("Birim Fiyat").Width(120).Format("{0:N2} TL");
                                x.Bound(y => y.totalPrice).Title("Tutar").Width(100).Format("{0:N2} TL");
                                x.Bound(y => y.currency_Title).Title("Birim").Hidden(true);
                                x.Bound(y => y.createdby_Title).Title("İşlemi Gerçekleştiren").Width(180);
                                x.Bound(y => y.created).Title("İşlemi Tarihi").Width(180).Format(Extensions.DateFormatFull(true));
                                x.Bound(y => y.code).Title("Evrak Kodu").Width(150);
                                x.Bound(y => y.date).Title("Evrak Tarihi").Width(150).Format(Extensions.DateFormatFull(true));
                            })
                            .Events(a => a.ExcelExport("Kendo_CustomExport"))
                            .Selectable(x => x.Mode(GridSelectionMode.Single))
                        //.ToolBar(x =>
                        //{
                        //    x.Custom().Text("<i class='fa fa-info-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWPRD_StockAction", new { area = "PRD" }));
                        //}
                        //)
                        )
					</div>

					<div class="tab-pane" data-href="@Url.Action("DataSource", "VWPRD_ProductBounty", new { area = "PRD" })" id="VWPRD_ProductBounties">
						<h4><i class="icon-star-empty text-success"></i> ÜRÜN PRİMLERİ </h4>
						@(Html.Akilli()
							.Grid<Infoline.WorkOfTime.BusinessData.VWPRD_ProductBounty>("VWPRD_ProductBounty")
							.DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWPRD_ProductBounty", new { area = "PRD" })).Filter(t => t.productId == Model.id).PageSize(25).Sort(t => t.Add(p => p.created).Descending()))
							  .Scrollable(a => a.Height(485))
							.Columns(x =>
							{
							x.Bound(y => y.companyId_Title).Title("Cari Firma").Format("{0:N2}").Width(130);
							x.Bound(y => y.personId_Title).Title("Personel").Width(180).Format(Extensions.DateFormatShort(true));
							x.Bound(y => y.amount).Title("Bitiş Tarihi").Width(180).Format("{0:N2} ₺");})
                            .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                            .ToolBar(x =>
							{
	                    	x.Custom().Text("<i data-original-title='Ürüne Prim Ekle' class='fa fa-plus-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWPRD_ProductBounty", new { area = "PRD", productId = Model.id }));
	                    	x.Custom().Text("<i title='Ürün Primini Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWPRD_ProductBounty", new { area = "PRD" }));
	                    }))
	 				</div>
            
					<div class="tab-pane" data-href="@Url.Action("DataSource", "VWPRD_ProductPointSelling", new { area = "CMP" })" id="VWPRD_ProductPointSellings">
						<h4><i class="icon-star-empty text-success"></i> SATIŞ PUANI GEÇMİŞİ </h4>
						@(Html.Akilli()
                            .Grid<Infoline.WorkOfTime.BusinessData.VWPRD_ProductPointSelling>("VWPRD_ProductPointSelling")
                            .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWPRD_ProductPointSelling", new { area = "PRD" })).Filter(t => t.productId == Model.id).PageSize(25).Sort(t => t.Add(p => p.endDate)))
                              .Scrollable(a => a.Height(485))
                            .Columns(x =>
                            {
                                x.Bound(y => y.point).Title("Ürün Puanı").Format("{0:N2}").Width(130);
                                x.Bound(y => y.startDate).Title("Başlangıç Tarihi").Width(180).Format(Extensions.DateFormatShort(true));
                               x.Bound(y => y.endDate).Title("Bitiş Tarihi").Width(180).Format(Extensions.DateFormatShort(true));
                            })
                            .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                            .ToolBar(x =>
                            {
                                x.Custom().Text("<i data-original-title='Satış Puanı Ekle' class='fa fa-plus-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWPRD_ProductPointSelling", new { area = "PRD", productId = Model.id }));
                                x.Custom().Text("<i title='Ürün Puanı Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWPRD_ProductPointSelling", new { area = "PRD" }));
                            }))
					</div>

					<div class="tab-pane" data-href="@Url.Action("DataSource","VWPRD_ProductMateriel", new { area = "CMP" })" id="VWPRD_ProductMateriels">
						<h4><i class="icon-flow-tree text-success"></i> ÜRÜN AĞACI </h4>

						@(Html.Akilli()
                            .Grid<Infoline.WorkOfTime.BusinessData.VWPRD_ProductMateriel>("VWPRD_ProductMateriel")
                            .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWPRD_ProductMateriel", new { area = "PRD" })).PageSize(25).Filter(t => t.productId == Model.id))
                             .Scrollable(a => a.Height(485))
                            .Columns(x =>
                            {
                                x.Bound(y => y.materialId_Title).Title("Materyal Ürün");
                                x.Bound(y => y.quantity).Title("Miktar").ClientTemplate("<span data-toggle=\"tooltip\" title=\"#=quantity#\">#if (quantity != null) {#  #=quantity# #=unitId_Title# #}#</span>").Width(150);
                            })
                            .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                            .ToolBar(x =>
                            {
                                x.Custom().Text("<i data-original-title='Materyal Ekle' class='fa fa-plus-circle'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWPRD_ProductMateriel", new { area = "PRD", productId = Model.id }));
                                x.Custom().Text("<i data-original-title='Materyali Düzenle' class='fa fa-edit'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWPRD_ProductMateriel", new { area = "PRD", productId = Model.id }));
                                x.Custom().Text("<i data-original-title='Materyal Sil' class='fa fa-trash'></i>").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWPRD_ProductMateriel", new { area = "PRD" }));
                            }))
					</div>

					<div class="tab-pane" id="VWPRD_ProductFiles">
						<h4><i class="icon-attach text-success"></i> ÜRÜN DOSYALARI </h4>
						@Html.Action("Preview", "Files", new { area = "", DataId = Model.id, DataTable = "PRD_Product" })
					</div>





				</div>

            </div>
        </section>

    </div>
</div>

<script type="text/javascript">
    $(document)
        .on("selected:grid", "#VWPRD_StockSummaryStorage", function (e, res) {
            var detail = $('[data-storage="detail"]');
            var dataProduct = $('[data-productStorage="detail"]');
            $(detail).attr("data-href", '/PRD/VWPRD_StockSummary/Detail?productId=' + res.productId + '&stockId=' + res.stockId + '&stockTable=' + res.stockTable);
            if (res.stockType == 2 && res.quantity != 0) {
                $(dataProduct).show();
                $(dataProduct).attr("data-href", '/PRD/VWPRD_Inventory/DetailInventory?productId=' + res.productId + '&stockId=' + res.stockId);
            }
            else {
                $(dataProduct).hide();
            }
        })

        .on("selected:grid", "#VWPRD_StockSummaryPerson", function (e, res) {
            var dataProduct = $('[data-productPerson="detail"]');
            var detail = $('[data-person="detail"]');
            $(detail).attr("data-href", '/PRD/VWPRD_StockSummary/Detail?productId=' + res.productId + '&stockId=' + res.stockId + '&stockTable=' + res.stockTable);
            if (res.stockType == 2 && res.quantity != 0) {
                $(dataProduct).show();
                $(dataProduct).attr("data-href", '/PRD/VWPRD_Inventory/DetailInventory?productId=' + res.productId + '&stockId=' + res.stockId);
            }
            else {
                $(dataProduct).hide();
            }
        });
</script>