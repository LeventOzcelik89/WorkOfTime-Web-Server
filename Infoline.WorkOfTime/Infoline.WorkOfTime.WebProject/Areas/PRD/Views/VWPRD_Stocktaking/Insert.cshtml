@model Infoline.WorkOfTime.BusinessAccess.VMPRD_StocktakingModel
@{
	ViewBag.Title = "Sayım İşlemi Oluştur";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Insert", "VWPRD_Stocktaking", FormMethod.Post, new Dictionary<string, object>() {
	{ "class", "form-horizontal" },
	{ "role", "form" },
	{ "data-selector", "modalContainer" },
	{ "data-formType", "Ajax" }
}))
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.id)
	@Html.HiddenFor(model => model.status)


	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md req" for="code">Sayım Kodu</label>
		</div>
		<div class="col-md-8">
			@Html.TextBoxFor(model => model.code, new Dictionary<string, object>()
			{
				{"class", "form-control"},
				{"placeholder", "Lütfen Sayım Kodu giriniz.."}
			}).Validate(Validations.TextEverywhere(true))
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md req" for="storageId">Sayım Yapılacak Depo</label>
		</div>
		<div class="col-md-8">
			@(
			      Html.Akilli()
			      .DropDownListFor(model => model.storageId)
			      .OptionLabel("Lütfen sayım yapılacak depoyu seçiniz..")
			      .DataTextField("name")
			      .DataValueField("id")
			      .Action(b => b.Action("DataSourceDropDown", "VWCMP_Storage", new { area = "CMP" }))
			      .Sort(x => x.Add("name").Ascending())
			      .Validate(Validations.Required)
			      .Execute()
			)
		</div>
	</div>


	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md req" for="date">Sayım Tarihi</label>
		</div>
		<div class="col-md-8">
			@(
			      Html.Akilli().
			      DatePickerFor(model => model.date).
			      Placeholder("Lütfen sayım tarihini giriniz..").
			      Format(Extensions.DateFormatShort()).
				  Value(DateTime.Now).
			      Validate(Validations.Required)
			 )
		</div>
	</div>


	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md req" for="responsibleUserId">Sayım Sorumlusu</label>
		</div>
		<div class="col-md-8">
			@(
			      Html.Akilli()
			      .DropDownListFor(model => model.responsibleUserId)
			      .OptionLabel("Lütfen sayım sorumlusu personeli seçiniz..")
			      .DataTextField("FullName")
			      .DataValueField("id")
			      .Action(b => b.Action("DataSourceDropDown", "VWSH_User", new { area = "SH" }))
			      .Sort(x => x.Add("firstname").Ascending())
			      .Validate(Validations.Required)
			      .Execute()
			)
		</div>
	</div>


	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md req" for="stocktakingUsers">Sayıma Katılacak Personeller</label>
		</div>
		<div class="col-md-8">
			@(
			      Html.Akilli()
			      .MultiSelectFor(model => model.stocktakingUserIds)
			      .Placeholder("Lütfen sayıma katılacak personelleri seçiniz..")
			      .DataTextField("FullName")
			      .DataValueField("id")
			      .Action(b => b.Action("DataSourceDropDown", "VWSH_User", new { area = "SH" }))
			      .Sort(x => x.Add("firstname").Ascending())
			      .Validate(Validations.Required)
			      .Execute()
			)
		</div>
	</div>



	<div class="form-group">
		<div class="col-md-4">
			<label class="control-label label-md" for="description">Açıklama</label>
		</div>
		<div class="col-md-8">
			@Html.TextAreaFor(model => model.description, new Dictionary<string, object>()
			{
				{"class", "form-control"},
				{"placeholder", "Lütfen açıklama giriniz.."}
			}).Validate(Validations.TextEverywhere(true))
		</div>
	</div>

	<div class="buttons">
		<button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
		<button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
	</div>
}
