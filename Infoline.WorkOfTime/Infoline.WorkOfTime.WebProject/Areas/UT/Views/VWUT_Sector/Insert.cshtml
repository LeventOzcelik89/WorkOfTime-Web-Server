@model Infoline.WorkOfTime.BusinessData.VWUT_Sector
@{
    ViewBag.Title = "Sektör Tanımları Ekle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" data-selector="modalContainer">

    $(document)
        .on("before:submit", '#VWUT_SectorInsertForm', function (e) {
            var ms = $('#SectorNames').data("kendoMultiSelect");
            if (ms && ms != undefined && ms != null) {
                var value = ms.value();
                if (value.length > 0) {
                    $('#Names').val(value.join(","));
                }
            }
        })

</script>

@using (Html.BeginForm("Insert", "VWUT_Sector", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "id", "VWUT_SectorInsertForm" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id)


    if (!Model.pid.HasValue && !String.IsNullOrEmpty(Model.name))
    {
        <div class="form-group">
            <div class="col-md-4">
                <label class="control-label label-md" for="id">Üst Sektör </label>
            </div>
            <div class="col-md-8">
                @(Html.Akilli()
                  .DropDownListFor(model => model.pid)
                  .OptionLabel("Lütfen Sektör Seçiniz..")
                  .DataTextField("name")
                  .DataValueField("id")
                  .Id("pidSector")
                  .Action(b => b.Action("DataSourceDropDown", "VWUT_Sector", new { area = "UT" }))
                  .Sort(x => x.Add("name").Ascending())
                  .Execute("id")
                )
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.pid)
    }

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Sektör İsmi">Sektör İsmi</label>
        </div>
        <div class="col-md-8">


            @if (!String.IsNullOrEmpty(Model.name))
            {
                @Html.TextBoxFor(model => model.name, new Dictionary<string, object>()
                {
                        {"class", "form-control"},
                        {"placeholder", "Lütfen Sektör İsmi Giriniz.."}
                }).Validate(Validations.TextEverywhere(true))
            }
            else
            {
                @(Html.Akilli()
                    .Tagged("SectorNames").Placeholder("Lütfen eklemek istediğiniz sektör isimlerini enter tuşuna basarak ekleyiniz.").HtmlAttributes(new Dictionary<string, object>()
                    {
                        {"data-role", "taggedInput" },
                        {"style", "width:100%"},
                        {"class", "form-control"},
                    })
                    .DataTextField("name")
                    .DataValueField("name")
                )

                @Html.Hidden("Names")
            }

        </div>
    </div>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
