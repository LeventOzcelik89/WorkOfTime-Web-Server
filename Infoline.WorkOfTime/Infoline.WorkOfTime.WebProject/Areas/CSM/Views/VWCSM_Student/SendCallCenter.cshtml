@model CallCenterSendViewModel
@{
    ViewBag.Title = "Servis Aktarımı";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" data-selector="modalContainer">
    function onChangeCampaignId(e) {
        $('#CallList').empty();
        $('[name="listName"]').val("")

        var value = this.value();
        if (value == "" || value == null) {
            return;
        }

       $('body').loadingModal({ text: 'Kampanya listeleri çekiliyor.Lütfen bekleyiniz.', animation: 'foldingCube', backgroundColor: '#000000' });
        var data = $.ajax({
            url: "/CSM/VWCSM_Student/GetCallList",
            dataType: 'json',
            data: {
                CampaignId: parseInt(value)
            },
            success: function (doc) {
                $('body').loadingModal('destroy');
                var txt = "";
                if (doc.length > 0) {
                    $.each(doc, function (e, item) {
                        txt += '<option value="' + item.ListDescription + '">' + item.ListDescription + ' ' + (item.Status ? "Aktif" : "Pasif") + '</option>';
                    });

                    $('#CallList').append(txt);
                }
            }
        });
    }

    $(document)
        .on('click', '#SendCallCenter [type="submit"]', function (e, item) {
            e.preventDefault();
            if ($(this).hasClass('disabled')) {
                return false;
            }
            var text = "";

            if ($('#ids').val() != "") {
                text = $('#ids').val().split(',').length;
            } else {
                text = $('#VWCSM_Student').data('kendoGrid').dataSource._pristineTotal;
            }

            swal({
                title: "Devam Et ?",
                text: $('#listName').val() + " listesine " + kendo.format("{0:N0}", text) + " adet kaydı eklemek istediğinize emin misiniz?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Evet",
                cancelButtonText: "Hayır",
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {
                    $("#SendCallCenter").attr("data-loadingtitle", $('#listName').val() + " listesine " + kendo.format("{0:N0}", text) + " adet kayıt ekleniyor.");
                    $("#SendCallCenter").trigger("submit");
                } else {

                }
                swal.close();
            });

        })

</script>

@using (Html.BeginForm("SendCallCenter", "VWCSM_Student", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" },
    { "id", "SendCallCenter" },
    { "data-loadingtitle", "Servis aktarım işlemi gerçekleştiriliyor.Lütfen bekleyiniz.." },
}))
{
    @Html.HiddenFor(a => a.ids)
    @Html.HiddenFor(a => a.filter)

    if (string.IsNullOrEmpty(Model.ids))
    {
        <div class="alert alert-warning text-center">
            Filtrelenmiş kayıtları servise göndermek istediğiniz listeyi seçerek veya yeni liste ismi yazarak gönder butonuna basınız.
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center">
            Seçili kayıtları servise göndermek istediğiniz listeyi seçerek veya yeni liste ismi yazarak gönder butonuna basınız.
        </div>
    }

    <div class="form-group">

        <div class="col-md-3">
            <label class="control-label label-md req" for="CampaignId">Kampanyalar</label>
        </div>
        <div class="col-md-9">

            @(Html.Akilli()
              .DropDownList("CampaignId")
              .OptionLabel("Lütfen Kampanya Seçiniz..")
              .MinLength(2)
              .DataValueField("Id")
              .DataTextField("Name")
              .Action(b => b.Action("GetCampaigns", "General", new { area = string.Empty }))
              .Events(e => e.Change("onChangeCampaignId"))
              .Sort(x => x.Add("Name").Ascending())
              .Validate(Validations.Required)
            )

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-3">
            <label class="control-label label-md req" for="selectedList">Liste</label>
        </div>
        <div class="col-md-9">
            @Html.TextBox("listName", "", new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen bir liste seçiniz veya yeni oluşturmak istediğiniz liste ismini giriniz."},
                {"list","CallList" }
            }).Validate(Validations.Required)

            <datalist id="CallList">
            </datalist>
        </div>
    </div>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Gönder</button>
    </div>
}
