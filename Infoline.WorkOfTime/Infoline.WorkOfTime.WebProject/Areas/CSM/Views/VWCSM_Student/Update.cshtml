@model Infoline.WorkOfTime.BusinessAccess.VMCSM_StudentModel
@{
    ViewBag.Title = "Aday Öğrenci Bilgisi Güncelle";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userStatus = (PageSecurity)Session["userStatus"];
}

@using (Html.BeginForm("Update", "VWCSM_Student", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" },
    { "id","VWCSM_StudentUpdateForm" }
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="name">Ad Soyad</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.name, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Adı Soyadı giriniz.."}
            }).Validate(Validations.TextEverywhere(true))
        </div>
    </div>

    if (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.AdayOgrenciAgent)) && userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.AdayOgrenciYonetim)))
    {
        <div class="form-group">
            <div class="col-md-4">
                <label class="control-label label-md req" for="phone">Telefon Numarası</label>
            </div>
            <div class="col-md-8">

                @(Html.Kendo().MaskedTextBoxFor(a => a.phone).HtmlAttributes(new Dictionary<string, object>()
                    {
                        { "style", "width: 100%"},
                        {"class", "form-control"},
                        {"placeholder", "Lütfen Telefon numarasını başında sıfır olmadan (0(506) 987 65 43) giriniz. "},
                    })
                    .Mask("0(000) 000 00 00")
                    .UnmaskOnPost(true)
                    .Validate(Validations.Required)
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label class="control-label label-md" for="email">E-Posta Adresi</label>
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.email, new Dictionary<string, object>()
                {
                    {"placeholder","Eposta adresi(test@test.com)"},
                    {"class","form-control"},
                }).Validate(Validations.EMail(false))

            </div>
        </div>
    }
    else if (userStatus.AuthorizedRoles.Contains(new Guid(SHRoles.AdayOgrenciAgent)))
    {
        @Html.HiddenFor(a => a.phone)
        @Html.HiddenFor(a => a.email)
    }
    else
    {
        <div class="form-group">
            <div class="col-md-4">
                <label class="control-label label-md req" for="phone">Telefon Numarası</label>
            </div>
            <div class="col-md-8">

                @(Html.Kendo().MaskedTextBoxFor(a => a.phone).HtmlAttributes(new Dictionary<string, object>()
                    {
                        { "style", "width: 100%"},
                        {"class", "form-control"},
                        {"placeholder", "Lütfen Telefon numarasını başında sıfır olmadan (0(506) 987 65 43) giriniz. "},
                    })
                    .Mask("0(000) 000 00 00")
                    .UnmaskOnPost(true)
                    .Validate(Validations.Required)
                )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <label class="control-label label-md" for="email">E-Posta Adresi</label>
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.email, new Dictionary<string, object>()
                {
                    {"placeholder","Eposta adresi(test@test.com)"},
                    {"class","form-control"},
                }).Validate(Validations.EMail(false))

            </div>
        </div>
    }



    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="locationId">Konum</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
            .DropDownListFor(model => model.locationId)
            .OptionLabel("Lütfen İl,İlçe Seçiniz..")
            .DataTextField("pid_Title")
            .DataValueField("id")
            .Action(b => b.Action("DataSourceDropDown", "VWUT_Location", new { area = "UT" }))
            .Filter<VWUT_Location>(a => (a.code == "TR" && (a.type == (int)EnumUT_LocationType.İlce)))
            .Sort(x => x.Add("pid_Title").Ascending())
            .Execute())
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="schoolId">Okul</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
            .DropDownListFor(model => model.schoolId)
            .OptionLabel("Lütfen Okul seçiniz..")
            .DataTextField("name")
            .DataValueField("id")
            .Action(b => b.Action("DataSourceDropDown", "VWCSM_School", new { area = "CSM" }))
            .Sort(x => x.Add("name").Ascending())
            .BasicInsert(Url.Action("Insert", "VWCSM_School", new { area = "CSM" }), "name", false)
            .Execute())
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="grade">Sınıf</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli().RadioButtonGroupFor(a => a.grade).Value(EnumCSM_StudentGrade.Sinif12))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="name">Bölüm</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.deparmentCurrent, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen öğrenim gördüğü bölümü giriniz.."}
            }).Validate(Validations.TextEverywhere(false))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="status">İlgilendiği Bölümler</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
            .MultiSelectFor(a => a.StudentDepartmentIds)
            .Placeholder("Lütfen İlgilendiği bölümleri Seçiniz..")
            .DataValueField("id")
            .DataTextField("name")
            .Action(b => b.Action("DataSourceDropDown", "VWCSM_Department", new { area = "CSM" }))
            .Sort(x => x.Add("name").Ascending())
            .TagMode(TagMode.Multiple)
            .BasicInsert(Url.Action("Insert", "VWCSM_Department", new { area = "CSM" }), "name", false)
            .Execute())
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="source">Kaynak Tipi</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli().RadioButtonGroupFor(a => a.source).Value(EnumCSM_StudentSource.Fuar))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="sourceDescription">Kaynak Detayı (Fuar Adı vs.)</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.sourceDescription, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Fuar Adı "}
            })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="isAllowContact">İletişim İzni</label>
        </div>
        <div class="col-md-8">
            @(Html.Kendo().CheckBoxFor(a => a.isAllowContact).Checked(true))
        </div>
    </div>
    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Güncelle</button>
    </div>

}
