@model Infoline.WorkOfTime.BusinessData.VWCSM_Stage
@{
    ViewBag.Title = "Aşamalar Güncelle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Update", "VWCSM_Stage", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="code">Aşama Kodu</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.code, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Aşama Kodu giriniz.."}
            }).Validate(Validations.TextEverywhere(false))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="name">Aşama Adı</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.name, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Aşama Adı giriniz.."}
            }).Validate(Validations.TextEverywhere(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="status">Durumu</label>
        </div>
        <div class="col-md-8">
            @(Html.Akilli()
              .DropDownListFor(model => model.status)
              .OptionLabel("Lütfen Aşamanın Durumunu Seçiniz..")
              .DataValueField("Id").DataTextField("enumDescription")
              .Action(b => b.Action("GetEnums", "General", new { area = string.Empty }))
              .Sort(x => x.Add("enumDescription").Ascending())
              .Filter<Infoline.WorkOfTime.BusinessData.SYS_Enums>(a => a.tableName == "CSM_Stage" && a.fieldName == "status")
              .Execute("enumKey")
              .Validate(Validations.Required)
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="color">Aşama Rengi</label>
        </div>
        <div class="col-md-8">
            @Html.Kendo().ColorPickerFor(model => model.color).Palette(ColorPickerPalette.None).Buttons(false).Validate(Validations.Required)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="description">Açıklama</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.description, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Açıklama giriniz.."}
            }).Validate(Validations.TextEverywhere(false))
        </div>
    </div>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
