@model Infoline.WorkOfTime.BusinessData.VWCSM_School
@{
    ViewBag.Title = "Yeni Okul";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Insert", "VWCSM_School", FormMethod.Post, new Dictionary<string, object>() {
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id, new { @Value = Model.id })


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md req" for="name">Okul Adı</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.name, new Dictionary<string, object>()
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Okul Adı giriniz.."}
            }).Validate(Validations.TextEverywhere(true))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="locationId">Ülke,İl,İlçe</label>
        </div>
        <div class="col-md-8">
            @(
                Html.Akilli()
                .DropDownListFor(model => model.locationId)
                .OptionLabel("Lütfen Ülke,İl,İlçe Seçiniz..")
                .DataTextField("pid_Title")
                .DataValueField("id")
                .Action(b => b.Action("DataSourceDropDown", "VWUT_Location", new { area = "UT" }))
                .Filter<VWUT_Location>(a => (a.code == "TR" && (a.type == (int)EnumUT_LocationType.İlce)) || (a.code != "TR" && a.type == (int)EnumUT_LocationType.Sehir))
                .Sort(x => x.Add("pid_Title").Ascending())
                .Execute()
            )
        </div>
    </div>

    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>
}
