@model Infoline.WorkOfTime.BusinessData.VWHR_StaffNeedsRequester
@{
    ViewBag.Title = "Kayıt Güncelleme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using(Html.BeginForm("Update", "VWHR_StaffNeedsRequester", FormMethod.Post, new Dictionary<string, object>() {  
    { "class", "form-horizontal" },
    { "role", "form" },
    { "data-selector", "modalContainer" },
    { "data-formType", "Ajax" }
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="RequestApprovedId">RequestApprovedId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.RequestApprovedId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen RequestApprovedId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="RequestDate">RequestDate</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DatePickerFor(model => model.RequestDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen RequestDate Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="LocationId">LocationId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.LocationId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen LocationId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="ArrivalType">ArrivalType</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ArrivalType, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ArrivalType Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Education">Education</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Education, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Education Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="MilitaryStatus">MilitaryStatus</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.MilitaryStatus, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen MilitaryStatus Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Language">Language</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Language, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Language Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="LanguageType">LanguageType</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.LanguageType, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen LanguageType Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="DriverLicense">DriverLicense</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.DriverLicense, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen DriverLicense Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="ExprienceYear">ExprienceYear</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ExprienceYear, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ExprienceYear Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="ReferenceId">ReferenceId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.ReferenceId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen ReferenceId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="ReasonForStaffDemand">ReasonForStaffDemand</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ReasonForStaffDemand, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ReasonForStaffDemand Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="EmploymentStatus">EmploymentStatus</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.EmploymentStatus, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen EmploymentStatus Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Gender">Gender</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Gender, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Gender Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="MaritalStatus">MaritalStatus</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.MaritalStatus, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen MaritalStatus Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Travelability">Travelability</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Travelability, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Travelability Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Description">Description</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Description, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Description Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="RetirementDate">RetirementDate</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DatePickerFor(model => model.RetirementDate).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen RetirementDate Girin.."},
            })
            .Format(Extensions.DateFormatShort())
            .Validate(Validations.Required)
            )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="IkApproval">IkApproval</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.IkApproval).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen IkApproval seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="NeedCode">NeedCode</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.NeedCode, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen NeedCode Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="SalaryRangeMin">SalaryRangeMin</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.SalaryRangeMin, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen SalaryRangeMin Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="SalaryRangeMax">SalaryRangeMax</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.SalaryRangeMax, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen SalaryRangeMax Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Comment">Comment</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Comment, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Comment Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="lastStatus">lastStatus</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.lastStatus, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen lastStatus Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="RequestId">RequestId</label>
        </div>
        <div class="col-md-8">
          @(Html.Kendo().DropDownListFor(model => model.RequestId).HtmlAttributes(new Dictionary<string, object>() 
            {
                {"style", "width:100%"},
                {"class", "form-control"},
            })
            .OptionLabel("Lütfen RequestId seçin")
            .Filter(FilterType.Contains)
            .DataTextField("Name")
            .DataValueField("Id")
            .DataSource(s =>
            {
                 s.Read(r =>
                 {
                     r.Action("", "General", new { area = string.Empty }); //General controllerının içine datasının oldugu metodu yaz ilk parametreye method ismini ver
                 });
             })
             .Validate(Validations.Required)
             )
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="LocationId_Title">LocationId_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.LocationId_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen LocationId_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="lastStatus_Title">lastStatus_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.lastStatus_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen lastStatus_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="ReasonForStaffDemand_Title">ReasonForStaffDemand_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ReasonForStaffDemand_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen ReasonForStaffDemand_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="Education_Title">Education_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.Education_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen Education_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="DriverLicense_Title">DriverLicense_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.DriverLicense_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen DriverLicense_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="TotalYonlendirme">TotalYonlendirme</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.TotalYonlendirme, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen TotalYonlendirme Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="HrPosition_Title">HrPosition_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.HrPosition_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen HrPosition_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <label class="control-label label-md" for="HrKeywords_Title">HrKeywords_Title</label>
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.HrKeywords_Title, new Dictionary<string, object>() 
            {
                {"class", "form-control"},
                {"placeholder", "Lütfen HrKeywords_Title Girin.."},
            }).Validate(Validations.Required)
        </div>
    </div>


    <div class="buttons">
        <button class="btn btn-md btn-danger pull-left" data-task="modalClose">Geri</button>
        <button class="btn btn-md btn-success pull-right" type="submit">Kaydet</button>
    </div>

}
