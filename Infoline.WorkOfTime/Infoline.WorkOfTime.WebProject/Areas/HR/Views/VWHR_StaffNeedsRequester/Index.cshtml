@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-xs-12 col-sm-6 col-md-3">
        @Html.Akilli().Card().Color("yellow").Text("Örnek Veri Başlığı").Value("0 Adet").IconClass("fa fa-home")
    </div>
    <div class="col-xs-12 col-sm-6 col-md-3">
        @Html.Akilli().Card().Color("navy").Text("Örnek Veri Başlığı").Value("0 Adet").IconClass("fa fa-home")
    </div>
    <div class="col-xs-12 col-sm-6 col-md-3">
        @Html.Akilli().Card().Color("blue").Text("Örnek Veri Başlığı").Value("0 Adet").IconClass("fa fa-home")
    </div>
    <div class="col-xs-12 col-sm-6 col-md-3">
        @Html.Akilli().Card().Color("red").Text("Örnek Veri Başlığı").Value("0 Adet ").IconClass("fa fa-home")
    </div>
</div>


@(Html.Akilli()
    .Grid<Infoline.WorkOfTime.BusinessData.VWHR_StaffNeedsRequester>("VWHR_StaffNeedsRequester")
    .DataSource(x => x.Ajax().Read(r => r.Action("DataSource", "VWHR_StaffNeedsRequester", new { area = "HR" })).PageSize(25))
    .Columns(x =>
    {
        x.Bound(y => y.id).GridSelector(GridSelectorType.Checkbox);
        x.Bound(y => y.RequestDate).Title("RequestDate").Width(180).Format(Extensions.DateFormatShort(true));
        x.Bound(y => y.ArrivalType).Title("ArrivalType").Width(180);
        x.Bound(y => y.Education).Title("Education").Width(180);
        x.Bound(y => y.MilitaryStatus).Title("MilitaryStatus").Width(180);
        x.Bound(y => y.Language).Title("Language").Width(180);
        x.Bound(y => y.LanguageType).Title("LanguageType").Width(180);
        x.Bound(y => y.DriverLicense).Title("DriverLicense").Width(180);
        x.Bound(y => y.ExprienceYear).Title("ExprienceYear").Width(180);
        x.Bound(y => y.ReasonForStaffDemand).Title("ReasonForStaffDemand").Width(180);
        x.Bound(y => y.EmploymentStatus).Title("EmploymentStatus").Width(180);
        x.Bound(y => y.Gender).Title("Gender").Width(180);
        x.Bound(y => y.MaritalStatus).Title("MaritalStatus").Width(180);
        x.Bound(y => y.Travelability).Title("Travelability").Width(180);
        x.Bound(y => y.Description).Title("Description").Width(180);
        x.Bound(y => y.RetirementDate).Title("RetirementDate").Width(180).Format(Extensions.DateFormatShort(true));
        x.Bound(y => y.IkApproval).Title("IkApproval").Width(180);
        x.Bound(y => y.NeedCode).Title("NeedCode").Width(180);
        x.Bound(y => y.SalaryRangeMin).Title("SalaryRangeMin").Width(180);
        x.Bound(y => y.SalaryRangeMax).Title("SalaryRangeMax").Width(180);
        x.Bound(y => y.Comment).Title("Comment").Width(180);
        x.Bound(y => y.lastStatus).Title("lastStatus").Width(180);
        x.Bound(y => y.LocationId_Title).Title("LocationId_Title").Width(180);
        x.Bound(y => y.lastStatus_Title).Title("lastStatus_Title").Width(180);
        x.Bound(y => y.ReasonForStaffDemand_Title).Title("ReasonForStaffDemand_Title").Width(180);
        x.Bound(y => y.Education_Title).Title("Education_Title").Width(180);
        x.Bound(y => y.DriverLicense_Title).Title("DriverLicense_Title").Width(180);
        x.Bound(y => y.TotalYonlendirme).Title("TotalYonlendirme").Width(180);
        x.Bound(y => y.HrPosition_Title).Title("HrPosition_Title").Width(180);
        x.Bound(y => y.HrKeywords_Title).Title("HrKeywords_Title").Width(180);
    })
    .Selectable(x => x.Mode(GridSelectionMode.Multiple))
    .ToolBar(x =>
    {
        x.Custom().Text("Ekle").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "always" }, { "data-method", "GET" } }).Url(Url.Action("Insert", "VWHR_StaffNeedsRequester", new { area = "HR" }));
        x.Custom().Text("Düzenle").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-method", "GET" } }).Url(Url.Action("Update", "VWHR_StaffNeedsRequester", new { area = "HR" }));
        x.Custom().Text("Detay").HtmlAttributes(new Dictionary<string, object>() { { "data-show", "single" }, { "data-default", "" } }).Url(Url.Action("Detail", "VWHR_StaffNeedsRequester", new { area = "HR" }));
        x.Custom().Text("Sil").HtmlAttributes(new Dictionary<string, object>() { { "data-ask", "" } }).Url(Url.Action("Delete", "VWHR_StaffNeedsRequester", new { area = "HR" }));
    }))
