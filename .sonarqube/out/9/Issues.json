{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Derleyicisi",
        "version": "3.11.0.0",
        "fileVersion": "3.11.0-4.21602.3 (fc14a135)",
        "semanticVersion": "3.11.0",
        "language": "tr-TR"
      },
      "results": [
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'sysobjects' to match pascal case naming rules, consider using 'Sysobjects'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/PROJELER/Infoline-Bilgi-Teknolojileri/WorkOfTime-Web-Server/Infoline.WorkOfTime.PublishLater/Program.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 22,
                  "endLine": 83,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'JsonData'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/PROJELER/Infoline-Bilgi-Teknolojileri/WorkOfTime-Web-Server/Infoline.WorkOfTime.PublishLater/Program.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 32,
                  "endLine": 64,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        }
      }
    }
  ]
}